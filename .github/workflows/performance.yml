name: performance

permissions: # Principle of least privilege
  contents: read
  actions: read

on:
  push:
    branches: [nightly]

jobs:
  performance-benchmarks:
    runs-on: ubuntu-latest
    env:
      BUILD_MODE: release
      RUST_BACKTRACE: 1
      SCCACHE_CACHE_SIZE: 1G
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: nautilus
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      # https://github.com/step-security/harden-runner
      - uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout repository
        # https://github.com/actions/checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1

      - name: Aggressive disk cleanup (pre-setup)
        if: runner.os == 'Linux'
        run: |
          set -euxo pipefail
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost || true
          sudo rm -rf /usr/local/lib/android /usr/lib/jvm /usr/lib/mono || true
          sudo rm -rf /opt/hostedtoolcache/go /opt/hostedtoolcache/node || true

          if [ -n "${AGENT_TOOLSDIRECTORY:-}" ] && [ -d "$AGENT_TOOLSDIRECTORY" ]; then
            # Remove big toolcache components but keep Python intact
            sudo rm -rf "$AGENT_TOOLSDIRECTORY/CodeQL" \
                        "$AGENT_TOOLSDIRECTORY/Go" \
                        "$AGENT_TOOLSDIRECTORY/Node" \
                        "$AGENT_TOOLSDIRECTORY/node" \
                        "$AGENT_TOOLSDIRECTORY/Ruby" \
                        "$AGENT_TOOLSDIRECTORY/PyPy" \
                        "$AGENT_TOOLSDIRECTORY/R" \
                        "$AGENT_TOOLSDIRECTORY"/Java* || true
          fi

          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo rm -rf /var/lib/apt/lists/* /usr/share/man /usr/share/doc || true
          df -h

      - name: Common setup
        uses: ./.github/actions/common-setup
        with:
          python-version: "3.12"
          free-disk-space: "true"

      - name: Prune unused Docker images
        if: runner.os == 'Linux'
        run: |
          docker image prune -a -f || true

      - name: Install Nautilus CLI and run init postgres
        run: |
          curl -fsSL https://packages.nautechsystems.io/cli/nautilus-cli/install.sh | bash -s -- -b "$HOME/.local/bin"
          nautilus database init --schema ${{ github.workspace }}/schema/sql
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DATABASE: nautilus

      - name: Run Rust tests
        run: make cargo-test

      # TODO: Add nautilus-persistence once required test data available
      - name: Run Rust benchmarks crate-by-crate
        env:
          # Shrink bench artifacts to reduce disk usage
          RUSTFLAGS: -Cdebuginfo=0
          CARGO_PROFILE_BENCH_DEBUG: 0
          CARGO_PROFILE_BENCH_INCREMENTAL: false
        run: make cargo-ci-benches

      - name: Build and install wheel
        uses: ./.github/actions/common-wheel-build
        with:
          python-version: "3.12"
          github_ref: ${{ github.ref }}

      - name: Cleanup build artifacts and caches
        if: runner.os == 'Linux'
        run: |
          set -euxo pipefail
          rm -rf target || true
          rm -rf ~/.cargo/registry ~/.cargo/git || true
          uv cache prune || true
          rm -rf dist build || true

      # Run codspeed once only
      - name: Run benchmarks
        # https://github.com/CodSpeedHQ/action
        uses: CodSpeedHQ/action@0010eb0ca6e89b80c88e8edaaa07cfe5f3e6664d # v3.5.0
        with:
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: uv run --no-sync pytest tests/performance_tests --benchmark-disable-gc --codspeed
