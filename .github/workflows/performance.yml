name: performance

on:
  push:
    branches: [nightly]

jobs:
  performance-benchmarks:
    runs-on: ubuntu-latest
    env:
      BUILD_MODE: release
      RUST_BACKTRACE: 1
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: nautilus
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Common setup
        uses: ./.github/actions/common_setup
        with:
          python-version: "3.12"

      - name: Run pre-commit # Runs again here to check on Python 3.12
        run: make pre-commit

      - name: Cached test data
        id: cached-testdata-large
        uses: actions/cache@v4
        with:
          path: tests/test_data/large
          key: ${{ runner.os }}-large-files-${{ hashFiles('tests/test_data/large/checksums.json') }}
          restore-keys: ${{ runner.os }}-large-files-

      - name: Install Nautilus CLI and run init postgres
        run: |
          make install-cli
          nautilus database init --schema ${{ github.workspace }}/schema/sql
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DATABASE: nautilus

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Run nautilus_core tests
        run: make cargo-test

      - name: Build Python wheel
        run: |
          poetry build --format wheel
          ls -lh dist/

      - name: Install Python wheel
        run: |
          python -m pip install --upgrade poetry-plugin-export
          poetry export --with test --all-extras --format requirements.txt --output requirements-test.txt
          python -m pip install -r requirements-test.txt
          pip install "$(ls dist/*.whl)"

      # Run codspeed once only
      - name: Run benchmarks
        uses: CodSpeedHQ/action@v3.2.0
        with:
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: pytest tests/performance_tests --benchmark-disable-gc --codspeed
