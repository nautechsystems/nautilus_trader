name: codecov

on:
  push:
    branches-ignore:
      - "dependabot/**"

jobs:
  codecov:
    strategy:
      fail-fast: false
      matrix:
        # We only actually run on a single OS/Python pair, but use the matrix
        # form so that our Action calls can mirror the main test flow.
        python-version: [ 3.8 ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Python setup
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Setup Pip caching
      - name: Get Pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip

      # Install build dependencies
      - name: Install build dependencies
        run: python -m pip install --upgrade pip setuptools wheel poetry nox --use-feature=2020-resolver

      # Setup Poetry caching
      - name: Get Poetry cache dir
        id: poetry-cache
        run: echo "::set-output name=dir::$(poetry config cache-dir)"

      - name: Poetry/Nox cache
        uses: actions/cache@v2
        with:
          path: |
            {{ steps.poetry-cache.outputs.dir }}
            .nox
            .pytest_cache
            build
          key: ${{ runner.os }}-${{ matrix.python-version }}-codecov-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.python-version }}-codecov-poetry-

      - name: Install Redis
        run: sudo apt-get install redis-server

      - name: check .nox dir
        run: |
          ls -la .nox || echo ".nox does not exist"
          ls -la .nox/coverage || echo ".nox/coverage does not exist"

      # Run coverage
      - name: Run coverage
        run: |
          redis-server --daemonize yes
          nox -s coverage
          redis-cli shutdown

      # Upload to codecov
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          verbose: true
