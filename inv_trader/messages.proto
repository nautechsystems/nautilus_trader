//--------------------------------------------------------------------------------------------------
// <copyright file="messages.proto" company="Nautech Systems Pty Ltd">
//  Copyright (C) 2015-2018 Nautech Systems Pty Ltd. All rights reserved.
//  The use of this source code is governed by the license as found in the LICENSE.txt file.
//  http://www.nautechsystems.net
// </copyright>
//--------------------------------------------------------------------------------------------------

syntax = "proto3";

option csharp_namespace = "Nautilus.Common.Messages";

package invariance_proto;

/*
Commands to compile protobuf messages per language

CSharp
______
From directory containing proto file;
protoc -I=. --csharp_out=. --grpc_out=. ./messages.proto --plugin=protoc-gen-grpc=grpc_csharp_plugin

Python
______
First install grpcio tools;
python -m pip install grpcio-tools googleapis-common-protos

Then from directory containing proto file;
protoc -I=. --python_out=. ./messages.proto
python -m grpc_tools.protoc -I../../protos --python_out=. --grpc_python_out=. ../../protos/helloworld.proto
 */

enum Resolution {
    TICK = 0;
    SECOND = 1;
    MINUTE = 2;
    HOUR = 3;
    DAY = 4;
}

enum QuoteType {
    BID = 0;
    ASK = 1;
    LAST = 2;
    MID = 4;
}

message Empty {

}

message HeartBeat {
    string from = 1;
    string timestamp = 2;
}

message Tick {
    string symbol = 1;
    string venue = 2;
    double bid = 3;
    double ask = 4;
    string timestamp = 5;
}

message Bar {
    double open = 1;
    double high = 2;
    double low = 3;
    double close = 4;
    int32 volume = 5;
    string timestamp = 6;
}

message BarSpecification {
    QuoteType quoteType = 1;
    Resolution resolution = 2;
    int32 period = 3;
}

message BarData {
    string symbol = 1;
    string venue = 2;
    BarSpecification barSpec = 3;
    Bar bar = 4;
    bool isHistorical = 5;
}

message SubscribeTickData {
    string symbol = 1;
    string venue = 2;
}

message SubscribeTickDataResponse {
    bool success = 1;
}

message UnsubscribeTickData {
    string symbol = 1;
    string venue = 2;
}

message UnsubscribeTickDataResponse {
    bool success = 1;
}

message SubscribeBarData {
    string symbol = 1;
    string venue = 2;
    BarSpecification barSpec = 3;
}

message SubscribeBarDataResponse {
    bool success = 1;
}

message UnsubscribeBarData {
    string symbol = 1;
    string venue = 2;
    BarSpecification barSpec = 3;
}

message UnsubscribeBarDataResponse {
    bool success = 1;
}

service DataServer {
    rpc OnSubscribeTickData(SubscribeTickData) returns (SubscribeTickDataResponse) {}
    rpc OnSubscribeBarData(SubscribeBarData) returns (SubscribeBarDataResponse) {}
    rpc OnUnsubscribeTickData(UnsubscribeTickData) returns (UnsubscribeTickDataResponse) {}
    rpc OnUnsubscribeBarData(UnsubscribeBarData) returns (UnsubscribeBarDataResponse) {}
}

service DataClient {
    rpc OnHeartBeatRequest(HeartBeat) returns (HeartBeat) {}
    rpc OnTickData(Tick) returns (Empty) {}
    rpc OnBarData(BarData) returns (Empty) {}
}
