/* Generated with cbindgen:0.20.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdint.h>
#include <Python.h>

typedef enum LogFormat {
    HEADER,
    GREEN,
    BLUE,
    MAGENTA,
    CYAN,
    YELLOW,
    RED,
    ENDC,
    BOLD,
    UNDERLINE,
} LogFormat;

typedef enum LogLevel {
    DBG,
    INF,
    WRN,
    ERR,
    CRT,
} LogLevel;

/**
 * BufWriter is not C ffi safe
 */
typedef struct Logger Logger;

/**
 * C API
 * BufWriter is not C ffi safe. Box logger and pass it to as an opaque
 * pointer. This works because Logger fields don't need to be accessed only
 * functions are called.
 */
typedef struct CLogger_t {
    struct Logger *_0;
} CLogger_t;

void clogger_free(struct CLogger_t logger);

/**
 * Creates a logger from a valid Python object pointer
 * and a defined logging level
 *
 * # Safety
 *
 * - `ptr` must be borrowed from a valid Python UTF-8 `str`.
 */
struct CLogger_t clogger_new(PyObject *ptr, enum LogLevel level_stdout);

void debug(struct CLogger_t *logger,
           uint64_t timestamp_ns,
           enum LogFormat color,
           const PyObject *component,
           const PyObject *msg);

void info(struct CLogger_t *logger,
          uint64_t timestamp_ns,
          enum LogFormat color,
          const PyObject *component,
          const PyObject *msg);

void warn(struct CLogger_t *logger,
          uint64_t timestamp_ns,
          enum LogFormat color,
          const PyObject *component,
          const PyObject *msg);

void error(struct CLogger_t *logger,
           uint64_t timestamp_ns,
           enum LogFormat color,
           const PyObject *component,
           const PyObject *msg);

void critical(struct CLogger_t *logger,
              uint64_t timestamp_ns,
              enum LogFormat color,
              const PyObject *component,
              const PyObject *msg);

void flush(struct CLogger_t *logger);
