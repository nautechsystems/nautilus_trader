[tool.poetry]
name = "nautilus_trader"
version = "1.149.0"
description = "A high-performance algorithmic trading platform and event-driven backtester"
authors = ["Nautech Systems <info@nautechsystems.io>"]
license = "LGPL-3.0-or-later"
readme = "README.md"
homepage = "https://nautilustrader.io"
repository = "https://github.com/nautechsystems/nautilus_trader"
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
]
include = [
    # Rust source must be included in the source distributions
    { path = "nautilus_core/*[!target]*/*", format = "sdist" },
    # Compiled extensions must be included in the wheel distributions
    { path = "nautilus_trader/**/*.so", format = "wheel" },
    { path = "nautilus_trader/**/*.pyd", format = "wheel" },
]

[build-system]
requires = [
    "setuptools",
    "poetry-core>=1.0.8",
    "numpy>=1.23.1",
    "Cython==3.0.0a9",  # Pinned at 3.0.0a9 due coverage
]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
script = "build.py"
generate-setup-file = false

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
cython = "3.0.0a9"  # Pinned at 3.0.0a9 due coverage
aiodns = "^3.0.0"
aiohttp = "^3.8.1"
click = "^8.1.3"
cloudpickle = "^2.1.0"
frozendict = "^2.3.2"
fsspec = "^2022.5.0"
msgspec = "^0.7.1"
numpy = "^1.23.1"
pandas = "^1.4.3"
psutil = "^5.9.1"
pyarrow = "^8.0.0"
pydantic = "^1.9.1"
pytz = "^2022.1"
tabulate = "^0.8.10"
toml = "^0.10.2"
tqdm = "^4.64.0"
uvloop = { version = "^0.16.0", markers = "sys_platform != 'win32'" }
hiredis = { version = "^2.0.0", optional = true }
hyperopt = { version = "^0.2.7", optional = true }
ib_insync = { version = "^0.9.70", optional = true }
redis = { version = "^4.3.4", optional = true }
# Removed due to 3.10 windows build issue - https://github.com/docker/docker-py/issues/2902
# docker = {version = "^5.0.3", optional = true }

[tool.poetry.dev-dependencies]
# coverage 5.x is currently broken for Cython
# https://github.com/cython/cython/issues/3515
coverage = "4.5.4"  # Pinned at 4.5.4 due Cython
nox = "^2022.1.7"
numpydoc = "^1.4.0"
pre-commit = "^2.20.0"
pytest = "^7.1.2"
pytest-asyncio = "^0.18.3"  # Pinned at 0.18.x due breaking changes for 0.19.x
pytest-benchmark = "^3.4.1"
pytest-cov = "2.10.1"  # Pinned at 2.10.1 due coverage 4.5.4
pytest-mock = "^3.8.2"
pytest-xdist = { version = "^2.5.0", extras = ["psutil"] }
linkify-it-py = "^2.0.0"
myst-parser = "^0.18.0"
sphinx_comments = "^0.0.3"
sphinx_copybutton = "^0.5.0"
sphinx-external-toc = "^0.3.0"
sphinx-material = "^0.0.35"
sphinx_togglebutton = "^0.3.0"

[tool.poetry.extras]
hyperopt = ["hyperopt"]
ib = ["ib_insync"]
redis = ["hiredis", "redis"]

##########################################################
# Test configs                                           #
##########################################################
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-ra --new-first --failed-first --doctest-modules --doctest-glob=\"*.pyx\""
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
