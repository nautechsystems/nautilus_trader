import pandas as pd
import pytz
from typing import Any

from nautilus_trader.core.nautilus_pyo3 import micros_to_nanos as micros_to_nanos
from nautilus_trader.core.nautilus_pyo3 import millis_to_nanos as millis_to_nanos
from nautilus_trader.core.nautilus_pyo3 import nanos_to_micros as nanos_to_micros
from nautilus_trader.core.nautilus_pyo3 import nanos_to_millis as nanos_to_millis
from nautilus_trader.core.nautilus_pyo3 import nanos_to_secs as nanos_to_secs
from nautilus_trader.core.nautilus_pyo3 import secs_to_millis as secs_to_millis
from nautilus_trader.core.nautilus_pyo3 import secs_to_nanos as secs_to_nanos

def unix_nanos_to_dt(nanos: int) -> pd.Timestamp: ...
def dt_to_unix_nanos(dt: pd.Timestamp) -> int: ...
def unix_nanos_to_iso8601(unix_nanos: int, nanos_precision: bool = True) -> str: ...
def format_iso8601(dt: pd.Timestamp, nanos_precision: bool = True) -> str: ...
def format_optional_iso8601(dt: pd.Timestamp | None, nanos_precision: bool = True) -> str: ...
def maybe_unix_nanos_to_dt(nanos: int | None) -> pd.Timestamp | None: ...
def maybe_dt_to_unix_nanos(dt: pd.Timestamp | None) -> int | None: ...
def is_datetime_utc(dt: Any) -> bool: ...
def is_tz_aware(time_object: Any) -> bool: ...
def is_tz_naive(time_object: Any) -> bool: ...
def as_utc_timestamp(dt: Any) -> Any: ...
def as_utc_index(data: pd.DataFrame) -> Any: ...
def time_object_to_dt(time_object: pd.Timestamp | str | int | None) -> pd.Timestamp | None: ...
def max_date(date1: pd.Timestamp | str | int | None = None, date2: str | int | None = None) -> pd.Timestamp | None: ...
def min_date(date1: pd.Timestamp | str | int | None = None, date2: str | int | None = None) -> pd.Timestamp | None: ...