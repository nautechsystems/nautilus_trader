var searchIndex = JSON.parse('{\
"nautilus_backtest":{"doc":"","t":"ADDLLLLLLLLLLLLLLFFFFLLLLLL","n":["engine","TimeEventAccumulator","TimeEventAccumulatorAPI","advance_clock","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drain","from","from","into","into","new","time_event_accumulator_advance_clock","time_event_accumulator_drain","time_event_accumulator_drop","time_event_accumulator_new","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"nautilus_backtest"],[1,"nautilus_backtest::engine"]],"d":["","Provides a means of accumulating and draining time event …","","Advance the given clock to the <code>to_time_ns</code>.","","","","","","","","Drain the accumulated time event handlers in sorted order …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Initializes a new <code>TimeEventAccumulator</code> instance.","","","","","","","","","",""],"i":[0,0,0,1,1,5,1,5,1,5,5,1,1,5,1,5,1,0,0,0,0,1,5,1,5,1,5],"f":[0,0,0,[[1,2,3,4]],[[]],[[]],[[]],[[]],[[],1],[5],[5],[1,[[7,[6]]]],[[]],[[]],[[]],[[]],[[],1],[[5,8,3,9]],[5,10],[5],[[],5],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12]],"c":[],"p":[[3,"TimeEventAccumulator"],[3,"TestClock"],[6,"UnixNanos"],[15,"bool"],[3,"TimeEventAccumulatorAPI"],[3,"TimeEventHandler"],[3,"Vec"],[3,"TestClock_API"],[15,"u8"],[3,"CVec"],[4,"Result"],[3,"TypeId"]]},\
"nautilus_common":{"doc":"","t":"AAAAAAAAAIDDDLLLLLLLKLLKLLLLLLLLLLLKLLLKLLKLLKLLLKLLKLLKLLKLLKLLKLLKLLKLLLLLLLLLLLLLLLDDLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFLLLLLLFNNEENNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLMLLMMMMLLLLLMLLLLLLLDLLLLLLFFFFFFFLLLFDDDILLLLLLLMKLLLLLLLLFLLLMMLLLLLLMLLLLMKMMKLLLMLKLMMLLLLLLLLLLMMLLLFFFFF","n":["clock","clock_api","enums","logging","logging_api","msgbus","testing","timer","timer_api","Clock","LiveClock","MonotonicClock","TestClock","advance_time","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancel_timer","cancel_timer","cancel_timer","cancel_timers","cancel_timers","cancel_timers","default","from","from","from","get_timers","into","into","into","match_handlers_py","new","new","new","new","next_time_ns","next_time_ns","next_time_ns","register_default_handler","register_default_handler","register_default_handler","register_default_handler_py","register_default_handler_py","register_default_handler_py","set_time","set_time_alert_ns_py","set_time_alert_ns_py","set_time_alert_ns_py","set_timer_ns_py","set_timer_ns_py","set_timer_ns_py","timer_count","timer_count","timer_count","timer_names","timer_names","timer_names","timestamp","timestamp","timestamp","timestamp_ms","timestamp_ms","timestamp_ms","timestamp_ns","timestamp_ns","timestamp_ns","timestamp_us","timestamp_us","timestamp_us","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unix_timestamp_micros","unix_timestamp_millis","unix_timestamp_nanos","unix_timestamp_secs","LiveClock_API","TestClock_API","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","from","from","into","into","live_clock_drop","live_clock_new","live_clock_timestamp","live_clock_timestamp_ms","live_clock_timestamp_ns","live_clock_timestamp_us","test_clock_advance_time","test_clock_cancel_timer","test_clock_cancel_timers","test_clock_drop","test_clock_new","test_clock_next_time_ns","test_clock_register_default_handler","test_clock_set_time","test_clock_set_time_alert_ns","test_clock_set_timer_ns","test_clock_timer_count","test_clock_timer_names","test_clock_timestamp","test_clock_timestamp_ms","test_clock_timestamp_ns","test_clock_timestamp_us","try_from","try_from","try_into","try_into","type_id","type_id","vec_time_event_handlers_drop","Blue","Bold","ComponentState","ComponentTrigger","Critical","Cyan","Debug","Degrade","DegradeCompleted","Degraded","Degrading","Dispose","DisposeCompleted","Disposed","Disposing","Endc","Error","Fault","FaultCompleted","Faulted","Faulting","Green","Header","Info","Initialize","LogColor","LogFormat","LogLevel","Magenta","Normal","PreInitialized","Ready","Red","Reset","ResetCompleted","Resetting","Resume","ResumeCompleted","Resuming","Running","Start","StartCompleted","Starting","Stop","StopCompleted","Stopped","Stopping","Underline","Warning","Yellow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","component_state_from_cstr","component_state_to_cstr","component_trigger_from_cstr","component_trigger_to_cstr","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_repr","from_repr","from_repr","from_repr","from_repr","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","into","into","into","into","into","log_color_from_cstr","log_color_to_cstr","log_level_from_cstr","log_level_to_cstr","partial_cmp","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","LogEvent","Logger","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","critical","debug","deserialize","error","fmt","fmt","from","from","info","instance_id","into","into","is_bypassed","level_file","level_stdout","machine_id","new","send","serialize","to_owned","to_string","trader_id","try_from","try_from","try_into","try_into","type_id","type_id","warn","Logger_API","borrow","borrow_mut","deref","deref_mut","from","into","logger_drop","logger_get_instance_id","logger_get_machine_id_cstr","logger_get_trader_id_cstr","logger_is_bypassed","logger_log","logger_new","try_from","try_into","type_id","wait_until","TestTimer","TimeEvent","TimeEventHandler","Timer","advance","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callback_ptr","cancel","cancel","clone","clone","clone","clone_into","clone_into","clone_into","cmp","dummy","eq","eq","equivalent","event","event_id","fmt","fmt","fmt","from","from","from","interval_ns","into","into","into","into_iter","is_expired","iterate_next_time","name","name","new","new","new","next","next_time_ns","partial_cmp","pop_event","pop_event","start_time_ns","stop_time_ns","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","ts_event","ts_init","type_id","type_id","type_id","time_event_clone","time_event_drop","time_event_name_to_cstr","time_event_new","time_event_to_cstr"],"q":[[0,"nautilus_common"],[9,"nautilus_common::clock"],[86,"nautilus_common::clock_api"],[129,"nautilus_common::enums"],[287,"nautilus_common::logging"],[324,"nautilus_common::logging_api"],[341,"nautilus_common::testing"],[342,"nautilus_common::timer"],[409,"nautilus_common::timer_api"]],"d":["","","","","","","","","","Represents a type of clock.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Assumes time events are sorted by their <code>ts_event</code>.","Return a new Clock.","Initializes a new <code>MonotonicClock</code> instance.","","","","","","Register a default event handler for the clock. If a [<code>Timer</code>…","","","","","","","Set a [<code>Timer</code>] to alert at a particular time. Optional …","","","Set a [<code>Timer</code>] to start alerting at every interval between …","","","Return the count of active timers in the clock.","","","Return the names of active timers in the clock.","","","Return the current UNIX time in seconds.","","","Return the current UNIX time in milliseconds (ms).","","","Return the current UNIX time in nanoseconds (ns).","","","Return the current UNIX time in microseconds (us).","","","","","","","","","","","","Returns the current microseconds since the UNIX epoch …","Returns the current milliseconds since the UNIX epoch …","Returns the current nanoseconds since the UNIX epoch …","Returns the current seconds since the UNIX epoch (unique …","Provides a C compatible Foreign Function Interface (FFI) …","Provides a C compatible Foreign Function Interface (FFI) …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Safety","Safety","","","","Safety","Safety","","Safety","Safety","","","","","","","","","","","","","","The blue log color, typically used with <code>LogLevel::Info</code> log …","Bold log format. This ANSI escape code is used to make the …","The state of a component within the system.","A trigger condition for a component within the system.","The <strong>CRT</strong> critical log level.","The cyan log color, typically used with <code>LogLevel::Info</code> log …","The <strong>DBG</strong> debug log level.","A trigger for the component to degrade.","A trigger when the component has successfully degraded.","When a component has successfully degraded and may not …","When a component is executing its actions on <code>degrade</code>.","A trigger for the component to dispose and release …","A trigger when the component has successfully disposed.","When a component has successfully shut down and released …","When a component is executing its actions on <code>dispose</code>.","Endc log format. This ANSI escape code is used to reset …","The <strong>ERR</strong> error log level.","A trigger for the component to fault.","A trigger when the component has successfully faulted.","When a component has successfully shut down due to a …","When a component is executing its actions on <code>fault</code>.","The green log color, typically used with <code>LogLevel::Info</code> …","Header log format. This ANSI escape code is used for …","The <strong>INF</strong> info log level.","A trigger for the component to initialize.","The log color for log messages.","An ANSI log line format specifier. This is used for …","The log level for log messages.","The magenta log color, typically used with <code>LogLevel::Info</code> …","The default/normal log color.","When a component is instantiated, but not yet ready to …","When a component is able to be started.","The red log color, typically used with <code>LogLevel::Error</code> or …","A trigger for the component to reset.","A trigger when the component has successfully reset.","When a component is executing its actions on <code>reset</code>.","A trigger for the component to resume (after being …","A trigger when the component has successfully resumed.","When a component is started again after its initial start.","When a component is operating normally and can fulfill its …","A trigger for the component to start.","A trigger when the component has successfully started.","When a component is executing its actions on <code>start</code>.","A trigger for the component to stop.","A trigger when the component has successfully stopped.","When a component has successfully stopped.","When a component is executing its actions on <code>stop</code>.","Underline log format. This ANSI escape code is used to …","The <strong>WRN</strong> warning log level.","The yellow log color, typically used with <code>LogLevel::Warning</code>…","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an enum from a Python string.","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a log event which includes a message.","Provides a high-performance logger utilizing a MPSC …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","The instance ID for the logger.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If logging is bypassed.","The minimum log level to write to a log file.","The minimum log level to write to stdout.","The machine ID for the logger.","","","","","","The trader ID for the logger.","","","","","","","","Provides a C compatible Foreign Function Interface (FFI) …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Create a new log event.","Creates a new logger.","","","","Repeatedly evaluates a condition with a delay until it …","","Represents a time event occurring at the event timestamp.","Represents a time event and its associated handler.","","Advance the test timer forward to the given time, …","","","","","","","The event ID.","","Cancels the timer (the timer will not generate an event).","","","","","","","","","","","","The event.","The event ID.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The event name.","","","","","","","","","","","","","","","","","","","","","","The message category","The UNIX timestamp (nanoseconds) when the object was …","","","","","","","Safety","Returns a <code>TimeEvent</code> as a C string pointer."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,1,7,8,1,7,50,1,7,50,1,7,8,8,1,7,1,8,1,7,1,50,8,1,7,50,1,7,50,1,7,50,1,7,1,50,1,7,50,1,7,50,1,7,50,1,7,50,1,7,50,1,7,50,1,7,50,1,7,8,1,7,8,1,7,8,1,7,8,8,8,8,0,0,22,23,22,23,22,23,22,23,22,23,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,22,23,22,23,0,31,32,0,0,30,31,30,29,29,28,28,29,29,28,28,32,30,29,29,28,28,31,32,30,29,0,0,0,31,31,28,28,31,29,29,28,29,29,28,28,29,29,28,29,29,28,28,32,30,31,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,0,0,0,0,30,31,28,29,30,31,32,28,29,30,31,32,28,28,29,29,30,30,31,31,32,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,28,29,30,31,32,0,0,0,0,30,30,31,28,29,30,31,32,28,29,30,31,32,28,28,29,29,30,30,31,31,32,32,28,29,30,31,32,28,29,30,31,32,0,0,41,40,41,40,40,40,41,41,40,41,40,40,41,40,41,41,41,40,41,41,41,41,41,41,40,40,40,41,41,40,41,40,41,40,41,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,0,0,0,0,0,10,4,12,10,4,12,10,12,51,10,4,12,10,4,12,10,12,0,4,12,12,12,4,4,4,12,4,12,10,10,4,12,10,10,10,51,4,10,51,4,10,10,10,12,51,10,10,10,4,12,10,4,4,12,10,4,12,10,4,4,4,12,10,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[[1,6]],[[7,6]],[[]],[1],[7],[[],8],[[]],[[]],[[]],[1,[[11,[9,10]]]],[[]],[[]],[[]],[[1,[5,[4]]],[[5,[12]]]],[[]],[[],8],[[],1],[[],7],[6,2],[[1,6],2],[[7,6],2],[[[14,[13]]]],[[1,[14,[13]]]],[[7,[14,[13]]]],[15],[[1,15]],[[7,15]],[[1,2]],[[9,2,[16,[15]]]],[[1,9,2,[16,[15]]]],[[7,9,2,[16,[15]]]],[[9,17,2,[16,[2]],[16,[15]]]],[[1,9,17,2,[16,[2]],[16,[15]]]],[[7,9,17,2,[16,[2]],[16,[15]]]],[[],18],[1,18],[7,18],[[],[[5,[6]]]],[1,[[5,[6]]]],[7,[[5,[6]]]],[[],19],[1,19],[7,19],[[],17],[1,17],[7,17],[[],17],[1,17],[7,17],[[],17],[1,17],[7,17],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[8,17],[8,17],[8,17],[8,19],0,0,[[]],[[]],[[]],[[]],[22],[23],[22],[23],[[]],[[]],[[]],[[]],[23],[[],23],[23,19],[23,17],[23,17],[23,17],[[22,17,24],25],[[22,26]],[22],[22],[[],22],[[22,26],2],[[22,27]],[[22,17]],[[22,26,2,27]],[[22,26,17,2,2,27]],[22,18],[22,27],[22,19],[22,17],[22,17],[22,17],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[]],[[]],[26,28],[28,26],[26,29],[29,26],[33,[[20,[30]]]],[33,[[20,[31]]]],[[28,28],3],[[29,29],3],[[30,30],3],[[31,31],3],[[32,32],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[28,34],[[20,[35]]]],[[28,34],36],[[29,34],36],[[29,34],[[20,[35]]]],[[30,34],36],[[30,34],36],[[31,34],36],[[31,34],[[20,[35]]]],[[32,34],[[20,[35]]]],[[32,34],36],[[]],[[]],[[]],[[]],[[]],[18,[[16,[28]]]],[18,[[16,[29]]]],[18,[[16,[30]]]],[18,[[16,[31]]]],[18,[[16,[32]]]],[6,[[20,[28]]]],[6,[[20,[29]]]],[6,[[20,[30]]]],[6,[[20,[31]]]],[6,[[20,[32]]]],[[28,37]],[[29,37]],[[30,37]],[[31,37]],[[32,37]],[[]],[[]],[[]],[[]],[[]],[26,31],[31,26],[26,30],[30,26],[[30,30],[[16,[38]]]],[[30,39],20],[[31,39],20],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[6,[[20,[28]]]],[[],20],[[],20],[6,[[20,[29]]]],[6,[[20,[30]]]],[[],20],[6,[[20,[31]]]],[[],20],[[],20],[6,[[20,[32]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[]],[40,40],[[]],[[41,17,31,9,9]],[[41,17,31,9,9]],[33,[[20,[40]]]],[[41,17,31,9,9]],[[40,34],36],[[40,34],36],[[]],[[]],[[41,17,31,9,9]],0,[[]],[[]],0,0,0,0,[[42,9,43,30,[16,[30]],[16,[9]],[16,[9]],[16,[9]],[16,[[11,[9,44]]]],3],41],[[41,17,30,31,9,9]],[[40,39],20],[[]],[[],9],0,[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[41,17,31,9,9]],0,[[]],[[]],[45],[45],[[]],[[]],[45],[45,43],[45,26],[45,26],[45,24],[[45,17,30,31,26,26]],[[26,26,26,30,30,24,26,26,26,26,24],45],[[],20],[[],20],[[],21],[[46,47]],0,0,0,0,[[10,2],48],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[10],[4,4],[12,12],[10,10],[[]],[[]],[[]],[[12,12],38],[12,12],[[4,4],3],[[12,12],3],[[],3],0,0,[[4,34],36],[[4,34],36],[[12,34],36],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,[2],0,0,[[9,49,2,[16,[2]]]],[[9,43,2,2],4],[[9,17,2,[16,[2]]],10],[10,16],0,[[12,12],[[16,[38]]]],[[43,2],4],[[10,43,2],4],0,0,[[]],[[]],[[]],[[],9],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[[],21],[[],21],[[],21],[4,4],[4],[4,26],[[26,43,17,17],4],[4,26]],"c":[],"p":[[3,"TestClock"],[6,"UnixNanos"],[15,"bool"],[3,"TimeEvent"],[3,"Vec"],[15,"str"],[3,"LiveClock"],[3,"MonotonicClock"],[3,"String"],[3,"TestTimer"],[3,"HashMap"],[3,"TimeEventHandler"],[8,"Fn"],[3,"Box"],[6,"PyObject"],[4,"Option"],[15,"u64"],[15,"usize"],[15,"f64"],[4,"Result"],[3,"TypeId"],[3,"TestClock_API"],[3,"LiveClock_API"],[15,"u8"],[3,"CVec"],[6,"c_char"],[3,"PyObject"],[4,"ComponentState"],[4,"ComponentTrigger"],[4,"LogLevel"],[4,"LogColor"],[4,"LogFormat"],[8,"Deserializer"],[3,"Formatter"],[3,"Error"],[6,"Result"],[8,"Hasher"],[4,"Ordering"],[8,"Serializer"],[3,"LogEvent"],[3,"Logger"],[3,"TraderId"],[3,"UUID4"],[4,"Value"],[3,"Logger_API"],[8,"FnMut"],[3,"Duration"],[8,"Iterator"],[6,"TimedeltaNanos"],[8,"Clock"],[8,"Timer"]]},\
"nautilus_core":{"doc":"","t":"AAAAAAAAFFFFFFFFDLLMLLFFLLLLLLMMLLLLLFFFFFFFFFFFFFILLLLFFFFFGGFFFFFDLLLLLLLLLLLLLLLLLLLLLLLFFFFF","n":["correctness","cvec","datetime","parsing","serialization","string","time","uuid","f64_in_range_inclusive","f64_non_negative","i64_in_range_inclusive","string_contains","u64_in_range_inclusive","u8_equal","u8_in_range_inclusive","valid_string","CVec","borrow","borrow_mut","cap","clone","clone_into","cvec_drop","cvec_new","empty","fmt","fmt","from","from","into","len","ptr","to_owned","to_string","try_from","try_into","type_id","micros_to_nanos","millis_to_nanos","nanos_to_micros","nanos_to_millis","nanos_to_secs","secs_to_millis","secs_to_nanos","unix_nanos_to_iso8601","bytes_to_string_vec","optional_bytes_to_json","precision_from_cstr","precision_from_str","string_vec_to_bytes","Serializable","as_json_bytes","as_msgpack_bytes","from_json_bytes","from_msgpack_bytes","cstr_drop","cstr_to_string","optional_cstr_to_string","pystr_to_string","str_to_cstr","TimedeltaNanos","UnixNanos","duration_since_unix_epoch","unix_timestamp","unix_timestamp_ms","unix_timestamp_ns","unix_timestamp_us","UUID4","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","equivalent","fmt","fmt","from","from","from_str","hash","into","new","serialize","to_cstr","to_owned","to_string","try_from","try_into","type_id","uuid4_eq","uuid4_from_cstr","uuid4_hash","uuid4_new","uuid4_to_cstr"],"q":[[0,"nautilus_core"],[8,"nautilus_core::correctness"],[16,"nautilus_core::cvec"],[37,"nautilus_core::datetime"],[45,"nautilus_core::parsing"],[50,"nautilus_core::serialization"],[55,"nautilus_core::string"],[60,"nautilus_core::time"],[67,"nautilus_core::uuid"]],"d":["","","","","","","","","Check <code>f64</code> value is in range (inclusive).","Check <code>f64</code> value is non negative.","Check <code>i64</code> value is in range (inclusive).","Check string <code>s</code> contains pattern <code>pat</code>.","Check <code>u64</code> value is in range (inclusive).","Check <code>u8</code>s are equal.","Check <code>u8</code> value is in range (inclusive).","Check string <code>s</code> is valid.","<code>CVec</code> is a C compatible struct that stores an opaque …","","","The capacity of vector from which it was allocated. Used …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The number of elements in the block.","Opaque pointer to block of memory storing elements to …","","","","","","Converts microseconds (μs) to nanoseconds (ns).","Converts milliseconds (ms) to nanoseconds (ns).","Converts nanoseconds (ns) to microseconds (μs).","Converts nanoseconds (ns) to milliseconds (ms).","Converts nanoseconds (ns) to seconds.","Converts seconds to milliseconds (ms).","Converts seconds to nanoseconds (ns).","","Convert a C bytes pointer into an owned <code>Vec&lt;String&gt;</code>.","Convert a C bytes pointer into an owned …","Return the decimal precision inferred from the given C …","Return the decimal precision inferred from the given …","","Represents types which are serializable for JSON and …","Serialize an object to JSON encoded bytes.","Serialize an object to <code>MsgPack</code> encoded bytes.","Deserialize an object from JSON encoded bytes.","Deserialize an object from <code>MsgPack</code> encoded bytes.","Drops the C string memory at the pointer.","Convert a C string pointer into an owned <code>String</code>.","Convert a C string pointer into an owned <code>Option&lt;String&gt;</code>.","Returns an owned string from a valid Python object pointer.","Create a C string pointer to newly allocated memory from a …","Represents a timedelta in nanoseconds.","Represents a timestamp in nanoseconds since UNIX epoch.","","Returns the current seconds since the UNIX epoch.","Returns the current milliseconds since the UNIX epoch.","Returns the current nanoseconds since the UNIX epoch.","Returns the current microseconds since the UNIX epoch.","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns a <code>UUID4</code> from C string pointer.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,[[1,1,1,2]],[[1,2]],[[3,3,3,2]],[[2,2,2]],[[4,4,4,2]],[[5,5,2,2]],[[5,5,5,2]],[[2,2]],0,[[]],[[]],0,[6,6],[[]],[6],[[],6],[[],6],[[6,7],8],[[6,7],8],[[]],[9,6],[[]],0,0,[[]],[[],10],[[],11],[[],11],[[],12],[1,4],[1,4],[4,4],[4,4],[4,1],[1,4],[1,4],[4,10],[13,[[9,[10]]]],[13,[[16,[[15,[10,14]]]]]],[13,5],[2,5],[[[9,[10]]],13],0,[[],[[11,[[9,[5]],17]]]],[[],[[11,[[9,[5]],18]]]],[[[9,[5]]],[[11,[17]]]],[[[9,[5]]],[[11,[19]]]],[13],[13,10],[13,[[16,[10]]]],[20,10],[2,13],0,0,[[],21],[[],1],[[],4],[[],4],[[],4],0,[[]],[[]],[22,22],[[]],[[],22],[23,[[11,[22]]]],[[22,22],24],[[],24],[[22,7],8],[[22,7],8],[[]],[2,22],[2,[[11,[22]]]],[[22,25]],[[]],[[],22],[[22,26],11],[22,27],[[]],[[],10],[[],11],[[],11],[[],12],[[22,22],5],[13,22],[22,4],[[],22],[22,13]],"c":[],"p":[[15,"f64"],[15,"str"],[15,"i64"],[15,"u64"],[15,"u8"],[3,"CVec"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[3,"String"],[4,"Result"],[3,"TypeId"],[6,"c_char"],[4,"Value"],[3,"HashMap"],[4,"Option"],[3,"Error"],[4,"Error"],[4,"Error"],[3,"PyObject"],[3,"Duration"],[3,"UUID4"],[8,"Deserializer"],[15,"bool"],[8,"Hasher"],[8,"Serializer"],[3,"CStr"],[8,"Serializable"]]},\
"nautilus_indicators":{"doc":"","t":"IAKKKKFKKKDMLLLMLLLLLLLLLLLLLLLLLMMLLLLLLML","n":["Indicator","ema","handle_bar","handle_quote_tick","handle_trade_tick","has_inputs","indicators","is_initialized","name","reset","ExponentialMovingAverage","alpha","arguments","borrow","borrow_mut","count","doc","extract","extract","fmt","from","handle_bar","handle_quote_tick","handle_trade_tick","has_inputs","into","into_py","is_initialized","items_iter","lazy_type_object","name","name_py","new","period","price_type","reset","try_from","try_into","type_id","type_object_raw","update_raw","value","wrap"],"q":[[0,"nautilus_indicators"],[10,"nautilus_indicators::ema"]],"d":["","","","","","","Loaded as nautilus_pyo3.indicators","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,26,26,26,26,0,26,26,26,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[0,0,[1],[2],[3],[[],4],[[5,6],7],[[],4],[[],8],[[]],0,0,[5,[[10,[9]]]],[[]],[[]],0,[5,[[7,[11]]]],[9,[[7,[12]]]],[9,[[7,[12]]]],[[12,13],14],[[]],[[12,1]],[[12,2]],[[12,3]],[12,4],[[]],[[12,5],15],[12,4],[[],16],[[],[[17,[12]]]],[12,8],[12,8],[[18,[20,[19]]],12],0,0,[12],[[],21],[[],21],[[],22],[5,23],[[12,24]],0,[5,[[21,[[10,[9]],25]]]]],"c":[],"p":[[3,"Bar"],[3,"QuoteTick"],[3,"TradeTick"],[15,"bool"],[3,"Python"],[3,"PyModule"],[6,"PyResult"],[3,"String"],[3,"PyAny"],[3,"Py"],[3,"CStr"],[3,"ExponentialMovingAverage"],[3,"Formatter"],[6,"Result"],[6,"PyObject"],[3,"PyClassItemsIter"],[3,"LazyTypeObject"],[15,"usize"],[4,"PriceType"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"PyTypeObject"],[15,"f64"],[3,"PyErr"],[8,"Indicator"]]},\
"nautilus_model":{"doc":"","t":"AAAAAOAAFAAAOADDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENNNAALLLLFAALLLLLLLLAAAALAALLLDDDDMMLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMLMLLMLLLLMMLLLLLLLLLLLLLLLMMLLLLLLLMLLLFFFFFFFFFFFFFFFFFFFFFDMLLLLLLLLLLLLLMLLLLLLMLLLLLMMLLLLLMMLLLFFFDRLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLFFFFFFFDLLMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLFFFFDMLLLLLLLLLLLLLLLLLLLMLLLLLMLMLLMLLMMLLLFFFFNENNEENEENNENNNNNEENNNNNNNNNENNNENNNNNNNNNNNNNNNNNNINNNNNNNNNENNNNNNNNNNENNNNNNENNNNNNNNNNNNNNNNENNEEEENNNNNNENNNNENNNNNNNNNNNNNNNNNNEEENNENNNNNNNNNNNFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAADNDEDNDEDNDEDNDEEDNDEDNDEDNDEDNDENDNDEDNDEDNDEDNDEDNDEDNDENNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLMLLMMLLMMLMLMLMLLMMLLLLLLLLLLLLLLLLMMLMLLLLMMMMLLLLLLLLLLLLMMMMMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMMMMMMMMMLMLMLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMFFFFDNDNEDNDMMMMMMMMMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLMMMMLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMMLLLLLLLLLLMMMMMMMMMMMMLLLLLMMMAAAAAAFAAAAAAAADFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLDLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLDLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLDLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLMLDLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLMLDDLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLMLLLLLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLMLRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFFLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLIKKKLLKKKLLKKKKKKKKKKKKKKKLKLAAAAANEENDNNNNNLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLMLLLLLLDLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLFDDLLLLLLMLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLDLLLLLLLLFFFFFFFLLLLLFFAAAAAAAAANIDENKMKMLLLLKMKMKMLKMKMKMKMKMLLLLMMKMKMLLLLLLLLLLLLLLKMKMKMLLKMKMKMKMLKMKMKMKMMKLKMKMKMKMKMKMKMLKMKMKKLLLLKMKMLLKMKMDLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLDLLLLLLLLLMLLLLLMLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLMLMLLLLMLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLMLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLMLLLLMLLLDLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLDLLLLLLLLLMLLLLLMLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLMLMLLLLMLLLDLLLLLLLLLMLLLLLMLLLLLLLLLMLLMLLLLLLLLMLLLLLLLLLMMLMLMLLLLMLLLDLLLLLLLLLMLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMLMLMLLLLMLLLAAAAAADLLMLMLLMLMLLLDLLLLLMFFFFFFFFMLLLLLLLLLLLLLLMLLMLMLLLLLLLRRFFFFRRDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFFFFMLLLLLLLLLLLLRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFFFFFFMLLLLLLLLLLL","n":["currencies","data","enums","events","identifiers","impl_serialization_for_identifier","instruments","macros","model","orderbook","orders","position","strum_serde","types","AAVE","ACA","ADA","AUD","AVAX","BCH","BNB","BRL","BRZ","BSV","BTC","BTTC","BUSD","CAD","CHF","CNH","CNY","CURRENCY_MAP","CZK","DASH","DKK","DOGE","DOT","EOS","ETH","ETHW","EUR","GBP","HKD","HUF","ILS","INR","JOE","JPY","KRW","LINK","LTC","LUNA","MXN","NBT","NOK","NZD","ONEINCH","PLN","RUB","SAR","SEK","SGD","SOL","THB","TRX","TRY","TRYB","TUSD","USD","USDC","USDP","USDT","VTC","WSB","XAG","XAU","XBT","XEC","XLM","XMR","XRP","XTZ","ZAR","ZEC","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","currency_map","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Bar","Data","Delta","Quote","Trade","bar","bar_api","borrow","borrow_mut","clone","clone_into","data_clone","delta","delta_api","fmt","from","from","from","from","from","get_ts_init","into","order","order_api","quote","quote_api","to_owned","trade","trade_api","try_from","try_into","type_id","Bar","BarSpecification","BarType","BarTypeParseError","aggregation","aggregation_source","arguments","arguments","arguments","as_dict","bar_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","cmp","cmp","deserialize","deserialize","deserialize","doc","doc","doc","eq","eq","eq","equivalent","equivalent","equivalent","extract","extract","extract","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_dict","from_str","get_metadata","hash","hash","hash","high","instrument_id","into","into","into","into","into_py","into_py","into_py","items_iter","items_iter","items_iter","lazy_type_object","lazy_type_object","lazy_type_object","low","new","open","partial_cmp","partial_cmp","price_type","provide","serialize","serialize","serialize","spec","step","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ts_event","ts_init","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","volume","wrap","wrap","wrap","bar_eq","bar_hash","bar_new","bar_new_from_raw","bar_specification_eq","bar_specification_ge","bar_specification_gt","bar_specification_hash","bar_specification_le","bar_specification_lt","bar_specification_new","bar_specification_to_cstr","bar_to_cstr","bar_type_eq","bar_type_ge","bar_type_gt","bar_type_hash","bar_type_le","bar_type_lt","bar_type_new","bar_type_to_cstr","OrderBookDelta","action","arguments","as_dict","borrow","borrow_mut","clone","clone_into","deserialize","doc","eq","equivalent","extract","extract","extract","flags","fmt","fmt","from","from_dict","get_metadata","hash","instrument_id","into","into_py","items_iter","lazy_type_object","new","order","sequence","serialize","to_owned","to_string","try_from","try_into","ts_event","ts_init","type_id","type_object_raw","wrap","orderbook_delta_eq","orderbook_delta_hash","orderbook_delta_new","BookOrder","NULL_ORDER","arguments","as_dict","borrow","borrow_mut","clone","clone_into","deserialize","doc","eq","equivalent","exposure","extract","extract","extract","fmt","fmt","from","from_dict","from_quote_tick","from_trade_tick","hash","into","into_py","items_iter","lazy_type_object","new","order_id","price","serialize","side","signed_size","size","to_book_price","to_owned","to_string","try_from","try_into","type_id","type_object_raw","wrap","book_order_debug_to_cstr","book_order_display_to_cstr","book_order_eq","book_order_exposure","book_order_from_raw","book_order_hash","book_order_signed_size","QuoteTick","arguments","as_dict","ask","ask_size","bid","bid_size","borrow","borrow_mut","clone","clone_into","deserialize","doc","eq","equivalent","extract","extract","extract","extract_price","fmt","fmt","from","from_dict","get_metadata","hash","instrument_id","into","into_py","items_iter","lazy_type_object","new","serialize","to_owned","to_string","try_from","try_into","ts_event","ts_init","type_id","type_object_raw","wrap","quote_tick_eq","quote_tick_hash","quote_tick_new","quote_tick_to_cstr","TradeTick","aggressor_side","arguments","as_dict","borrow","borrow_mut","clone","clone_into","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_dict","get_metadata","hash","instrument_id","into","into_py","items_iter","lazy_type_object","new","price","serialize","size","to_owned","to_string","trade_id","try_from","try_into","ts_event","ts_init","type_id","type_object_raw","wrap","trade_tick_eq","trade_tick_hash","trade_tick_new","trade_tick_to_cstr","Accepted","AccountType","Active","Add","AggregationSource","AggressorSide","Ask","AssetClass","AssetType","AtTheClose","AtTheOpen","BarAggregation","BasisPoints","Betting","Bid","BidAsk","Bond","BookAction","BookType","Buy","Buyer","Call","Canceled","Cash","Cfd","Clear","Closed","Commodity","ContingencyType","ContractExpired","Crypto","Cryptocurrency","CurrencyType","Day","Day","Default","Delete","Denied","DoubleBidAsk","DoubleLast","EndOfSession","Energy","Equity","Expired","External","FX","Fiat","Filled","Flat","Fok","Forward","FromU8","Future","Gtc","Gtd","Halted","Hedging","Hour","Index","IndexPrice","Initialized","InstrumentCloseType","Internal","Ioc","L1_TBBO","L2_MBP","L3_MBO","Last","LastOrBidAsk","LastTrade","Limit","LimitIfTouched","LiquiditySide","Long","Maker","Margin","MarkPrice","Market","MarketIfTouched","MarketStatus","MarketToLimit","Metal","Mid","MidPoint","Millisecond","Minute","Month","Netting","NoAggressor","NoContingency","NoLiquiditySide","NoOrderSide","NoPositionSide","NoTrailingOffset","NoTrigger","Oco","OmsType","Open","Option","OptionKind","OrderSide","OrderStatus","OrderType","Oto","Ouo","PartiallyFilled","Pause","PendingCancel","PendingUpdate","PositionSide","PreClose","PreOpen","Price","PriceTier","PriceType","Put","Reducing","Rejected","Second","Sell","Seller","Short","SportsBetting","Spot","StopLimit","StopMarket","Submitted","Swap","Taker","Tick","TickImbalance","TickRuns","Ticks","TimeInForce","TradingState","TrailingOffsetType","TrailingStopLimit","TrailingStopMarket","TriggerType","Triggered","Unspecified","Update","Value","ValueImbalance","ValueRuns","Volume","VolumeImbalance","VolumeRuns","Warrant","Week","account_type_from_cstr","account_type_to_cstr","aggregation_source_from_cstr","aggregation_source_to_cstr","aggressor_side_from_cstr","aggressor_side_to_cstr","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","asset_class_from_cstr","asset_class_to_cstr","asset_type_from_cstr","asset_type_to_cstr","bar_aggregation_from_cstr","bar_aggregation_to_cstr","book_action_from_cstr","book_action_to_cstr","book_type_from_cstr","book_type_to_cstr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contingency_type_from_cstr","contingency_type_to_cstr","currency_type_from_cstr","currency_type_to_cstr","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u8","from_u8","from_u8","from_u8","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","instrument_close_type_from_cstr","instrument_close_type_to_cstr","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","lazy_type_object","liquidity_side_from_cstr","liquidity_side_to_cstr","market_status_from_cstr","market_status_to_cstr","oms_type_from_cstr","oms_type_to_cstr","option_kind_from_cstr","option_kind_to_cstr","order_side_from_cstr","order_side_to_cstr","order_status_from_cstr","order_status_to_cstr","order_type_from_cstr","order_type_to_cstr","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position_side_from_cstr","position_side_to_cstr","price_type_from_cstr","price_type_to_cstr","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","time_in_force_from_cstr","time_in_force_to_cstr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","trading_state_from_cstr","trading_state_to_cstr","trailing_offset_type_from_cstr","trailing_offset_type_to_cstr","transition","trigger_type_from_cstr","trigger_type_to_cstr","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","order","order_api","position","OrderAccepted","OrderAccepted","OrderAcceptedBuilder","OrderAcceptedBuilderError","OrderCancelRejected","OrderCancelRejected","OrderCancelRejectedBuilder","OrderCancelRejectedBuilderError","OrderCanceled","OrderCanceled","OrderCanceledBuilder","OrderCanceledBuilderError","OrderDenied","OrderDenied","OrderDeniedBuilder","OrderDeniedBuilderError","OrderEvent","OrderExpired","OrderExpired","OrderExpiredBuilder","OrderExpiredBuilderError","OrderFilled","OrderFilled","OrderFilledBuilder","OrderFilledBuilderError","OrderInitialized","OrderInitialized","OrderInitializedBuilder","OrderInitializedBuilderError","OrderModifyRejected","OrderModifyRejected","OrderModifyRejectedBuilder","OrderModifyRejectedBuilderError","OrderPartiallyFilled","OrderPendingCancel","OrderPendingCancel","OrderPendingCancelBuilder","OrderPendingCancelBuilderError","OrderPendingUpdate","OrderPendingUpdate","OrderPendingUpdateBuilder","OrderPendingUpdateBuilderError","OrderRejected","OrderRejected","OrderRejectedBuilder","OrderRejectedBuilderError","OrderSubmitted","OrderSubmitted","OrderSubmittedBuilder","OrderSubmittedBuilderError","OrderTriggered","OrderTriggered","OrderTriggeredBuilder","OrderTriggeredBuilderError","OrderUpdated","OrderUpdated","OrderUpdatedBuilder","OrderUpdatedBuilderError","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","UninitializedField","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","ValidationError","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","account_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","client_order_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commission","commission","contingency_type","contingency_type","currency","currency","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","display_qty","display_qty","emulation_trigger","emulation_trigger","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","event_id","exec_algorithm_id","exec_algorithm_id","exec_algorithm_params","exec_algorithm_params","exec_spawn_id","exec_spawn_id","expire_time","expire_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","instrument_id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_px","last_px","last_qty","last_qty","limit_offset","limit_offset","linked_order_ids","linked_order_ids","liquidity_side","liquidity_side","order_list_id","order_list_id","order_side","order_side","order_side","order_side","order_type","order_type","order_type","order_type","parent_order_id","parent_order_id","position_id","position_id","post_only","post_only","price","price","price","price","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","quantity","quantity","quantity","quantity","quote_quantity","quote_quantity","reason","reason","reason","reason","reason","reason","reason","reason","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reconciliation","reduce_only","reduce_only","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","strategy_id","tags","tags","time_in_force","time_in_force","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","trade_id","trade_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trader_id","trailing_offset","trailing_offset","trailing_offset_type","trailing_offset_type","trigger_price","trigger_price","trigger_price","trigger_price","trigger_type","trigger_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_event","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","ts_init","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","venue_order_id","order_denied_clone","order_denied_drop","order_denied_new","order_denied_reason_to_cstr","PositionChanged","PositionChanged","PositionClosed","PositionClosed","PositionEvent","PositionOpened","PositionOpened","PositionState","account_id","account_id","account_id","account_id","avg_px_closed","avg_px_closed","avg_px_closed","avg_px_open","avg_px_open","avg_px_open","avg_px_open","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","closing_order_id","currency","currency","currency","currency","duration","entry","entry","entry","entry","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","instrument_id","instrument_id","instrument_id","instrument_id","into","into","into","into","into","last_px","last_px","last_px","last_px","last_qty","last_qty","last_qty","last_qty","opening_order_id","opening_order_id","opening_order_id","opening_order_id","peak_quantity","peak_quantity","peak_quantity","position_id","position_id","position_id","position_id","quantity","quantity","quantity","quantity","realized_pnl","realized_pnl","realized_pnl","realized_return","realized_return","realized_return","side","side","side","side","signed_qty","signed_qty","signed_qty","signed_qty","strategy_id","strategy_id","strategy_id","strategy_id","to_owned","to_owned","to_owned","to_owned","trader_id","trader_id","trader_id","trader_id","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ts_closed","ts_event","ts_event","ts_event","ts_event","ts_init","ts_init","ts_init","ts_init","ts_opened","ts_opened","ts_opened","type_id","type_id","type_id","type_id","type_id","unrealized_pnl","unrealized_pnl","unrealized_pnl","account_id","client_id","client_order_id","component_id","exec_algorithm_id","instrument_id","interned_string_stats","order_list_id","position_id","strategy_id","symbol","trade_id","trader_id","venue","venue_order_id","AccountId","account_id_hash","account_id_new","arguments","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","ClientId","arguments","borrow","borrow_mut","client_id_hash","client_id_new","clone","clone_into","cmp","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","ClientOrderId","arguments","borrow","borrow_mut","client_order_id_hash","client_order_id_new","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","ComponentId","arguments","borrow","borrow_mut","clone","clone_into","cmp","component_id_hash","component_id_new","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","ExecAlgorithmId","arguments","borrow","borrow_mut","clone","clone_into","cmp","deserialize","doc","eq","equivalent","exec_algorithm_id_hash","exec_algorithm_id_new","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","InstrumentId","InstrumentIdParseError","arguments","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","fmt","fmt","from","from","from_str","hash","instrument_id_hash","instrument_id_is_synthetic","instrument_id_new","instrument_id_new_from_cstr","instrument_id_to_cstr","into","into","into_py","is_synthetic","items_iter","lazy_type_object","new","partial_cmp","provide","serialize","symbol","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_object_raw","venue","wrap","OrderListId","arguments","borrow","borrow_mut","clone","clone_into","cmp","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","order_list_id_hash","order_list_id_new","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","PositionId","arguments","borrow","borrow_mut","clone","clone_into","cmp","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","position_id_hash","position_id_new","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","StrategyId","arguments","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","strategy_id_hash","strategy_id_new","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","Symbol","arguments","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","symbol_hash","symbol_new","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","wrap","TradeId","arguments","borrow","borrow_mut","clone","clone_into","cmp","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","trade_id_hash","trade_id_new","try_from","try_into","type_id","type_object_raw","value","wrap","TraderId","arguments","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","trader_id_hash","trader_id_new","try_from","try_into","type_id","type_object_raw","value","wrap","SYNTHETIC_VENUE","Venue","arguments","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","is_synthetic","items_iter","lazy_type_object","new","partial_cmp","serialize","synthetic","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","venue_hash","venue_is_synthetic","venue_new","wrap","VenueOrderId","arguments","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_str","hash","into","into_py","items_iter","lazy_type_object","new","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","value","venue_order_id_hash","venue_order_id_new","wrap","Instrument","asset_class","asset_type","base_currency","calculate_base_quantity","calculate_notional_value","id","is_inverse","lot_size","make_price","make_qty","maker_fee","margin_init","margin_maint","max_price","max_quantity","min_price","min_quantity","multiplier","price_increment","price_precision","quote_currency","raw_symbol","settlement_currency","size_increment","size_precision","symbol","taker_fee","venue","book","book_api","ladder","level","level_api","Add","BookIntegrityError","InvalidBookOperation","NoOrderSide","OrderBook","OrderNotFound","OrdersCrossed","PreProcessOrder","TooManyLevels","TooManyOrders","add","apply_delta","asks","best_ask_price","best_ask_size","best_bid_price","best_bid_size","bids","book_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_integrity","clear","clear_asks","clear_bids","count","delete","fmt","fmt","fmt","fmt","from","from","from","get_avg_px_for_quantity","has_ask","has_bid","instrument_id","into","into","into","midpoint","new","pprint","provide","provide","reset","sequence","simulate_fills","spread","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","ts_last","type_id","type_id","type_id","update","update_quote_tick","update_trade_tick","OrderBook_API","borrow","borrow_mut","deref","deref_mut","from","into","orderbook_add","orderbook_apply_delta","orderbook_asks","orderbook_best_ask_price","orderbook_best_ask_size","orderbook_best_bid_price","orderbook_best_bid_size","orderbook_bids","orderbook_book_type","orderbook_check_integrity","orderbook_clear","orderbook_clear_asks","orderbook_clear_bids","orderbook_count","orderbook_delete","orderbook_drop","orderbook_get_avg_px_for_quantity","orderbook_has_ask","orderbook_has_bid","orderbook_instrument_id","orderbook_midpoint","orderbook_new","orderbook_pprint_to_cstr","orderbook_reset","orderbook_sequence","orderbook_simulate_fills","orderbook_spread","orderbook_ts_last","orderbook_update","orderbook_update_quote_tick","orderbook_update_trade_tick","try_from","try_into","type_id","vec_fills_drop","BookPrice","Ladder","add","add_bulk","borrow","borrow","borrow_mut","borrow_mut","cache","clear","clone","clone_into","cmp","delete","eq","equivalent","exposures","fmt","fmt","from","from","into","into","is_empty","len","levels","new","new","partial_cmp","remove","side","side","simulate_fills","to_owned","to_string","top","try_from","try_from","try_into","try_into","type_id","type_id","update","value","volumes","Level","add","add_bulk","borrow","borrow_mut","clone","clone_into","cmp","delete","eq","equivalent","exposure","exposure_raw","fmt","from","from_order","ge","gt","into","is_empty","le","len","lt","new","orders","partial_cmp","price","remove","to_owned","try_from","try_into","type_id","update","volume","volume_raw","Level_API","borrow","borrow_mut","clone","clone_into","deref","deref_mut","from","into","level_clone","level_drop","level_exposure","level_new","level_orders","level_price","level_volume","new","to_owned","try_from","try_into","type_id","vec_levels_drop","vec_orders_drop","base","limit","limit_if_touched","market","market_if_touched","market_to_limit","stop_limit","trailing_stop_limit","trailing_stop_market","InvalidStateTransition","Order","OrderCore","OrderError","UnrecognizedEvent","account_id","account_id","avg_px","avg_px","borrow","borrow","borrow_mut","borrow_mut","client_order_id","client_order_id","contingency_type","contingency_type","emulation_trigger","emulation_trigger","event_count","events","events","exec_algorithm_id","exec_algorithm_id","exec_algorithm_params","exec_algorithm_params","exec_spawn_id","exec_spawn_id","filled_qty","filled_qty","fmt","fmt","from","from","has_price","has_trigger_price","init_id","init_id","instrument_id","instrument_id","into","into","is_aggressive","is_buy","is_child_order","is_closed","is_contingency","is_emulated","is_inflight","is_open","is_parent_order","is_passive","is_pending_cancel","is_pending_update","is_post_only","is_post_only","is_quote_quantity","is_quote_quantity","is_reduce_only","is_reduce_only","is_sell","last_event","last_trade_id","last_trade_id","leaves_qty","leaves_qty","linked_order_ids","linked_order_ids","liquidity_side","liquidity_side","new","order_list_id","order_list_id","order_type","order_type","parent_order_id","parent_order_id","position_id","position_id","previous_status","price","provide","quantity","quantity","side","side","slippage","slippage","status","status","strategy_id","strategy_id","tags","tags","time_in_force","time_in_force","to_string","trade_ids","trade_ids","trader_id","trader_id","trigger_price","trigger_type","try_from","try_from","try_into","try_into","ts_init","ts_init","ts_last","ts_last","type_id","type_id","venue_order_id","venue_order_id","venue_order_ids","venue_order_ids","LimitOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","display_qty","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","expire_time","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","last_trade_id","leaves_qty","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trigger_price","trigger_type","try_from","try_into","ts_init","ts_last","type_id","venue_order_id","venue_order_ids","LimitIfTouchedOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","display_qty","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","expire_time","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","is_triggered","last_trade_id","leaves_qty","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trigger_price","trigger_price","trigger_type","trigger_type","try_from","try_into","ts_init","ts_last","ts_triggered","type_id","venue_order_id","venue_order_ids","MarketOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","last_trade_id","leaves_qty","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trigger_price","trigger_type","try_from","try_into","ts_init","ts_last","type_id","venue_order_id","venue_order_ids","MarketIfTouchedOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","display_qty","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","expire_time","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","is_triggered","last_trade_id","leaves_qty","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trigger_price","trigger_price","trigger_type","trigger_type","try_from","try_into","ts_init","ts_last","ts_triggered","type_id","venue_order_id","venue_order_ids","MarketToLimitOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","display_qty","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","expire_time","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","last_trade_id","leaves_qty","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trigger_price","trigger_type","try_from","try_into","ts_init","ts_last","type_id","venue_order_id","venue_order_ids","StopLimitOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","display_qty","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","expire_time","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","is_triggered","last_trade_id","leaves_qty","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trigger_price","trigger_price","trigger_type","trigger_type","try_from","try_into","ts_init","ts_last","ts_triggered","type_id","venue_order_id","venue_order_ids","TrailingStopLimitOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","display_qty","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","expire_time","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","is_triggered","last_trade_id","leaves_qty","limit_offset","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trailing_offset","trailing_offset_type","trigger_price","trigger_price","trigger_type","trigger_type","try_from","try_into","ts_init","ts_last","ts_triggered","type_id","venue_order_id","venue_order_ids","TrailingStopMarketOrder","account_id","avg_px","borrow","borrow_mut","client_order_id","contingency_type","default","deref","deref_mut","display_qty","emulation_trigger","events","exec_algorithm_id","exec_algorithm_params","exec_spawn_id","expire_time","filled_qty","from","from","init_id","instrument_id","into","is_post_only","is_quote_quantity","is_reduce_only","is_triggered","last_trade_id","leaves_qty","linked_order_ids","liquidity_side","new","order_list_id","order_type","parent_order_id","position_id","price","quantity","side","slippage","status","strategy_id","tags","time_in_force","trade_ids","trader_id","trailing_offset","trailing_offset_type","trigger_price","trigger_price","trigger_type","trigger_type","try_from","try_into","ts_init","ts_last","ts_triggered","type_id","venue_order_id","venue_order_ids","balance","currency","fixed","money","price","quantity","AccountBalance","borrow","borrow_mut","currency","fmt","free","from","into","locked","to_string","total","try_from","try_into","type_id","Currency","arguments","borrow","borrow_mut","clone","clone_into","code","currency_code_to_cstr","currency_exists","currency_from_cstr","currency_from_py","currency_hash","currency_name_to_cstr","currency_register","currency_to_cstr","currency_type","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","from","from","from_str","hash","into","into_py","iso4217","items_iter","lazy_type_object","name","new","precision","serialize","to_owned","try_from","try_into","type_id","type_object_raw","wrap","FIXED_PRECISION","FIXED_SCALAR","f64_to_fixed_i64","f64_to_fixed_u64","fixed_i64_to_f64","fixed_u64_to_f64","MONEY_MAX","MONEY_MIN","Money","add","add","add_assign","arguments","as_f64","borrow","borrow_mut","clone","clone_into","cmp","currency","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from_raw","ge","gt","hash","into","into_py","is_zero","items_iter","lazy_type_object","le","lt","money_add_assign","money_as_f64","money_from_raw","money_new","money_sub_assign","mul","mul","mul_assign","neg","new","partial_cmp","serialize","sub","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id","type_object_raw","wrap","ERROR_PRICE","PRICE_MAX","PRICE_MIN","Price","add","add","add_assign","arguments","as_f64","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from","from_raw","from_str","ge","gt","hash","into","into_py","is_zero","items_iter","lazy_type_object","le","lt","max","min","mul","mul","mul_assign","neg","new","partial_cmp","precision","price_add_assign","price_as_f64","price_from_raw","price_new","price_sub_assign","raw","serialize","sub","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id","type_object_raw","wrap","zero","QUANTITY_MAX","QUANTITY_MIN","Quantity","add","add_assign","arguments","as_f64","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deserialize","doc","eq","equivalent","extract","extract","extract","fmt","fmt","from","from","from","from_raw","from_str","ge","gt","hash","into","into_py","is_positive","is_zero","items_iter","lazy_type_object","le","lt","mul","mul_assign","new","partial_cmp","precision","quantity_add_assign","quantity_add_assign_u64","quantity_as_f64","quantity_from_raw","quantity_new","quantity_sub_assign","quantity_sub_assign_u64","raw","serialize","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id","type_object_raw","wrap","zero"],"q":[[0,"nautilus_model"],[14,"nautilus_model::currencies"],[645,"nautilus_model::data"],[677,"nautilus_model::data::bar"],[799,"nautilus_model::data::bar_api"],[820,"nautilus_model::data::delta"],[860,"nautilus_model::data::delta_api"],[863,"nautilus_model::data::order"],[905,"nautilus_model::data::order_api"],[912,"nautilus_model::data::quote"],[953,"nautilus_model::data::quote_api"],[957,"nautilus_model::data::trade"],[997,"nautilus_model::data::trade_api"],[1001,"nautilus_model::enums"],[2020,"nautilus_model::events"],[2023,"nautilus_model::events::order"],[3049,"nautilus_model::events::order_api"],[3053,"nautilus_model::events::position"],[3201,"nautilus_model::identifiers"],[3216,"nautilus_model::identifiers::account_id"],[3253,"nautilus_model::identifiers::client_id"],[3289,"nautilus_model::identifiers::client_order_id"],[3326,"nautilus_model::identifiers::component_id"],[3362,"nautilus_model::identifiers::exec_algorithm_id"],[3398,"nautilus_model::identifiers::instrument_id"],[3452,"nautilus_model::identifiers::order_list_id"],[3488,"nautilus_model::identifiers::position_id"],[3524,"nautilus_model::identifiers::strategy_id"],[3561,"nautilus_model::identifiers::symbol"],[3598,"nautilus_model::identifiers::trade_id"],[3634,"nautilus_model::identifiers::trader_id"],[3671,"nautilus_model::identifiers::venue"],[3712,"nautilus_model::identifiers::venue_order_id"],[3749,"nautilus_model::instruments"],[3778,"nautilus_model::orderbook"],[3783,"nautilus_model::orderbook::book"],[3852,"nautilus_model::orderbook::book_api"],[3894,"nautilus_model::orderbook::ladder"],[3939,"nautilus_model::orderbook::level"],[3974,"nautilus_model::orderbook::level_api"],[3997,"nautilus_model::orders"],[4006,"nautilus_model::orders::base"],[4123,"nautilus_model::orders::limit"],[4178,"nautilus_model::orders::limit_if_touched"],[4237,"nautilus_model::orders::market"],[4289,"nautilus_model::orders::market_if_touched"],[4347,"nautilus_model::orders::market_to_limit"],[4402,"nautilus_model::orders::stop_limit"],[4461,"nautilus_model::orders::trailing_stop_limit"],[4523,"nautilus_model::orders::trailing_stop_market"],[4583,"nautilus_model::types"],[4589,"nautilus_model::types::balance"],[4603,"nautilus_model::types::currency"],[4646,"nautilus_model::types::fixed"],[4652,"nautilus_model::types::money"],[4709,"nautilus_model::types::price"],[4775,"nautilus_model::types::quantity"]],"d":["Defines established currency constants and an internal …","","Defines enumerations for the trading domain model.","","","","","","Loaded as nautilus_pyo3.model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Represents an aggregated bar.","Represents a bar aggregation specification including a …","Represents a bar type including the instrument ID, bar …","","The type of bar aggregation.","The bar types aggregation source.","","","","Return a dictionary representation of the object.","The bar type for this bar.","","","","","","","","","","","","","","","The bars close price.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return a new object from the given dictionary …","","","","","","The bars high price.","The bar types instrument ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The bars low price.","","The bars open price.","","","The price type to use for aggregation.","","","","","The bar types specification.","The step for binning samples for bar aggregation.","","","","","","","","","","","","","","","","The UNIX timestamp (nanoseconds) when the data event …","The UNIX timestamp (nanoseconds) when the data object was …","","","","","","","","The bars volume.","","","","","","","","","","","","","","","Returns a <code>BarSpecification</code> as a C string pointer.","Returns a <code>Bar</code> as a C string.","","","","","","","","Returns a <code>BarType</code> as a C string pointer.","Represents a single change/delta in an order book.","The order book delta action.","","Return a dictionary representation of the object.","","","","","","","","","","","","A combination of packet end with matching engine status.","","","Returns the argument unchanged.","Return a new object from the given dictionary …","","","The instrument ID for the book.","Calls <code>U::from(self)</code>.","","","","","The order to apply.","The message sequence number assigned at the venue.","","","","","","The UNIX timestamp (nanoseconds) when the data event …","The UNIX timestamp (nanoseconds) when the data object was …","","","","","","","Represents an order in a book.","","","Return a dictionary representation of the object.","","","","","","","","","","","","","","","Returns the argument unchanged.","Return a new object from the given dictionary …","","","","Calls <code>U::from(self)</code>.","","","","","The order ID.","The order price.","","The order side.","","The order size.","","","","","","","","","Returns a <code>BookOrder</code> debug string as a C string pointer.","Returns a <code>BookOrder</code> display string as a C string pointer.","","","","","","Represents a single quote tick in a financial market.","","Return a dictionary representation of the object.","The top of book ask price.","The top of book ask size.","The top of book bid price.","The top of book bid size.","","","","","","","","","","","","","","","Returns the argument unchanged.","Return a new object from the given dictionary …","","","The quotes instrument ID.","Calls <code>U::from(self)</code>.","","","","","","","","","","The UNIX timestamp (nanoseconds) when the tick event …","The UNIX timestamp (nanoseconds) when the data object was …","","","","","","","Returns a <code>QuoteTick</code> as a C string pointer.","Represents a single trade tick in a financial market.","The trade aggressor side.","","Return a dictionary representation of the object.","","","","","","","","","","","","","","Returns the argument unchanged.","Return a new object from the given dictionary …","","","The trade instrument ID.","Calls <code>U::from(self)</code>.","","","","","The traded price.","","The traded size.","","","The trade match ID (assigned by the venue).","","","The UNIX timestamp (nanoseconds) when the tick event …","The UNIX timestamp (nanoseconds) when the data object was …","","","","","","","Returns a <code>TradeTick</code> as a C string pointer.","The order was acknowledged by the trading venue as being …","An account type provided by a trading venue or broker.","Normal trading operations.","An order is added to the book.","An aggregation source for derived data.","The side for the aggressing order of a trade in a market.","A quoted order price where a seller is willing to sell a …","A broad financial market asset class.","The asset type for a financial market product.","At the Closing (ATC) - the order is scheduled to be …","At the Opening (ATO) - the order is scheduled to be …","The aggregation method through which a bar is generated …","The trailing offset is based on a percentage represented …","An account specific to betting markets.","A quoted order price where a buyer is willing to buy a …","Based on the top-of-book quoted prices for the instrument.","Fixed income bond assets.","The type of order book action for an order book event.","The order book type, representing the type of levels …","The order is a BUY.","The BUY order was the aggressor for the trade.","A Call option gives the holder the right, but not the …","The order was canceled (closed/done).","An account with unleveraged cash assets only.","A contract-for-difference (CFD) asset type. A contract …","The state of the order book is cleared.","The market is closed.","Commodity assets.","The order contigency type which specifies the behaviour of …","When the instrument expiration was reached.","A type of cryptocurrency or crypto token.","Cryptocurrency or crypto token assets.","The broad currency type.","Based on time intervals with day granularity.","Day - the order is active until the end of the current …","The default trigger type set by the trading venue.","An existing order in the book is deleted/canceled.","The order was denied by the Nautilus system, either for …","Based on a ‘double match’ of the bid/ask price for the …","Based on a ‘double match’ of the last traded price for …","When the market session ended.","Energy commodity assets.","Equity / stock assets.","The order reached a GTD expiration (closed/done).","The data is externally aggregated (outside the Nautilus …","Foreign exchange (FOREX) assets.","A type of currency issued by governments which is not …","The order has been completely filled at the trading venue …","A neural/flat position, where no position is currently …","Fill or Kill (FOK) - the order must be executed in full …","A forward derivative asset type. A customized contract …","","A futures contract asset type. A legal agreement to buy or …","Good Till Canceled (GTC) - the order remains active until …","Good Till Date/Time (GTD) - the order is active until a …","Trading is completely halted, no new order commands will …","The hedging type where there can be multiple positions per …","Based on time intervals with hour granularity.","Index based assets.","Based on the index price for the instrument.","The order is initialized (instantiated) within the …","The type of event for an instrument close.","The data is internally aggregated (inside the Nautilus …","Immediate or Cancel (IOC) - the order is filled as much as …","Top-of-book best bid/offer, one level per side.","Market by price, one order per level (aggregated).","Market by order, multiple orders per level (full …","The last price at which a trade was made for an instrument.","Based on both the <code>TriggerType::LastTrade</code> and …","Based on the last traded price for the instrument.","A limit order to buy or sell at a specific price or better.","A limit-if-touched order effectively becomes a limit order …","The liqudity side for a trade in a financial market.","A long position in the market, typically acquired through …","The order passively provided liqudity to the market to …","An account which facilitates trading on margin, using …","Based on the mark price for the instrument.","A market order to buy or sell at the best available price …","A market-if-touched order effectively becomes a market …","The status of an individual market on a trading venue.","A market-to-limit order is a market order that is to be …","Metal commodity assets.","The midpoint between the bid and ask prices.","Based on the mid-point of the <code>TriggerType::BidAsk</code>.","Based on time intervals with millisecond granularity.","Based on time intervals with minute granularity.","Based on time intervals with month granularity.","The netting type where there is one position per …","There was no specific aggressor for the trade.","Not a contingent order.","No specific liqudity side.","No order side is specified (only valid in the context of a …","No position side is specified (only valid in the context …","No trailing offset type is specified (invalid for trailing …","No trigger type is specified (invalid for orders with a …","One-Cancels-the-Other.","The order management system (OMS) type for a trading venue …","The market is open for the normal session.","An options contract asset type. A type of derivative that …","The kind of options contract.","The order side for a specific order, or action related to …","The status for a specific order.","The type of order.","One-Triggers-the-Other.","One-Updates-the-Other (by proportional quantity).","The order has been partially filled at the trading venue.","The market session is paused.","The order is currently pending a request to cancel at the …","The order is currently pending a request to modify at the …","The market side for a specific position, or action related …","The market is in the pre-close session.","The market is in the pre-open session.","The trailing offset is based on a market price.","The trailing offset is based on a price tier set by a …","The type of price for an instrument in a financial market.","A Put option gives the holder the right, but not the …","Only order commands which would cancel order, or reduce …","The order was rejected by the trading venue.","Based on time intervals with second granularity.","The order is a SELL.","The SELL order was the aggressor for the trade.","A short position in the market, typically acquired through …","Sports betting instruments.","A spot market asset type. The current market price of an …","A stop limit order to buy or sell which combines the …","A stop market order to buy or sell once the price reaches …","The order was submitted by the Nautilus system to the …","A swap asset type. A derivative contract through which two …","The order aggressively took liqudity from the market to …","Based on a number of ticks.","Based on the buy/sell imbalance of ticks.","Based on sequential buy/sell runs of ticks.","The trailing offset is based on the number of ticks from a …","The ‘Time in Force’ instruction for an order in the …","The trading state for a node.","The trailing offset type for an order type which specifies …","A trailing stop limit order combines the features of a …","A trailing stop market order sets the stop/trigger price …","The trigger type for the stop/trigger price of an order.","The order STOP price was triggered (closed/done).","There is no specific type of order management specified …","An existing order in the book is updated/modified.","Based on the ‘notional’ value of the instrument.","Based on the buy/sell imbalance of trading by ‘notional…","Based on sequential buy/sell runs of trading by ‘notional…","Based on trading volume.","Based on the buy/sell imbalance of trading volume.","Based on sequential runs of buy/sell trading volume.","A warrant asset type. A derivative that gives the holder …","Based on time intervals with week granularity.","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","Returns an enum from a Python stringeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enum from a Python string.","","Returns an enum from a Python string.","","","Returns an enum from a Python string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder for <code>OrderAccepted</code>.","Error type for OrderAcceptedBuilder","","","Builder for <code>OrderCancelRejected</code>.","Error type for OrderCancelRejectedBuilder","","","Builder for <code>OrderCanceled</code>.","Error type for OrderCanceledBuilder","","","Builder for <code>OrderDenied</code>.","Error type for OrderDeniedBuilder","","","","Builder for <code>OrderExpired</code>.","Error type for OrderExpiredBuilder","","","Builder for <code>OrderFilled</code>.","Error type for OrderFilledBuilder","","","Builder for <code>OrderInitialized</code>.","Error type for OrderInitializedBuilder","","","Builder for <code>OrderModifyRejected</code>.","Error type for OrderModifyRejectedBuilder","","","","Builder for <code>OrderPendingCancel</code>.","Error type for OrderPendingCancelBuilder","","","Builder for <code>OrderPendingUpdate</code>.","Error type for OrderPendingUpdateBuilder","","","Builder for <code>OrderRejected</code>.","Error type for OrderRejectedBuilder","","","Builder for <code>OrderSubmitted</code>.","Error type for OrderSubmittedBuilder","","","Builder for <code>OrderTriggered</code>.","Error type for OrderTriggeredBuilder","","","Builder for <code>OrderUpdated</code>.","Error type for OrderUpdatedBuilder","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","Custom validation error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>OrderInitialized</code>.","Builds a new <code>OrderDenied</code>.","Builds a new <code>OrderSubmitted</code>.","Builds a new <code>OrderAccepted</code>.","Builds a new <code>OrderRejected</code>.","Builds a new <code>OrderCanceled</code>.","Builds a new <code>OrderExpired</code>.","Builds a new <code>OrderTriggered</code>.","Builds a new <code>OrderPendingUpdate</code>.","Builds a new <code>OrderPendingCancel</code>.","Builds a new <code>OrderModifyRejected</code>.","Builds a new <code>OrderCancelRejected</code>.","Builds a new <code>OrderUpdated</code>.","Builds a new <code>OrderFilled</codeeturns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderees the memory for the given <code>event</code> by dropping.","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns a Nautilus identifier from C string pointer.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns a Nautilus identifier from a C string pointer.","Returns an <code>InstrumentId</code> as a C string pointer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns a Nautilus identifier from a C string pointer.","","","","","","Returns the equivalent quantity of the base asset.","Calculates the notional value from the given parameters. …","","","","Creates a new price from the given <code>value</code> with the correct …","Creates a new quantity from the given <code>value</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Provides a C compatible Foreign Function Interface (FFI) …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns a pretty printed <code>OrderBook</code> number of levels per …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Provides a C compatible Foreign Function Interface (FFI) …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Safety","Safety","Returns a <code>Currency</code> from pointers and primitives.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sentinel Price for errors.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,0,80,80,80,0,0,80,80,80,80,0,0,0,80,80,80,80,80,80,80,80,0,0,0,0,80,0,0,80,80,80,0,0,0,0,91,92,91,92,84,84,84,91,92,98,84,91,92,98,84,91,92,84,91,92,84,84,91,92,91,92,84,91,92,84,91,92,84,91,92,84,91,91,91,92,92,92,84,84,84,91,91,92,92,98,98,84,84,91,92,98,84,84,92,84,91,92,84,84,92,91,92,98,84,91,92,84,91,92,84,91,92,84,84,84,84,91,92,91,98,91,92,84,92,91,91,92,84,91,92,98,84,91,92,98,84,91,92,98,84,84,84,91,92,98,84,91,92,84,84,91,92,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,0,0,0,0,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,136,0,140,115,0,0,120,0,0,139,139,0,141,123,120,142,125,0,0,118,121,135,136,123,126,115,133,125,0,131,130,125,0,127,139,142,115,136,142,142,131,125,125,136,124,125,130,136,138,139,126,0,126,139,139,140,134,127,125,142,136,0,124,139,128,128,128,120,142,142,137,137,0,138,132,123,142,137,137,0,137,125,120,142,127,127,127,134,121,129,132,118,138,141,142,129,0,133,126,0,0,0,0,129,129,136,133,136,136,0,133,133,141,141,0,135,140,136,127,118,121,138,125,126,137,137,136,126,132,127,127,127,141,0,0,0,137,137,0,136,134,115,127,127,127,127,127,127,126,127,0,0,0,0,0,0,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,0,0,0,0,0,0,0,0,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,0,0,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,123,123,124,124,124,121,121,121,125,125,125,126,126,126,127,127,127,115,115,115,128,128,128,129,129,129,130,130,130,131,131,131,132,132,132,133,133,133,134,134,134,135,135,135,118,118,118,136,136,136,137,137,137,138,138,138,120,120,120,139,139,139,140,140,140,141,141,141,142,142,142,123,123,124,124,121,121,125,125,126,126,127,127,115,115,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,118,118,136,136,137,137,138,138,120,120,139,139,140,140,141,141,142,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,233,115,128,118,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,0,0,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,0,0,136,0,0,123,123,124,124,121,121,125,125,126,126,127,127,115,115,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,118,118,136,136,137,137,138,138,120,120,139,139,140,140,141,141,142,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,123,124,121,125,126,127,115,128,129,130,131,132,133,134,135,118,136,137,138,120,139,140,141,142,0,0,0,0,146,0,0,0,146,0,0,0,146,0,0,0,146,0,0,0,0,146,0,0,0,146,0,0,0,146,0,0,0,146,0,0,146,0,146,0,0,0,146,0,0,0,146,0,0,0,146,0,0,0,146,0,0,0,146,0,0,163,166,168,170,172,174,176,178,180,182,184,186,188,190,163,166,168,170,172,174,176,178,180,182,184,186,188,190,148,150,151,152,153,154,155,156,157,158,159,160,167,169,171,173,175,177,179,181,183,185,187,189,146,161,163,162,164,166,165,148,168,167,150,170,169,151,172,171,152,174,173,153,176,175,154,178,177,155,180,179,156,182,181,157,184,183,158,186,185,159,188,187,160,190,189,146,161,163,162,164,166,165,148,168,167,150,170,169,151,172,171,152,174,173,153,176,175,154,178,177,155,180,179,156,182,181,157,184,183,158,186,185,159,188,187,160,190,189,161,164,148,150,151,152,153,154,155,156,157,158,159,160,161,164,148,150,151,152,153,154,155,156,157,158,159,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,146,161,162,164,165,148,167,150,169,151,171,152,173,153,175,154,177,155,179,156,181,157,183,158,185,159,187,160,189,146,161,162,164,165,148,167,150,169,151,171,152,173,153,175,154,177,155,179,156,181,157,183,158,185,159,187,160,189,160,189,161,162,160,189,161,162,164,165,148,167,150,169,151,171,152,173,153,175,154,177,155,179,156,181,157,183,158,185,159,187,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,161,162,161,162,146,162,165,167,169,171,173,175,177,179,181,183,185,187,189,146,162,165,167,169,171,173,175,177,179,181,183,185,187,189,161,164,148,150,151,152,153,154,155,156,157,158,159,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,161,162,161,162,161,162,161,162,146,163,163,162,166,166,165,168,168,167,170,170,169,172,172,171,174,174,173,176,176,175,178,178,177,180,180,179,182,182,181,184,184,183,186,186,185,188,188,187,190,190,189,146,161,163,163,163,162,162,162,162,162,162,162,162,162,164,166,166,166,165,148,168,168,168,167,150,170,170,170,169,151,172,172,172,171,152,174,174,174,173,153,176,176,176,175,154,178,178,178,177,155,180,180,180,179,156,182,182,182,181,157,184,184,184,183,158,186,186,186,185,159,188,188,188,187,160,190,190,190,189,161,164,148,150,151,152,153,154,155,156,157,158,159,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,146,161,163,162,164,166,165,148,168,167,150,170,169,151,172,171,152,174,173,153,176,175,154,178,177,155,180,179,156,182,181,157,184,183,158,186,185,159,188,187,160,190,189,160,189,160,189,161,162,161,162,160,189,161,162,161,160,162,189,161,160,162,189,161,162,160,189,161,162,161,159,162,187,163,166,168,170,172,174,176,178,180,182,184,186,188,190,161,159,162,187,161,162,164,151,157,158,165,171,183,185,161,150,151,152,153,154,155,156,157,158,159,160,162,169,171,173,175,177,179,181,183,185,187,189,161,162,162,165,167,169,171,173,175,177,179,181,183,185,187,189,161,164,148,150,151,152,153,154,155,156,157,158,159,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,161,162,161,162,146,161,162,164,165,148,167,150,169,151,171,152,173,153,175,154,177,155,179,156,181,157,183,158,185,159,187,160,189,163,166,168,170,172,174,176,178,180,182,184,186,188,190,160,189,161,164,148,150,151,152,153,154,155,156,157,158,159,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,161,162,161,162,161,159,162,187,161,162,146,161,163,162,164,166,165,148,168,167,150,170,169,151,172,171,152,174,173,153,176,175,154,178,177,155,180,179,156,182,181,157,184,183,158,186,185,159,188,187,160,190,189,146,161,163,162,164,166,165,148,168,167,150,170,169,151,172,171,152,174,173,153,176,175,154,178,177,155,180,179,156,182,181,157,184,183,158,186,185,159,188,187,160,190,189,161,164,148,150,151,152,153,154,155,156,157,158,159,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,161,164,148,150,151,152,153,154,155,156,157,158,159,160,162,165,167,169,171,173,175,177,179,181,183,185,187,189,146,161,163,162,164,166,165,148,168,167,150,170,169,151,172,171,152,174,173,153,176,175,154,178,177,155,180,179,156,182,181,157,184,183,158,186,185,159,188,187,160,190,189,150,151,152,153,154,155,156,157,158,159,160,169,171,173,175,177,179,181,183,185,187,189,0,0,0,0,0,234,0,234,0,0,234,0,211,212,213,214,212,213,214,211,212,213,214,234,211,212,213,214,234,211,212,213,214,211,212,213,214,211,212,213,214,214,211,212,213,214,214,211,212,213,214,211,212,213,214,211,212,213,214,234,211,212,213,214,211,212,213,214,234,211,212,213,214,211,212,213,214,211,212,213,214,211,212,213,214,212,213,214,211,212,213,214,211,212,213,214,212,213,214,212,213,214,211,212,213,214,211,212,213,214,211,212,213,214,211,212,213,214,211,212,213,214,234,211,212,213,214,234,211,212,213,214,214,211,212,213,214,211,212,213,214,212,213,214,234,211,212,213,214,212,213,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,0,215,215,215,0,0,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,0,191,191,191,0,0,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,0,216,216,216,216,216,216,0,0,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,0,194,194,194,194,194,194,194,194,194,194,0,0,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,0,0,114,114,217,114,217,114,114,114,114,114,114,114,114,114,114,114,114,114,217,217,114,217,114,114,0,0,0,0,0,114,217,114,114,114,114,114,114,217,114,114,114,114,217,114,217,114,217,114,217,114,114,114,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,205,205,205,205,205,205,205,205,205,205,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,206,206,206,206,206,206,206,206,206,0,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,0,0,208,208,208,208,208,208,208,208,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,0,0,218,218,218,218,218,218,218,218,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,122,122,122,122,122,122,0,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,0,0,209,209,209,209,209,209,0,0,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,0,0,0,219,0,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,0,0,210,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,0,0,0,0,224,0,0,223,0,223,223,224,223,223,221,221,221,221,221,221,221,221,221,221,224,223,221,224,223,221,221,221,221,221,221,224,224,223,223,221,224,223,221,221,221,221,221,224,223,221,221,221,224,223,221,221,221,221,224,223,221,224,223,221,224,223,221,221,224,223,221,221,221,0,225,225,225,225,225,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,225,225,0,0,0,227,227,227,119,227,119,227,227,119,119,119,227,119,119,227,119,119,227,119,227,119,227,227,227,227,119,119,227,227,119,227,119,119,227,227,119,227,119,227,119,227,119,227,0,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,0,228,228,228,228,228,228,228,228,0,0,0,0,0,0,0,228,228,228,228,228,0,0,0,0,0,0,0,0,0,0,0,147,0,0,0,147,236,229,236,229,229,147,229,147,236,229,236,229,236,229,236,236,229,236,229,236,229,236,229,236,229,147,147,229,147,229,229,236,229,236,229,229,147,236,236,236,236,236,236,236,236,236,236,236,236,236,229,236,229,236,229,236,236,236,229,236,229,236,229,236,229,229,236,229,236,229,236,229,236,229,229,236,147,236,229,236,229,236,229,236,229,236,229,236,229,236,229,147,236,229,236,229,236,236,229,147,229,147,236,229,236,229,229,147,236,229,236,229,0,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,0,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,0,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,0,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,0,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,0,0,0,0,0,0,0,230,230,230,230,230,230,230,230,230,230,230,230,230,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,0,0,0,0,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,0,0,0,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,0,0,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,0,0,0,0,0,0,106,106,106,106,106,106,106,106,106,106,106,106],"f":[0,0,0,0,0,0,0,0,[[1,2],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[[6,[4,5]]]]]],[8,5],[9,5],[10,5],[11,5],[12,5],[13,5],[14,5],[15,5],[16,5],[17,5],[18,5],[19,5],[20,5],[21,5],[22,5],[23,5],[24,5],[25,5],[26,5],[27,5],[28,5],[29,5],[30,5],[31,5],[32,5],[33,5],[34,5],[35,5],[36,5],[37,5],[38,5],[39,5],[40,5],[41,5],[42,5],[43,5],[44,5],[45,5],[46,5],[47,5],[48,5],[49,5],[50,5],[51,5],[52,5],[53,5],[54,5],[55,5],[56,5],[57,5],[58,5],[59,5],[60,5],[61,5],[62,5],[63,5],[64,5],[65,5],[66,5],[67,5],[68,5],[69,5],[70,5],[71,5],[72,5],[73,5],[74,5],[75,5],[76,5],[77,[[7,[[6,[4,5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,[[]],[[]],[80,80],[[]],[80,80],0,0,[[80,81],82],[83,80],[84,80],[85,80],[[]],[86,80],[80,87],[[]],0,0,0,0,[[]],0,0,[[],78],[[],78],[[],79],0,0,0,0,0,0,[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[[84,1],[[3,[[89,[90]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,91],[92,92],[84,84],[[]],[[]],[[]],0,[[91,91],93],[[92,92],93],[94,[[78,[91]]]],[94,[[78,[92]]]],[94,[[78,[84]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[[91,91],96],[[92,92],96],[[84,84],96],[[],96],[[],96],[[],96],[88,[[3,[91]]]],[88,[[78,[97]]]],[88,[[3,[91]]]],[88,[[78,[97]]]],[88,[[3,[92]]]],[88,[[3,[92]]]],[88,[[3,[84]]]],[88,[[3,[84]]]],[88,[[78,[97]]]],[[91,81],82],[[91,81],82],[[92,81],82],[[92,81],82],[[98,81],82],[[98,81],82],[[84,81],82],[[84,81],82],[[]],[[]],[[]],[[]],[[1,[89,[90]]],[[3,[84]]]],[99,[[78,[92]]]],[[92,100,100],[[6,[4,4]]]],[[91,101]],[[92,101]],[[84,101]],0,0,[[]],[[]],[[]],[[]],[[91,1],102],[[92,1],102],[[84,1],102],[[],103],[[],103],[[],103],[[],[[104,[91]]]],[[],[[104,[92]]]],[[],[[104,[84]]]],0,[[92,105,105,105,105,106,87,87],84],0,[[91,91],[[107,[93]]]],[[92,92],[[107,[93]]]],0,[108],[[91,109],78],[[92,109],78],[[84,109],78],0,0,[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,0,[[],79],[[],79],[[],79],[[],79],[1,110],[1,110],[1,110],0,[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[[84,84],100],[84,111],[[92,105,105,105,105,106,87,87],84],[[92,112,112,112,112,100,111,100,87,87],84],[[91,91],100],[[91,91],100],[[91,91],100],[91,111],[[91,91],100],[[91,91],100],[[111,100,100],91],[91,113],[84,113],[[92,92],100],[[92,92],100],[[92,92],100],[92,111],[[92,92],100],[[92,92],100],[[114,91,100],92],[92,113],0,0,[1,[[89,[88]]]],[[86,1],[[3,[[89,[90]]]]]],[[]],[[]],[86,86],[[]],[94,[[78,[86]]]],[1,[[3,[95]]]],[[86,86],96],[[],96],[88,[[3,[86]]]],[88,[[78,[97]]]],[88,[[3,[86]]]],0,[[86,81],82],[[86,81],82],[[]],[[1,[89,[90]]],[[3,[86]]]],[[114,100,100],[[6,[4,4]]]],[[86,101]],0,[[]],[[86,1],102],[[],103],[[],[[104,[86]]]],[[114,115,116,100,111,87,87],86],0,0,[[86,109],78],[[]],[[],4],[[],78],[[],78],0,0,[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],[[86,86],100],[86,111],[[114,115,116,100,111,87,87],86],0,0,[1,[[89,[88]]]],[[116,1],[[3,[[89,[90]]]]]],[[]],[[]],[116,116],[[]],[94,[[78,[116]]]],[1,[[3,[95]]]],[[116,116],96],[[],96],[116,117],[88,[[3,[116]]]],[88,[[3,[116]]]],[88,[[78,[97]]]],[[116,81],82],[[116,81],82],[[]],[[1,[89,[90]]],[[3,[116]]]],[[83,118],116],[[85,118],116],[[116,101]],[[]],[[116,1],102],[[],103],[[],[[104,[116]]]],[[118,105,106,111],116],0,0,[[116,109],78],0,[116,117],0,[116,119],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],[116,113],[116,113],[[116,116],100],[116,117],[[118,112,100,111,100,111],116],[116,111],[116,117],0,[1,[[89,[88]]]],[[83,1],[[3,[[89,[90]]]]]],0,0,0,0,[[]],[[]],[83,83],[[]],[94,[[78,[83]]]],[1,[[3,[95]]]],[[83,83],96],[[],96],[88,[[78,[97]]]],[88,[[3,[83]]]],[88,[[3,[83]]]],[[83,120],105],[[83,81],82],[[83,81],82],[[]],[[1,[89,[90]]],[[3,[83]]]],[[114,100,100],[[6,[4,4]]]],[[83,101]],0,[[]],[[83,1],102],[[],103],[[],[[104,[83]]]],[[114,105,105,106,106,87,87],83],[[83,109],78],[[]],[[],4],[[],78],[[],78],0,0,[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],[[83,83],100],[83,111],[[114,112,112,100,100,111,111,100,100,87,87],83],[83,113],0,0,[1,[[89,[88]]]],[[85,1],[[3,[[89,[90]]]]]],[[]],[[]],[85,85],[[]],[94,[[78,[85]]]],[1,[[3,[95]]]],[[85,85],96],[[],96],[88,[[78,[97]]]],[88,[[3,[85]]]],[88,[[3,[85]]]],[[85,81],82],[[85,81],82],[[]],[[1,[89,[90]]],[[3,[85]]]],[[114,100,100],[[6,[4,4]]]],[[85,101]],0,[[]],[[85,1],102],[[],103],[[],[[104,[85]]]],[[114,105,106,121,122,87,87],85],0,[[85,109],78],0,[[]],[[],4],0,[[],78],[[],78],0,0,[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],[[85,85],100],[85,111],[[114,112,100,111,100,121,122,111,111],85],[85,113],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[113,123],[123,113],[113,124],[124,113],[113,121],[121,113],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[1,[[89,[88]]]],[123,99],[124,99],[121,99],[125,99],[126,99],[127,99],[115,99],[128,99],[129,99],[130,99],[131,99],[132,99],[133,99],[134,99],[135,99],[118,99],[136,99],[137,99],[138,99],[120,99],[139,99],[140,99],[141,99],[142,99],[113,125],[125,113],[113,126],[126,113],[113,127],[127,113],[113,115],[115,113],[113,128],[128,113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,123],[124,124],[121,121],[125,125],[126,126],[127,127],[115,115],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[118,118],[136,136],[137,137],[138,138],[120,120],[139,139],[140,140],[141,141],[142,142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[123,123],93],[[124,124],93],[[121,121],93],[[125,125],93],[[126,126],93],[[127,127],93],[[115,115],93],[[128,128],93],[[129,129],93],[[130,130],93],[[131,131],93],[[132,132],93],[[133,133],93],[[134,134],93],[[135,135],93],[[118,118],93],[[136,136],93],[[137,137],93],[[138,138],93],[[120,120],93],[[139,139],93],[[140,140],93],[[141,141],93],[[142,142],93],[113,129],[129,113],[113,130],[130,113],[94,[[78,[123]]]],[94,[[78,[124]]]],[94,[[78,[121]]]],[94,[[78,[125]]]],[94,[[78,[126]]]],[94,[[78,[127]]]],[94,[[78,[115]]]],[94,[[78,[128]]]],[94,[[78,[129]]]],[94,[[78,[130]]]],[94,[[78,[131]]]],[94,[[78,[132]]]],[94,[[78,[133]]]],[94,[[78,[134]]]],[94,[[78,[135]]]],[94,[[78,[118]]]],[94,[[78,[136]]]],[94,[[78,[137]]]],[94,[[78,[138]]]],[94,[[78,[120]]]],[94,[[78,[139]]]],[94,[[78,[140]]]],[94,[[78,[141]]]],[94,[[78,[142]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[1,[[3,[95]]]],[[123,123],96],[[124,124],96],[[121,121],96],[[125,125],96],[[126,126],96],[[127,127],96],[[115,115],96],[[128,128],96],[[129,129],96],[[130,130],96],[[131,131],96],[[132,132],96],[[133,133],96],[[134,134],96],[[135,135],96],[[118,118],96],[[136,136],96],[[137,137],96],[[138,138],96],[[120,120],96],[[139,139],96],[[140,140],96],[[141,141],96],[[142,142],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[88,[[3,[123]]]],[88,[[3,[123]]]],[88,[[78,[97]]]],[88,[[3,[124]]]],[88,[[3,[124]]]],[88,[[78,[97]]]],[88,[[78,[97]]]],[88,[[3,[121]]]],[88,[[3,[121]]]],[88,[[78,[97]]]],[88,[[3,[125]]]],[88,[[3,[125]]]],[88,[[3,[126]]]],[88,[[78,[97]]]],[88,[[3,[126]]]],[88,[[3,[127]]]],[88,[[3,[127]]]],[88,[[78,[97]]]],[88,[[3,[115]]]],[88,[[3,[115]]]],[88,[[78,[97]]]],[88,[[3,[128]]]],[88,[[3,[128]]]],[88,[[78,[97]]]],[88,[[78,[97]]]],[88,[[3,[129]]]],[88,[[3,[129]]]],[88,[[3,[130]]]],[88,[[3,[130]]]],[88,[[78,[97]]]],[88,[[78,[97]]]],[88,[[3,[131]]]],[88,[[3,[131]]]],[88,[[3,[132]]]],[88,[[3,[132]]]],[88,[[78,[97]]]],[88,[[3,[133]]]],[88,[[3,[133]]]],[88,[[78,[97]]]],[88,[[78,[97]]]],[88,[[3,[134]]]],[88,[[3,[134]]]],[88,[[3,[135]]]],[88,[[3,[135]]]],[88,[[78,[97]]]],[88,[[78,[97]]]],[88,[[3,[118]]]],[88,[[3,[118]]]],[88,[[3,[136]]]],[88,[[78,[97]]]],[88,[[3,[136]]]],[88,[[3,[137]]]],[88,[[3,[137]]]],[88,[[78,[97]]]],[88,[[3,[138]]]],[88,[[3,[138]]]],[88,[[78,[97]]]],[88,[[3,[120]]]],[88,[[78,[97]]]],[88,[[3,[120]]]],[88,[[3,[139]]]],[88,[[78,[97]]]],[88,[[3,[139]]]],[88,[[78,[97]]]],[88,[[3,[140]]]],[88,[[3,[140]]]],[88,[[3,[141]]]],[88,[[78,[97]]]],[88,[[3,[141]]]],[88,[[3,[142]]]],[88,[[78,[97]]]],[88,[[3,[142]]]],[[123,81],82],[[123,81],[[78,[143]]]],[[124,81],82],[[124,81],[[78,[143]]]],[[121,81],82],[[121,81],[[78,[143]]]],[[125,81],82],[[125,81],[[78,[143]]]],[[126,81],82],[[126,81],[[78,[143]]]],[[127,81],[[78,[143]]]],[[127,81],82],[[115,81],[[78,[143]]]],[[115,81],82],[[128,81],82],[[128,81],[[78,[143]]]],[[129,81],[[78,[143]]]],[[129,81],82],[[130,81],[[78,[143]]]],[[130,81],82],[[131,81],82],[[131,81],[[78,[143]]]],[[132,81],[[78,[143]]]],[[132,81],82],[[133,81],[[78,[143]]]],[[133,81],82],[[134,81],82],[[134,81],[[78,[143]]]],[[135,81],[[78,[143]]]],[[135,81],82],[[118,81],82],[[118,81],[[78,[143]]]],[[136,81],82],[[136,81],[[78,[143]]]],[[137,81],82],[[137,81],[[78,[143]]]],[[138,81],82],[[138,81],[[78,[143]]]],[[120,81],82],[[120,81],[[78,[143]]]],[[139,81],82],[[139,81],[[78,[143]]]],[[140,81],[[78,[143]]]],[[140,81],82],[[141,81],82],[[141,81],[[78,[143]]]],[[142,81],82],[[142,81],[[78,[143]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[144,[[107,[123]]]],[144,[[107,[124]]]],[144,[[107,[121]]]],[144,[[107,[125]]]],[144,[[107,[126]]]],[144,[[107,[127]]]],[144,[[107,[115]]]],[144,[[107,[128]]]],[144,[[107,[129]]]],[144,[[107,[130]]]],[144,[[107,[131]]]],[144,[[107,[132]]]],[144,[[107,[133]]]],[144,[[107,[134]]]],[144,[[107,[135]]]],[144,[[107,[118]]]],[144,[[107,[136]]]],[144,[[107,[137]]]],[144,[[107,[138]]]],[144,[[107,[120]]]],[144,[[107,[139]]]],[144,[[107,[140]]]],[144,[[107,[141]]]],[144,[[107,[142]]]],[99,[[78,[123]]]],[99,[[78,[124]]]],[99,[[78,[121]]]],[99,[[78,[125]]]],[99,[[78,[126]]]],[99,[[78,[127]]]],[99,[[78,[115]]]],[99,[[78,[128]]]],[99,[[78,[129]]]],[99,[[78,[130]]]],[99,[[78,[131]]]],[99,[[78,[132]]]],[99,[[78,[133]]]],[99,[[78,[134]]]],[99,[[78,[135]]]],[99,[[78,[118]]]],[99,[[78,[136]]]],[99,[[78,[137]]]],[99,[[78,[138]]]],[99,[[78,[120]]]],[99,[[78,[139]]]],[99,[[78,[140]]]],[99,[[78,[141]]]],[99,[[78,[142]]]],[100,[[107,[145]]]],[100,[[107,[115]]]],[100,[[107,[128]]]],[100,[[107,[118]]]],[[123,101]],[[124,101]],[[121,101]],[[125,101]],[[126,101]],[[127,101]],[[115,101]],[[128,101]],[[129,101]],[[130,101]],[[131,101]],[[132,101]],[[133,101]],[[134,101]],[[135,101]],[[118,101]],[[136,101]],[[137,101]],[[138,101]],[[120,101]],[[139,101]],[[140,101]],[[141,101]],[[142,101]],[113,131],[131,113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[123,1],102],[[124,1],102],[[121,1],102],[[125,1],102],[[126,1],102],[[127,1],102],[[115,1],102],[[128,1],102],[[129,1],102],[[130,1],102],[[131,1],102],[[132,1],102],[[133,1],102],[[134,1],102],[[135,1],102],[[118,1],102],[[136,1],102],[[137,1],102],[[138,1],102],[[120,1],102],[[139,1],102],[[140,1],102],[[141,1],102],[[142,1],102],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],[[104,[123]]]],[[],[[104,[124]]]],[[],[[104,[121]]]],[[],[[104,[125]]]],[[],[[104,[126]]]],[[],[[104,[127]]]],[[],[[104,[115]]]],[[],[[104,[128]]]],[[],[[104,[129]]]],[[],[[104,[130]]]],[[],[[104,[131]]]],[[],[[104,[132]]]],[[],[[104,[133]]]],[[],[[104,[134]]]],[[],[[104,[135]]]],[[],[[104,[118]]]],[[],[[104,[136]]]],[[],[[104,[137]]]],[[],[[104,[138]]]],[[],[[104,[120]]]],[[],[[104,[139]]]],[[],[[104,[140]]]],[[],[[104,[141]]]],[[],[[104,[142]]]],[113,132],[132,113],[113,133],[133,113],[113,134],[134,113],[113,135],[135,113],[113,118],[118,113],[113,136],[136,113],[113,137],[137,113],[[123,123],[[107,[93]]]],[[124,124],[[107,[93]]]],[[121,121],[[107,[93]]]],[[125,125],[[107,[93]]]],[[126,126],[[107,[93]]]],[[127,127],[[107,[93]]]],[[115,115],[[107,[93]]]],[[128,128],[[107,[93]]]],[[129,129],[[107,[93]]]],[[130,130],[[107,[93]]]],[[131,131],[[107,[93]]]],[[132,132],[[107,[93]]]],[[133,133],[[107,[93]]]],[[134,134],[[107,[93]]]],[[135,135],[[107,[93]]]],[[118,118],[[107,[93]]]],[[136,136],[[107,[93]]]],[[137,137],[[107,[93]]]],[[138,138],[[107,[93]]]],[[120,120],[[107,[93]]]],[[139,139],[[107,[93]]]],[[140,140],[[107,[93]]]],[[141,141],[[107,[93]]]],[[142,142],[[107,[93]]]],[113,138],[138,113],[113,120],[120,113],[[123,109],78],[[124,109],78],[[121,109],78],[[125,109],78],[[126,109],78],[[127,109],78],[[115,109],78],[[128,109],78],[[129,109],78],[[130,109],78],[[131,109],78],[[132,109],78],[[133,109],78],[[134,109],78],[[135,109],78],[[118,109],78],[[136,109],78],[[137,109],78],[[138,109],78],[[120,109],78],[[139,109],78],[[140,109],78],[[141,109],78],[[142,109],78],[113,139],[139,113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[113,140],[140,113],[113,141],[141,113],[[136,146],[[78,[136,147]]]],[113,142],[142,113],[[],78],[99,[[78,[123]]]],[99,[[78,[124]]]],[[],78],[[],78],[99,[[78,[121]]]],[[],78],[99,[[78,[125]]]],[99,[[78,[126]]]],[[],78],[99,[[78,[127]]]],[[],78],[[],78],[99,[[78,[115]]]],[99,[[78,[128]]]],[[],78],[99,[[78,[129]]]],[[],78],[[],78],[99,[[78,[130]]]],[[],78],[99,[[78,[131]]]],[[],78],[99,[[78,[132]]]],[99,[[78,[133]]]],[[],78],[99,[[78,[134]]]],[[],78],[[],78],[99,[[78,[135]]]],[99,[[78,[118]]]],[[],78],[99,[[78,[136]]]],[[],78],[99,[[78,[137]]]],[[],78],[99,[[78,[138]]]],[[],78],[99,[[78,[120]]]],[[],78],[99,[[78,[139]]]],[[],78],[[],78],[99,[[78,[140]]]],[[],78],[99,[[78,[141]]]],[99,[[78,[142]]]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,110],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],[1,[[78,[[89,[88]],97]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[148,149],148],[[150,149],150],[[151,149],151],[[152,[107,[149]]],152],[[153,[107,[149]]],153],[[154,[107,[149]]],154],[[155,149],155],[[156,149],156],[[157,[107,[149]]],157],[[158,[107,[149]]],158],[[159,[107,[149]]],159],[[160,149],160],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[161,[[78,[162,163]]]],[164,[[78,[165,166]]]],[148,[[78,[167,168]]]],[150,[[78,[169,170]]]],[151,[[78,[171,172]]]],[152,[[78,[173,174]]]],[153,[[78,[175,176]]]],[154,[[78,[177,178]]]],[155,[[78,[179,180]]]],[156,[[78,[181,182]]]],[157,[[78,[183,184]]]],[158,[[78,[185,186]]]],[159,[[78,[187,188]]]],[160,[[78,[189,190]]]],[[161,191],161],[[164,191],164],[[148,191],148],[[150,191],150],[[151,191],151],[[152,191],152],[[153,191],153],[[154,191],154],[[155,191],155],[[156,191],156],[[157,191],157],[[158,191],158],[[159,191],159],[[160,191],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[146,146],[161,161],[162,162],[164,164],[165,165],[148,148],[167,167],[150,150],[169,169],[151,151],[171,171],[152,152],[173,173],[153,153],[175,175],[154,154],[177,177],[155,155],[179,179],[156,156],[181,181],[157,157],[183,183],[158,158],[185,185],[159,159],[187,187],[160,160],[189,189],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[160,192],160],0,[[161,[107,[129]]],161],0,[[160,5],160],0,[[],161],[[],162],[[],164],[[],165],[[],148],[[],167],[[],150],[[],169],[[],151],[[],171],[[],152],[[],173],[[],153],[[],175],[[],154],[[],177],[[],155],[[],179],[[],156],[[],181],[[],157],[[],183],[[],158],[[],185],[[],159],[[],187],[[],160],[94,[[78,[162]]]],[94,[[78,[165]]]],[94,[[78,[167]]]],[94,[[78,[169]]]],[94,[[78,[171]]]],[94,[[78,[173]]]],[94,[[78,[175]]]],[94,[[78,[177]]]],[94,[[78,[179]]]],[94,[[78,[181]]]],[94,[[78,[183]]]],[94,[[78,[185]]]],[94,[[78,[187]]]],[94,[[78,[189]]]],[[161,[107,[106]]],161],0,[[161,[107,[142]]],161],0,[[146,146],96],[[162,162],96],[[165,165],96],[[167,167],96],[[169,169],96],[[171,171],96],[[173,173],96],[[175,175],96],[[177,177],96],[[179,179],96],[[181,181],96],[[183,183],96],[[185,185],96],[[187,187],96],[[189,189],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[161,193],161],[[164,193],164],[[148,193],148],[[150,193],150],[[151,193],151],[[152,193],152],[[153,193],153],[[154,193],154],[[155,193],155],[[156,193],156],[[157,193],157],[[158,193],158],[[159,193],159],[[160,193],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[161,[107,[194]]],161],0,[[161,[107,[[6,[4,4]]]]],161],0,[[161,[107,[191]]],161],0,[[161,[107,[87]]],161],0,[[146,81],82],[[163,81],82],[[163,81],82],[[162,81],82],[[166,81],82],[[166,81],82],[[165,81],82],[[168,81],82],[[168,81],82],[[167,81],82],[[170,81],82],[[170,81],82],[[169,81],82],[[172,81],82],[[172,81],82],[[171,81],82],[[174,81],82],[[174,81],82],[[173,81],82],[[176,81],82],[[176,81],82],[[175,81],82],[[178,81],82],[[178,81],82],[[177,81],82],[[180,81],82],[[180,81],82],[[179,81],82],[[182,81],82],[[182,81],82],[[181,81],82],[[184,81],82],[[184,81],82],[[183,81],82],[[186,81],82],[[186,81],82],[[185,81],82],[[188,81],82],[[188,81],82],[[187,81],82],[[190,81],82],[[190,81],82],[[189,81],82],[[]],[[]],[4,163],[[]],[195,163],[196,162],[197,162],[198,162],[199,162],[[]],[200,162],[201,162],[202,162],[203,162],[[]],[[]],[195,166],[4,166],[[]],[[]],[195,168],[4,168],[[]],[[]],[[]],[195,170],[4,170],[[]],[[]],[[]],[4,172],[[]],[195,172],[[]],[[]],[[]],[4,174],[195,174],[[]],[[]],[[]],[4,176],[195,176],[[]],[[]],[195,178],[4,178],[[]],[[]],[[]],[[]],[195,180],[4,180],[[]],[[]],[[]],[195,182],[4,182],[[]],[[]],[4,184],[[]],[195,184],[[]],[[]],[4,186],[[]],[195,186],[[]],[[]],[4,188],[[]],[195,188],[[]],[[]],[[]],[4,190],[195,190],[[]],[[161,114],161],[[164,114],164],[[148,114],148],[[150,114],150],[[151,114],151],[[152,114],152],[[153,114],153],[[154,114],154],[[155,114],155],[[156,114],156],[[157,114],157],[[158,114],158],[[159,114],159],[[160,114],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[160,105],160],0,[[160,106],160],0,[[161,[107,[105]]],161],0,[[161,[107,[[204,[191]]]]],161],0,[[160,132],160],0,[[161,[107,[205]]],161],0,[[161,118],161],[[160,118],160],0,0,[[161,137],161],[[160,137],160],0,0,[[161,[107,[191]]],161],0,[[160,[107,[206]]],160],0,[[161,96],161],0,[[161,[107,[105]]],161],[[159,[107,[105]]],159],0,0,[108],[108],[108],[108],[108],[108],[108],[108],[108],[108],[108],[108],[108],[108],[[161,106],161],[[159,106],159],0,0,[[161,96],161],0,[[164,[207,[4]]],164],[[151,4],151],[[157,[207,[4]]],157],[[158,[207,[4]]],158],0,0,0,0,[[161,96],161],[[150,96],150],[[151,96],151],[[152,96],152],[[153,96],153],[[154,96],154],[[155,96],155],[[156,96],156],[[157,96],157],[[158,96],158],[[159,96],159],[[160,96],160],0,0,0,0,0,0,0,0,0,0,0,0,[[161,96],161],0,[[162,109],78],[[165,109],78],[[167,109],78],[[169,109],78],[[171,109],78],[[173,109],78],[[175,109],78],[[177,109],78],[[179,109],78],[[181,109],78],[[183,109],78],[[185,109],78],[[187,109],78],[[189,109],78],[[161,208],161],[[164,208],164],[[148,208],148],[[150,208],150],[[151,208],151],[[152,208],152],[[153,208],153],[[154,208],154],[[155,208],155],[[156,208],156],[[157,208],157],[[158,208],158],[[159,208],159],[[160,208],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[161,[107,[4]]],161],0,[[161,139],161],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[160,122],160],0,[[161,209],161],[[164,209],164],[[148,209],148],[[150,209],150],[[151,209],151],[[152,209],152],[[153,209],153],[[154,209],154],[[155,209],155],[[156,209],156],[[157,209],157],[[158,209],158],[[159,209],159],[[160,209],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[161,[107,[105]]],161],0,[[161,[107,[141]]],161],0,[[161,[107,[105]]],161],[[159,[107,[105]]],159],0,0,[[161,[107,[142]]],161],0,[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[161,87],161],[[164,87],164],[[148,87],148],[[150,87],150],[[151,87],151],[[152,87],152],[[153,87],153],[[154,87],154],[[155,87],155],[[156,87],156],[[157,87],157],[[158,87],158],[[159,87],159],[[160,87],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[161,87],161],[[164,87],164],[[148,87],148],[[150,87],150],[[151,87],151],[[152,87],152],[[153,87],153],[[154,87],154],[[155,87],155],[[156,87],156],[[157,87],157],[[158,87],158],[[159,87],159],[[160,87],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[150,210],150],[[151,210],151],[[152,[107,[210]]],152],[[153,[107,[210]]],153],[[154,[107,[210]]],154],[[155,[107,[210]]],155],[[156,[107,[210]]],156],[[157,[107,[210]]],157],[[158,[107,[210]]],158],[[159,[107,[210]]],159],[[160,210],160],0,0,0,0,0,0,0,0,0,0,0,[165,165],[165],[[209,208,114,191,113,193,87,87],165],[165,113],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[211,211],[212,212],[213,213],[214,214],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[211,211],96],[[212,212],96],[[213,213],96],[[214,214],96],[[211,81],82],[[212,81],82],[[213,81],82],[[214,81],82],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,0,0,0,0,0,0,0,0,0,0,0,[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,[149,111],[113,149],[1,[[89,[88]]]],[[]],[[]],[149,149],[[]],[[149,149],93],[[],149],[94,[[78,[149]]]],[1,[[3,[95]]]],[[149,149],96],[[],96],[88,[[3,[149]]]],[88,[[3,[149]]]],[88,[[78,[97]]]],[[149,81],82],[[149,81],82],[[]],[99,[[78,[149]]]],[[149,101]],[[]],[[149,1],102],[[],103],[[],[[104,[149]]]],[99,149],[[149,149],[[107,[93]]]],[[149,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[215,111],[113,215],[215,215],[[]],[[215,215],93],[94,[[78,[215]]]],[1,[[3,[95]]]],[[215,215],96],[[],96],[88,[[78,[97]]]],[88,[[3,[215]]]],[88,[[3,[215]]]],[[215,81],82],[[215,81],82],[[]],[99,[[78,[215]]]],[[215,101]],[[]],[[215,1],102],[[],103],[[],[[104,[215]]]],[99,215],[[215,215],[[107,[93]]]],[[215,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[191,111],[113,191],[191,191],[[]],[[191,191],93],[[],191],[94,[[78,[191]]]],[1,[[3,[95]]]],[[191,191],96],[[],96],[88,[[3,[191]]]],[88,[[78,[97]]]],[88,[[3,[191]]]],[[191,81],82],[[191,81],82],[[]],[99,[[78,[191]]]],[[191,101]],[[]],[[191,1],102],[[],103],[[],[[104,[191]]]],[99,191],[[191,191],[[107,[93]]]],[[191,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[216,216],[[]],[[216,216],93],[216,111],[113,216],[94,[[78,[216]]]],[1,[[3,[95]]]],[[216,216],96],[[],96],[88,[[3,[216]]]],[88,[[3,[216]]]],[88,[[78,[97]]]],[[216,81],82],[[216,81],82],[[]],[99,[[78,[216]]]],[[216,101]],[[]],[[216,1],102],[[],103],[[],[[104,[216]]]],[99,216],[[216,216],[[107,[93]]]],[[216,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[194,194],[[]],[[194,194],93],[94,[[78,[194]]]],[1,[[3,[95]]]],[[194,194],96],[[],96],[194,111],[113,194],[88,[[78,[97]]]],[88,[[3,[194]]]],[88,[[3,[194]]]],[[194,81],82],[[194,81],82],[[]],[99,[[78,[194]]]],[[194,101]],[[]],[[194,1],102],[[],103],[[],[[104,[194]]]],[99,194],[[194,194],[[107,[93]]]],[[194,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,0,[1,[[89,[88]]]],[[]],[[]],[[]],[[]],[114,114],[[]],[[114,114],93],[[],114],[94,[[78,[114]]]],[1,[[3,[95]]]],[[114,114],96],[[],96],[88,[[78,[97]]]],[88,[[3,[114]]]],[88,[[3,[114]]]],[[114,81],82],[[114,81],82],[[217,81],82],[[217,81],82],[[]],[[]],[99,[[78,[114]]]],[[114,101]],[114,111],[114,100],[[218,219],114],[113,114],[114,113],[[]],[[]],[[114,1],102],[114,96],[[],103],[[],[[104,[114]]]],[[218,219],114],[[114,114],[[107,[93]]]],[108],[[114,109],78],0,[[]],[[],4],[[],4],[[],78],[[],78],[[],78],[[],78],[[],79],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[205,205],[[]],[[205,205],93],[94,[[78,[205]]]],[1,[[3,[95]]]],[[205,205],96],[[],96],[88,[[78,[97]]]],[88,[[3,[205]]]],[88,[[3,[205]]]],[[205,81],82],[[205,81],82],[[]],[99,[[78,[205]]]],[[205,101]],[[]],[[205,1],102],[[],103],[[],[[104,[205]]]],[99,205],[205,111],[113,205],[[205,205],[[107,[93]]]],[[205,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[206,206],[[]],[[206,206],93],[94,[[78,[206]]]],[1,[[3,[95]]]],[[206,206],96],[[],96],[88,[[78,[97]]]],[88,[[3,[206]]]],[88,[[3,[206]]]],[[206,81],82],[[206,81],82],[[]],[99,[[78,[206]]]],[[206,101]],[[]],[[206,1],102],[[],103],[[],[[104,[206]]]],[99,206],[[206,206],[[107,[93]]]],[206,111],[113,206],[[206,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[208,208],[[]],[[208,208],93],[[],208],[94,[[78,[208]]]],[1,[[3,[95]]]],[[208,208],96],[[],96],[88,[[3,[208]]]],[88,[[3,[208]]]],[88,[[78,[97]]]],[[208,81],82],[[208,81],82],[[]],[99,[[78,[208]]]],[[208,101]],[[]],[[208,1],102],[[],103],[[],[[104,[208]]]],[99,208],[[208,208],[[107,[93]]]],[[208,109],78],[208,111],[113,208],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[218,218],[[]],[[218,218],93],[[],218],[94,[[78,[218]]]],[1,[[3,[95]]]],[[218,218],96],[[],96],[88,[[3,[218]]]],[88,[[78,[97]]]],[88,[[3,[218]]]],[[218,81],82],[[218,81],82],[[]],[99,[[78,[218]]]],[[218,101]],[[]],[[218,1],102],[[],103],[[],[[104,[218]]]],[99,218],[[218,218],[[107,[93]]]],[[218,109],78],[218,111],[113,218],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[122,122],[[]],[[122,122],93],[94,[[78,[122]]]],[1,[[3,[95]]]],[[122,122],96],[[],96],[88,[[3,[122]]]],[88,[[3,[122]]]],[88,[[78,[97]]]],[[122,81],82],[[122,81],82],[[]],[99,[[78,[122]]]],[[122,101]],[[]],[[122,1],102],[[],103],[[],[[104,[122]]]],[99,122],[[122,122],[[107,[93]]]],[[122,109],78],[[]],[[],4],[122,111],[113,122],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[209,209],[[]],[[209,209],93],[[],209],[94,[[78,[209]]]],[1,[[3,[95]]]],[[209,209],96],[[],96],[88,[[78,[97]]]],[88,[[3,[209]]]],[88,[[3,[209]]]],[[209,81],82],[[209,81],82],[[]],[99,[[78,[209]]]],[[209,101]],[[]],[[209,1],102],[[],103],[[],[[104,[209]]]],[99,209],[[209,209],[[107,[93]]]],[[209,109],78],[[]],[[],4],[209,111],[113,209],[[],78],[[],78],[[],79],[1,110],0,[1,[[78,[[89,[88]],97]]]],0,0,[1,[[89,[88]]]],[[]],[[]],[219,219],[[]],[[219,219],93],[[],219],[94,[[78,[219]]]],[1,[[3,[95]]]],[[219,219],96],[[],96],[88,[[3,[219]]]],[88,[[78,[97]]]],[88,[[3,[219]]]],[[219,81],82],[[219,81],82],[[]],[99,[[78,[219]]]],[[219,101]],[[]],[[219,1],102],[219,96],[[],103],[[],[[104,[219]]]],[99,219],[[219,219],[[107,[93]]]],[[219,109],78],[[],219],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[219,111],[219,100],[113,219],[1,[[78,[[89,[88]],97]]]],0,[1,[[89,[88]]]],[[]],[[]],[210,210],[[]],[[210,210],93],[[],210],[94,[[78,[210]]]],[1,[[3,[95]]]],[[210,210],96],[[],96],[88,[[3,[210]]]],[88,[[78,[97]]]],[88,[[3,[210]]]],[[210,81],82],[[210,81],82],[[]],[99,[[78,[210]]]],[[210,101]],[[]],[[210,1],102],[[],103],[[],[[104,[210]]]],[99,210],[[210,210],[[107,[93]]]],[[210,109],78],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],0,[210,111],[113,210],[1,[[78,[[89,[88]],97]]]],0,[[],125],[[],126],[[],[[107,[5]]]],[[106,105],106],[[106,105,[107,[96]]],192],[[],114],[[],96],[[],[[107,[106]]]],[117,105],[117,106],[[],220],[[],220],[[],220],[[],[[107,[105]]]],[[],[[107,[106]]]],[[],[[107,[105]]]],[[],[[107,[106]]]],[[],106],[[],105],[[],100],[[],5],[[],218],[[],5],[[],106],[[],100],[[],218],[[],220],[[],219],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[221,116,111,111]],[[221,86]],[221,[[204,[222]]]],[221,[[107,[105]]]],[221,[[107,[106]]]],[221,[[107,[105]]]],[221,[[107,[106]]]],[221,[[204,[222]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[221,[[78,[223]]]],[[221,111,111]],[[221,111,111]],[[221,111,111]],0,[[221,116,111,111]],[[224,81],82],[[224,81],82],[[223,81],82],[[223,81],82],[[]],[[]],[[]],[[221,106,118],117],[221,96],[221,96],0,[[]],[[]],[[]],[221,[[107,[117]]]],[[114,128],221],[[221,144],4],[108],[108],[221],0,[[221,116],204],[221,[[107,[117]]]],[[],4],[[],4],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,[[],79],[[],79],[[],79],[[221,116,111,111]],[[221,83]],[[221,85]],0,[[]],[[]],[225],[225],[[]],[[]],[[225,116,111,111]],[[225,86]],[225,226],[225,105],[225,106],[225,105],[225,106],[225,226],[225,128],[225],[[225,111,111]],[[225,111,111]],[[225,111,111]],[225,111],[[225,116,111,111]],[225],[[225,106,118],117],[225,100],[225,100],[225,114],[225,117],[[114,128],225],[[225,144],113],[225],[225,111],[[225,116],226],[225,117],[225,111],[[225,116,111,111]],[[225,83]],[[225,85]],[[],78],[[],78],[[],79],[226],0,0,[[227,116]],[[227,[204,[116]]]],[[]],[[]],[[]],[[]],0,[227],[119,119],[[]],[[119,119],93],[[227,116]],[[119,119],96],[[],96],[227,117],[[119,81],82],[[119,81],82],[[]],[[]],[[]],[[]],[227,96],[227,144],0,[118,227],[[105,118],119],[[119,119],[[107,[93]]]],[[227,111]],0,0,[[227,116],204],[[]],[[],4],[227,[[107,[222]]]],[[],78],[[],78],[[],78],[[],78],[[],79],[[],79],[[227,116]],0,[227,117],0,[[222,116]],[[222,[204,[116]]]],[[]],[[]],[222,222],[[]],[[222,222],93],[[222,116]],[[222,222],96],[[],96],[222,117],[222,111],[[222,81],82],[[]],[116,222],[[222,222],96],[[222,222],96],[[]],[222,96],[[222,222],96],[222,144],[[222,222],96],[119,222],0,[[222,222],[[107,[93]]]],0,[[222,111]],[[]],[[],78],[[],78],[[],79],[[222,116]],[222,117],[222,111],0,[[]],[[]],[228,228],[[]],[228],[228],[[]],[[]],[228,228],[228],[228,117],[[118,105,226],228],[228,226],[228,105],[228,117],[222,228],[[]],[[],78],[[],78],[[],79],[226],[226],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[107,[149]]]],0,[[],[[107,[117]]]],0,[[]],[[]],[[]],[[]],[[],191],0,[[],[[107,[129]]]],0,[[],[[107,[142]]]],0,[[],144],[[],[[204,[146]]]],0,[[],[[107,[194]]]],0,[[],[[107,[[6,[4,4]]]]]],0,[[],[[107,[191]]]],0,[[],106],0,[[147,81],82],[[147,81],82],[[]],[[]],0,0,[[],193],0,[[],114],0,[[]],[[]],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],0,[[],96],0,[[],96],0,[[],96],[[],146],[[],[[107,[122]]]],0,[[],106],0,[[],[[107,[[204,[191]]]]]],0,[[],[[107,[132]]]],0,[[209,208,114,191,118,137,106,139,96,96,96,[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],229],[[],[[107,[205]]]],0,[[],137],0,[[],[[107,[191]]]],0,[[],[[107,[206]]]],0,0,[[],[[107,[105]]]],[108],[[],106],0,[[],118],0,[[],[[107,[117]]]],0,[[],136],0,[[],208],0,[[],[[107,[4]]]],0,[[],139],0,[[],4],[[],[[204,[122]]]],0,[[],209],0,[[],[[107,[105]]]],[[],[[107,[142]]]],[[],78],[[],78],[[],78],[[],78],[[],87],0,[[],87],0,[[],79],[[],79],[[],[[107,[210]]]],0,[[],[[204,[210]]]],0,0,[200,[[107,[149]]]],[200,[[107,[117]]]],[[]],[[]],[200,191],[200,[[107,[129]]]],[[],200],[200],[200],0,[200,[[107,[142]]]],[200,[[204,[146]]]],[200,[[107,[194]]]],[200,[[107,[[6,[4,4]]]]]],[200,[[107,[191]]]],0,[200,106],[[]],[162,200],[200,193],[200,114],[[]],[200,96],[200,96],[200,96],[200,[[107,[122]]]],[200,106],[200,[[107,[[204,[191]]]]]],[200,[[107,[132]]]],[[209,208,114,191,118,106,105,139,[107,[87]],96,96,96,[107,[106]],[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],200],[200,[[107,[205]]]],[200,137],[200,[[107,[191]]]],[200,[[107,[206]]]],[200,[[107,[105]]]],0,[200,106],[200,118],[200,[[107,[117]]]],[200,136],[200,208],[200,[[107,[4]]]],[200,139],[200,[[204,[122]]]],[200,209],[200,[[107,[105]]]],[200,[[107,[142]]]],[[],78],[[],78],[200,87],[200,87],[[],79],[200,[[107,[210]]]],[200,[[204,[210]]]],0,[198,[[107,[149]]]],[198,[[107,[117]]]],[[]],[[]],[198,191],[198,[[107,[129]]]],[[],198],[198],[198],0,[198,[[107,[142]]]],[198,[[204,[146]]]],[198,[[107,[194]]]],[198,[[107,[[6,[4,4]]]]]],[198,[[107,[191]]]],0,[198,106],[162,198],[[]],[198,193],[198,114],[[]],[198,96],[198,96],[198,96],0,[198,[[107,[122]]]],[198,106],[198,[[107,[[204,[191]]]]]],[198,[[107,[132]]]],[[209,208,114,191,118,106,105,105,142,139,[107,[87]],96,96,96,[107,[106]],[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],198],[198,[[107,[205]]]],[198,137],[198,[[107,[191]]]],[198,[[107,[206]]]],[198,[[107,[105]]]],0,[198,106],[198,118],[198,[[107,[117]]]],[198,136],[198,208],[198,[[107,[4]]]],[198,139],[198,[[204,[122]]]],[198,209],[198,[[107,[105]]]],0,[198,[[107,[142]]]],0,[[],78],[[],78],[198,87],[198,87],0,[[],79],[198,[[107,[210]]]],[198,[[204,[210]]]],0,[201,[[107,[149]]]],[201,[[107,[117]]]],[[]],[[]],[201,191],[201,[[107,[129]]]],[[],201],[201],[201],[201,[[107,[142]]]],[201,[[204,[146]]]],[201,[[107,[194]]]],[201,[[107,[[6,[4,4]]]]]],[201,[[107,[191]]]],[201,106],[[]],[162,201],[201,193],[201,114],[[]],[201,96],[201,96],[201,96],[201,[[107,[122]]]],[201,106],[201,[[107,[[204,[191]]]]]],[201,[[107,[132]]]],[[209,208,114,191,118,106,139,96,96,[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],201],[201,[[107,[205]]]],[201,137],[201,[[107,[191]]]],[201,[[107,[206]]]],[201,[[107,[105]]]],[201,106],[201,118],[201,[[107,[117]]]],[201,136],[201,208],[201,[[107,[4]]]],[201,139],[201,[[204,[122]]]],[201,209],[201,[[107,[105]]]],[201,[[107,[142]]]],[[],78],[[],78],[201,87],[201,87],[[],79],[201,[[107,[210]]]],[201,[[204,[210]]]],0,[197,[[107,[149]]]],[197,[[107,[117]]]],[[]],[[]],[197,191],[197,[[107,[129]]]],[[],197],[197],[197],0,[197,[[107,[142]]]],[197,[[204,[146]]]],[197,[[107,[194]]]],[197,[[107,[[6,[4,4]]]]]],[197,[[107,[191]]]],0,[197,106],[162,197],[[]],[197,193],[197,114],[[]],[197,96],[197,96],[197,96],0,[197,[[107,[122]]]],[197,106],[197,[[107,[[204,[191]]]]]],[197,[[107,[132]]]],[[209,208,114,191,118,106,105,142,139,[107,[87]],96,96,96,[107,[106]],[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],197],[197,[[107,[205]]]],[197,137],[197,[[107,[191]]]],[197,[[107,[206]]]],[197,[[107,[105]]]],[197,106],[197,118],[197,[[107,[117]]]],[197,136],[197,208],[197,[[107,[4]]]],[197,139],[197,[[204,[122]]]],[197,209],[197,[[107,[105]]]],0,[197,[[107,[142]]]],0,[[],78],[[],78],[197,87],[197,87],0,[[],79],[197,[[107,[210]]]],[197,[[204,[210]]]],0,[199,[[107,[149]]]],[199,[[107,[117]]]],[[]],[[]],[199,191],[199,[[107,[129]]]],[[],199],[199],[199],0,[199,[[107,[142]]]],[199,[[204,[146]]]],[199,[[107,[194]]]],[199,[[107,[[6,[4,4]]]]]],[199,[[107,[191]]]],0,[199,106],[162,199],[[]],[199,193],[199,114],[[]],[199,96],[199,96],[199,96],[199,[[107,[122]]]],[199,106],[199,[[107,[[204,[191]]]]]],[199,[[107,[132]]]],[[209,208,114,191,118,106,139,[107,[87]],96,96,96,[107,[106]],[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],199],[199,[[107,[205]]]],[199,137],[199,[[107,[191]]]],[199,[[107,[206]]]],[199,[[107,[105]]]],0,[199,106],[199,118],[199,[[107,[117]]]],[199,136],[199,208],[199,[[107,[4]]]],[199,139],[199,[[204,[122]]]],[199,209],[199,[[107,[105]]]],[199,[[107,[142]]]],[[],78],[[],78],[199,87],[199,87],[[],79],[199,[[107,[210]]]],[199,[[204,[210]]]],0,[202,[[107,[149]]]],[202,[[107,[117]]]],[[]],[[]],[202,191],[202,[[107,[129]]]],[[],202],[202],[202],0,[202,[[107,[142]]]],[202,[[204,[146]]]],[202,[[107,[194]]]],[202,[[107,[[6,[4,4]]]]]],[202,[[107,[191]]]],0,[202,106],[[]],[162,202],[202,193],[202,114],[[]],[202,96],[202,96],[202,96],0,[202,[[107,[122]]]],[202,106],[202,[[107,[[204,[191]]]]]],[202,[[107,[132]]]],[[209,208,114,191,118,106,105,105,142,139,[107,[87]],96,96,96,[107,[106]],[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],202],[202,[[107,[205]]]],[202,137],[202,[[107,[191]]]],[202,[[107,[206]]]],[202,[[107,[105]]]],0,[202,106],[202,118],[202,[[107,[117]]]],[202,136],[202,208],[202,[[107,[4]]]],[202,139],[202,[[204,[122]]]],[202,209],[202,[[107,[105]]]],0,[202,[[107,[142]]]],0,[[],78],[[],78],[202,87],[202,87],0,[[],79],[202,[[107,[210]]]],[202,[[204,[210]]]],0,[203,[[107,[149]]]],[203,[[107,[117]]]],[[]],[[]],[203,191],[203,[[107,[129]]]],[[],203],[203],[203],0,[203,[[107,[142]]]],[203,[[204,[146]]]],[203,[[107,[194]]]],[203,[[107,[[6,[4,4]]]]]],[203,[[107,[191]]]],0,[203,106],[162,203],[[]],[203,193],[203,114],[[]],[203,96],[203,96],[203,96],0,[203,[[107,[122]]]],[203,106],0,[203,[[107,[[204,[191]]]]]],[203,[[107,[132]]]],[[209,208,114,191,118,106,105,105,142,105,105,141,139,[107,[87]],96,96,96,[107,[106]],[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],203],[203,[[107,[205]]]],[203,137],[203,[[107,[191]]]],[203,[[107,[206]]]],[203,[[107,[105]]]],0,[203,106],[203,118],[203,[[107,[117]]]],[203,136],[203,208],[203,[[107,[4]]]],[203,139],[203,[[204,[122]]]],[203,209],0,0,[203,[[107,[105]]]],0,[203,[[107,[142]]]],0,[[],78],[[],78],[203,87],[203,87],0,[[],79],[203,[[107,[210]]]],[203,[[204,[210]]]],0,[196,[[107,[149]]]],[196,[[107,[117]]]],[[]],[[]],[196,191],[196,[[107,[129]]]],[[],196],[196],[196],0,[196,[[107,[142]]]],[196,[[204,[146]]]],[196,[[107,[194]]]],[196,[[107,[[6,[4,4]]]]]],[196,[[107,[191]]]],0,[196,106],[[]],[162,196],[196,193],[196,114],[[]],[196,96],[196,96],[196,96],0,[196,[[107,[122]]]],[196,106],[196,[[107,[[204,[191]]]]]],[196,[[107,[132]]]],[[209,208,114,191,118,106,105,142,105,141,139,[107,[87]],96,96,[107,[106]],[107,[142]],[107,[129]],[107,[205]],[107,[[204,[191]]]],[107,[191]],[107,[194]],[107,[[6,[4,4]]]],[107,[191]],[107,[4]],193,87],196],[196,[[107,[205]]]],[196,137],[196,[[107,[191]]]],[196,[[107,[206]]]],[196,[[107,[105]]]],[196,106],[196,118],[196,[[107,[117]]]],[196,136],[196,208],[196,[[107,[4]]]],[196,139],[196,[[204,[122]]]],[196,209],0,0,[196,[[107,[105]]]],0,[196,[[107,[142]]]],0,[[],78],[[],78],[196,87],[196,87],0,[[],79],[196,[[107,[210]]]],[196,[[204,[210]]]],0,0,0,0,0,0,0,[[]],[[]],0,[[230,81],82],0,[[]],[[]],0,[[],4],0,[[],78],[[],78],[[],79],0,[1,[[89,[88]]]],[[]],[[]],[5,5],[[]],0,[5,113],[113,100],[113,5],[[113,100,231,113,130],5],[5,111],[5,113],[5],[5,113],0,[94,[[78,[5]]]],[1,[[3,[95]]]],[[5,5],96],[[],96],[88,[[78,[97]]]],[88,[[3,[5]]]],[88,[[3,[5]]]],[[5,81],82],[99,5],[[]],[99,[[78,[5]]]],[[5,101]],[[]],[[5,1],102],0,[[],103],[[],[[104,[5]]]],0,[[99,100,231,99,130],5],0,[[5,109],78],[[]],[[],78],[[],78],[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],0,0,[[117,100],112],[[117,100],111],[112,117],[111,117],0,0,0,[[192,117]],[[192,192]],[[192,192]],[1,[[89,[88]]]],[192,117],[[]],[[]],[192,192],[[]],[[192,192],93],0,[94,[[78,[192]]]],[1,[[3,[95]]]],[[192,192],96],[[],96],[88,[[3,[192]]]],[88,[[78,[97]]]],[88,[[3,[192]]]],[[192,81],82],[[192,81],82],[[]],[[112,5],192],[[192,192],96],[[192,192],96],[[192,101]],[[]],[[192,1],102],[192,96],[[],103],[[],[[104,[192]]]],[[192,192],96],[[192,192],96],[[192,192]],[192,117],[[112,5],192],[[117,5],192],[[192,192]],[[192,117]],[[192,192],192],[[192,192]],[192],[[117,5],192],[[192,192],[[107,[93]]]],[[192,109],78],[[192,192]],[[192,117]],[[192,192]],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],0,0,0,0,[[105,117]],[[105,105]],[[105,105]],[1,[[89,[88]]]],[105,117],[[]],[[]],[105,105],[[]],[[105,105],93],[[],105],[105],[94,[[78,[105]]]],[1,[[3,[95]]]],[[105,105],96],[[],96],[88,[[3,[105]]]],[88,[[78,[97]]]],[88,[[3,[105]]]],[[105,81],82],[[105,81],82],[99,105],[[]],[[112,100],105],[99,[[78,[105]]]],[[105,105],96],[[105,105],96],[[105,101]],[[]],[[105,1],102],[105,96],[[],103],[[],[[104,[105]]]],[[105,105],96],[[105,105],96],[100,105],[100,105],[[105,105],105],[[105,117]],[[105,105]],[105],[[117,100],105],[[105,105],[[107,[93]]]],0,[[105,105]],[105,117],[[112,100],105],[[117,100],105],[[105,105]],0,[[105,109],78],[[105,117]],[[105,105]],[[105,105]],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],[100,105],0,0,0,[[106,106]],[[106,[232,[111]]]],[1,[[89,[88]]]],[106,117],[[]],[[]],[106,106],[[]],[[106,106],93],[[],106],[106],[94,[[78,[106]]]],[1,[[3,[95]]]],[[106,106],96],[[],96],[88,[[3,[106]]]],[88,[[78,[97]]]],[88,[[3,[106]]]],[[106,81],82],[[106,81],82],[112,106],[99,106],[[]],[[111,100],106],[99,[[78,[106]]]],[[106,106],96],[[106,106],96],[[106,101]],[[]],[[106,1],102],[106,96],[106,96],[[],103],[[],[[104,[106]]]],[[106,106],96],[[106,106],96],[[106,106]],[[106,[232,[111]]]],[[117,100],106],[[106,106],[[107,[93]]]],0,[[106,106]],[[106,111]],[106,117],[[111,100],106],[[117,100],106],[[106,106]],[[106,111]],0,[[106,109],78],[[106,106]],[[106,[232,[111]]]],[[]],[[],4],[[],78],[[],78],[[],79],[1,110],[1,[[78,[[89,[88]],97]]]],[100,106]],"c":[],"p":[[3,"Python"],[3,"PyModule"],[6,"PyResult"],[3,"String"],[3,"Currency"],[3,"HashMap"],[3,"Mutex"],[3,"AUD"],[3,"BRL"],[3,"CAD"],[3,"CHF"],[3,"CNY"],[3,"CNH"],[3,"CZK"],[3,"DKK"],[3,"EUR"],[3,"GBP"],[3,"HKD"],[3,"HUF"],[3,"ILS"],[3,"INR"],[3,"JPY"],[3,"KRW"],[3,"MXN"],[3,"NOK"],[3,"NZD"],[3,"PLN"],[3,"RUB"],[3,"SAR"],[3,"SEK"],[3,"SGD"],[3,"THB"],[3,"TRY"],[3,"USD"],[3,"XAG"],[3,"XAU"],[3,"ZAR"],[3,"ONEINCH"],[3,"AAVE"],[3,"ACA"],[3,"ADA"],[3,"AVAX"],[3,"BCH"],[3,"BTC"],[3,"BTTC"],[3,"BNB"],[3,"BRZ"],[3,"BSV"],[3,"BUSD"],[3,"DASH"],[3,"DOGE"],[3,"DOT"],[3,"EOS"],[3,"ETH"],[3,"ETHW"],[3,"JOE"],[3,"LINK"],[3,"LTC"],[3,"LUNA"],[3,"NBT"],[3,"SOL"],[3,"TRX"],[3,"TRYB"],[3,"TUSD"],[3,"VTC"],[3,"WSB"],[3,"XBT"],[3,"XEC"],[3,"XLM"],[3,"XMR"],[3,"XRP"],[3,"XTZ"],[3,"USDC"],[3,"USDP"],[3,"USDT"],[3,"ZEC"],[3,"CURRENCY_MAP"],[4,"Result"],[3,"TypeId"],[4,"Data"],[3,"Formatter"],[6,"Result"],[3,"QuoteTick"],[3,"Bar"],[3,"TradeTick"],[3,"OrderBookDelta"],[6,"UnixNanos"],[3,"PyAny"],[3,"Py"],[3,"PyDict"],[3,"BarSpecification"],[3,"BarType"],[4,"Ordering"],[8,"Deserializer"],[3,"CStr"],[15,"bool"],[3,"PyErr"],[3,"BarTypeParseError"],[15,"str"],[15,"u8"],[8,"Hasher"],[6,"PyObject"],[3,"PyClassItemsIter"],[3,"LazyTypeObject"],[3,"Price"],[3,"Quantity"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[3,"PyTypeObject"],[15,"u64"],[15,"i64"],[6,"c_char"],[3,"InstrumentId"],[4,"BookAction"],[3,"BookOrder"],[15,"f64"],[4,"OrderSide"],[3,"BookPrice"],[4,"PriceType"],[4,"AggressorSide"],[3,"TradeId"],[4,"AccountType"],[4,"AggregationSource"],[4,"AssetClass"],[4,"AssetType"],[4,"BarAggregation"],[4,"BookType"],[4,"ContingencyType"],[4,"CurrencyType"],[4,"InstrumentCloseType"],[4,"LiquiditySide"],[4,"MarketStatus"],[4,"OmsType"],[4,"OptionKind"],[4,"OrderStatus"],[4,"OrderType"],[4,"PositionSide"],[4,"TimeInForce"],[4,"TradingState"],[4,"TrailingOffsetType"],[4,"TriggerType"],[3,"Error"],[15,"usize"],[8,"Sized"],[4,"OrderEvent"],[4,"OrderError"],[3,"OrderSubmittedBuilder"],[3,"AccountId"],[3,"OrderAcceptedBuilder"],[3,"OrderRejectedBuilder"],[3,"OrderCanceledBuilder"],[3,"OrderExpiredBuilder"],[3,"OrderTriggeredBuilder"],[3,"OrderPendingUpdateBuilder"],[3,"OrderPendingCancelBuilder"],[3,"OrderModifyRejectedBuilder"],[3,"OrderCancelRejectedBuilder"],[3,"OrderUpdatedBuilder"],[3,"OrderFilledBuilder"],[3,"OrderInitializedBuilder"],[3,"OrderInitialized"],[4,"OrderInitializedBuilderError"],[3,"OrderDeniedBuilder"],[3,"OrderDenied"],[4,"OrderDeniedBuilderError"],[3,"OrderSubmitted"],[4,"OrderSubmittedBuilderError"],[3,"OrderAccepted"],[4,"OrderAcceptedBuilderError"],[3,"OrderRejected"],[4,"OrderRejectedBuilderError"],[3,"OrderCanceled"],[4,"OrderCanceledBuilderError"],[3,"OrderExpired"],[4,"OrderExpiredBuilderError"],[3,"OrderTriggered"],[4,"OrderTriggeredBuilderError"],[3,"OrderPendingUpdate"],[4,"OrderPendingUpdateBuilderError"],[3,"OrderPendingCancel"],[4,"OrderPendingCancelBuilderError"],[3,"OrderModifyRejected"],[4,"OrderModifyRejectedBuilderError"],[3,"OrderCancelRejected"],[4,"OrderCancelRejectedBuilderError"],[3,"OrderUpdated"],[4,"OrderUpdatedBuilderError"],[3,"OrderFilled"],[4,"OrderFilledBuilderError"],[3,"ClientOrderId"],[3,"Money"],[3,"UUID4"],[3,"ExecAlgorithmId"],[3,"UninitializedFieldError"],[3,"TrailingStopMarketOrder"],[3,"MarketIfTouchedOrder"],[3,"LimitIfTouchedOrder"],[3,"MarketToLimitOrder"],[3,"LimitOrder"],[3,"MarketOrder"],[3,"StopLimitOrder"],[3,"TrailingStopLimitOrder"],[3,"Vec"],[3,"OrderListId"],[3,"PositionId"],[3,"Box"],[3,"StrategyId"],[3,"TraderId"],[3,"VenueOrderId"],[3,"PositionOpened"],[3,"PositionChanged"],[3,"PositionState"],[3,"PositionClosed"],[3,"ClientId"],[3,"ComponentId"],[3,"InstrumentIdParseError"],[3,"Symbol"],[3,"Venue"],[3,"Decimal"],[3,"OrderBook"],[3,"Level"],[4,"BookIntegrityError"],[4,"InvalidBookOperation"],[3,"OrderBook_API"],[3,"CVec"],[3,"Ladder"],[3,"Level_API"],[3,"OrderCore"],[3,"AccountBalance"],[15,"u16"],[8,"Into"],[8,"FromU8"],[4,"PositionEvent"],[8,"Instrument"],[8,"Order"]]},\
"nautilus_network":{"doc":"","t":"AFAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLL","n":["http","network","socket","websocket","HttpClient","HttpResponse","arguments","arguments","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","delete","doc","doc","extract","extract","extract","extract","extract","extract","fmt","from","from","get","into","into","into_py","into_py","items_iter","items_iter","lazy_type_object","lazy_type_object","new","patch","post","request","send_request","status","to_owned","to_owned","to_response","try_from","try_from","try_into","try_into","type_id","type_id","type_object_raw","type_object_raw","vzip","vzip","wrap","wrap","SocketClient","arguments","borrow","borrow_mut","connect_url","doc","drop","extract","extract","from","into","into_py","is_alive","items_iter","lazy_type_object","send_bytes","shutdown","spawn_heartbeat_task","spawn_read_task","tls_connect_with_server","try_from","try_into","type_id","type_object_raw","vzip","wrap","WebSocketClient","arguments","borrow","borrow_mut","connect_client","disconnect_client","doc","extract","extract","from","into","into_py","is_disconnected","items_iter","lazy_type_object","send_bytes_client","send_close_message","try_from","try_into","type_id","type_object_raw","vzip","wrap"],"q":[[0,"nautilus_network"],[4,"nautilus_network::http"],[59,"nautilus_network::socket"],[85,"nautilus_network::websocket"]],"d":["","Loaded as nautilus_pyo3.network","","","Provides a high-performance HttpClient for HTTP requests.","HttpResponse contains relevant data from a HTTP request.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a TcpStream with the server","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Checks if the client is still connected.","","","","Shutdown read task and the connection.","Optionally spawn a hearbeat task to periodically ping the …","","","","","","","","","","","","","Creates a websocket client.","Set disconnect mode to true.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,6,7,6,7,6,7,6,7,6,7,6,6,6,7,6,6,6,7,7,7,7,6,7,6,6,7,6,7,6,7,6,7,6,6,6,6,6,7,6,7,6,6,7,6,7,6,7,6,7,6,7,6,7,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44],"f":[0,[[1,2],3],0,0,0,0,[1,[[5,[4]]]],[1,[[5,[4]]]],[[]],[[]],[[]],[[]],[6,6],[7,7],[[]],[[]],[[],6],[[[8,[6]],9,[10,[9,9]],[12,[11]],1],[[3,[4]]]],[1,[[3,[13]]]],[1,[[3,[13]]]],[4,[[15,[14]]]],[4,[[3,[6]]]],[4,[[3,[6]]]],[4,[[3,[7]]]],[4,[[3,[7]]]],[4,[[15,[14]]]],[[7,16],17],[[]],[[]],[[[8,[6]],9,[10,[9,9]],[12,[11]],1],[[3,[4]]]],[[]],[[]],[[6,1],18],[[7,1],18],[[],19],[[],19],[[],[[20,[6]]]],[[],[[20,[7]]]],[[[21,[9]]],6],[[[8,[6]],9,[10,[9,9]],[12,[11]],1],[[3,[4]]]],[[[8,[6]],9,[10,[9,9]],[12,[11]],1],[[3,[4]]]],[[[8,[6]],9,9,[10,[9,9]],[12,[11]],1],[[3,[4]]]],[[6,22,9,[10,[9,9]],[12,[[21,[23]]]]],[[15,[7,[25,[24]]]]]],0,[[]],[[]],[[6,[27,[26]]],[[15,[7,[25,[24]]]]]],[[],15],[[],15],[[],15],[[],15],[[],28],[[],28],[1,29],[1,29],[[]],[[]],[1,[[15,[[5,[4]],14]]]],[1,[[15,[[5,[4]],14]]]],0,[1,[[5,[4]]]],[[]],[[]],[[30,18,31,[21,[23]],12],[[33,[32]]]],[1,[[3,[13]]]],[32],[4,[[3,[32]]]],[4,[[3,[32]]]],[[]],[[]],[[32,1],18],[32,34],[[],19],[[],[[20,[32]]]],[[32,[35,[23]]]],[32],[[12,[40,[[39,[[38,[[37,[36]]]]]]]],[21,[23]]],[[12,[41]]]],[[[42,[[37,[36]]]],18,[21,[23]]],41],[[30,31]],[[],15],[[],15],[[],28],[1,29],[[]],[1,[[15,[[5,[4]],14]]]],0,[1,[[5,[4]]]],[[]],[[]],[[30,18,[12,[43]],[12,[18]],[12,[18]],[12,[18]]],[[15,[44,45]]]],[44],[1,[[3,[13]]]],[4,[[3,[44]]]],[4,[[3,[44]]]],[[]],[[]],[[44,1],18],[44,34],[[],19],[[],[[20,[44]]]],[[44,[21,[23]]],[[15,[45]]]],[44],[[],15],[[],15],[[],28],[1,29],[[]],[1,[[15,[[5,[4]],14]]]]],"c":[],"p":[[3,"Python"],[3,"PyModule"],[6,"PyResult"],[3,"PyAny"],[3,"Py"],[3,"HttpClient"],[3,"HttpResponse"],[3,"PyRef"],[3,"String"],[3,"HashMap"],[3,"PyBytes"],[4,"Option"],[3,"CStr"],[3,"PyErr"],[4,"Result"],[3,"Formatter"],[6,"Result"],[6,"PyObject"],[3,"PyClassItemsIter"],[3,"LazyTypeObject"],[3,"Vec"],[3,"Method"],[15,"u8"],[8,"Error"],[3,"Box"],[3,"Body"],[3,"Response"],[3,"TypeId"],[3,"PyTypeObject"],[15,"str"],[4,"Mode"],[3,"SocketClient"],[6,"Result"],[15,"bool"],[15,"slice"],[3,"TcpStream"],[4,"MaybeTlsStream"],[3,"WriteHalf"],[3,"Mutex"],[3,"Arc"],[3,"JoinHandle"],[3,"ReadHalf"],[15,"u64"],[3,"WebSocketClient"],[4,"Error"]]},\
"nautilus_persistence":{"doc":"","t":"AAFANINEIIINENNNNILLALLLLLLKKALKLLLLLLLLLLLKLLLLLLALLLALLLLLLLLLLKAADDDDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLAAAADLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLL","n":["arrow","backend","persistence","wranglers","ArrowError","ArrowSchemaProvider","Bar","DataStreamingError","DecodeDataFromRecordBatch","DecodeFromRecordBatch","EncodeToRecordBatch","IoError","NautilusDataType","OrderBookDelta","PythonError","QuoteTick","TradeTick","WriteStream","arguments","as_error_source","bar","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode_batch","decode_data_batch","delta","doc","encode_batch","extract","extract","extract","fmt","fmt","fmt","from","from","from","from","from","get_schema","into","into","into_py","items_iter","lazy_type_object","provide","quote","source","to_owned","to_string","trade","try_from","try_from","try_into","try_into","type_id","type_id","type_object_raw","vzip","vzip","wrap","write","session","transformer","DataBackendSession","DataQueryResult","QueryResult","TsInitComparator","add_file","add_file_default_query","add_file_with_custom_query","add_file_with_query","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","default","doc","doc","drop","extract","extract","extract","extract","fmt","from","from","from","from","get_query_result","into","into","into","into","into_iter","into_py","into_py","items_iter","items_iter","lazy_type_object","lazy_type_object","new","new","new_session","next","to_query_result","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","vzip","vzip","vzip","vzip","wrap","wrap","write_data","DataTransformer","arguments","borrow","borrow_mut","doc","extract","extract","from","into","into_py","items_iter","lazy_type_object","pyo3_bars_to_batches_bytes","pyo3_order_book_deltas_to_batches_bytes","pyo3_quote_ticks_to_batches_bytes","pyo3_trade_ticks_to_batches_bytes","pyobjects_to_batches_bytes","try_from","try_into","type_id","type_object_raw","vzip","wrap","bar","delta","quote","trade","BarDataWrangler","arguments","borrow","borrow_mut","doc","extract","extract","from","into","into_py","items_iter","lazy_type_object","try_from","try_into","type_id","type_object_raw","vzip","wrap","OrderBookDeltaDataWrangler","arguments","borrow","borrow_mut","doc","extract","extract","from","into","into_py","items_iter","lazy_type_object","try_from","try_into","type_id","type_object_raw","vzip","wrap","QuoteTickDataWrangler","arguments","borrow","borrow_mut","doc","extract","extract","from","into","into_py","items_iter","lazy_type_object","try_from","try_into","type_id","type_object_raw","vzip","wrap","TradeTickDataWrangler","arguments","borrow","borrow_mut","doc","extract","extract","from","into","into_py","items_iter","lazy_type_object","try_from","try_into","type_id","type_object_raw","vzip","wrap"],"q":[[0,"nautilus_persistence"],[4,"nautilus_persistence::arrow"],[66,"nautilus_persistence::backend"],[68,"nautilus_persistence::backend::session"],[136,"nautilus_persistence::backend::transformer"],[159,"nautilus_persistence::wranglers"],[163,"nautilus_persistence::wranglers::bar"],[181,"nautilus_persistence::wranglers::delta"],[199,"nautilus_persistence::wranglers::quote"],[217,"nautilus_persistence::wranglers::trade"]],"d":["","","Loaded as nautilus_pyo3.persistence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Provides a DataFusion session and registers DataFusion …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Return Python <code>bytes</code> from the given list of ‘legacy’ …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,19,0,7,0,0,0,0,19,0,7,19,7,7,0,7,19,0,7,19,7,19,7,7,50,51,0,7,38,7,7,7,7,19,19,7,19,19,19,19,52,7,19,7,7,7,19,0,19,7,19,0,7,19,7,19,7,19,7,7,19,7,39,0,0,0,0,0,0,30,30,30,30,36,34,30,35,36,34,30,35,30,34,30,35,35,30,30,35,35,34,36,34,30,35,30,36,34,30,35,36,30,35,30,35,30,35,30,35,30,36,30,36,34,30,35,36,34,30,35,36,34,30,35,30,35,36,34,30,35,30,35,30,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49],"f":[0,0,[[1,2],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[5,[4]]]],[[],6],0,[[]],[[]],[[]],[[]],[7,7],[[]],[[[9,[8,8]],10],11],[[[9,[8,8]],10],[[11,[12]]]],0,[1,[[3,[13]]]],[[[9,[8,8]],14],10],[4,[[16,[15]]]],[4,[[3,[7]]]],[4,[[3,[7]]]],[[7,17],18],[[19,17],18],[[19,17],18],[[]],[[]],[15,19],[20,19],[21,19],[[[9,[8,8]]],22],[[]],[[]],[[7,1],23],[[],24],[[],[[25,[7]]]],[26],0,[19,[[27,[6]]]],[[]],[[],8],0,[[],16],[[],16],[[],16],[[],16],[[],28],[[],28],[1,29],[[]],[[]],[1,[[16,[[5,[4]],15]]]],[10,[[16,[19]]]],0,0,0,0,0,0,[[[31,[30]],32,32,7]],[[30,32,32],33],[[30,32,32,32],33],[[[31,[30]],32,32,32,7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],34],[1,[[3,[13]]]],[1,[[3,[13]]]],[35],[4,[[3,[30]]]],[4,[[3,[30]]]],[4,[[3,[35]]]],[4,[[3,[35]]]],[[34,17],18],[[]],[[]],[[]],[[]],[30,[[36,[12]]]],[[]],[[]],[[]],[[]],[[]],[[30,1],23],[[35,1],23],[[],24],[[],24],[[],[[25,[30]]]],[[],[[25,[35]]]],[37,30],[[[36,[12]]],35],[37,30],[36,27],[[[31,[30]]],35],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],28],[[],28],[[],28],[[],28],[1,29],[1,29],[[]],[[]],[[]],[[]],[1,[[16,[[5,[4]],15]]]],[1,[[16,[[5,[4]],15]]]],[[[14,[38]],[9,[8,8]],39],[[33,[19]]]],0,[1,[[5,[4]]]],[[]],[[]],[1,[[3,[13]]]],[4,[[3,[40]]]],[4,[[3,[40]]]],[[]],[[]],[[40,1],23],[[],24],[[],[[25,[40]]]],[[1,[11,[41]]],[[3,[[5,[42]]]]]],[[1,[11,[43]]],[[3,[[5,[42]]]]]],[[1,[11,[44]]],[[3,[[5,[42]]]]]],[[1,[11,[45]]],[[3,[[5,[42]]]]]],[[1,[11,[23]]],[[3,[[5,[42]]]]]],[[],16],[[],16],[[],28],[1,29],[[]],[1,[[16,[[5,[4]],15]]]],0,0,0,0,0,[1,[[5,[4]]]],[[]],[[]],[1,[[3,[13]]]],[4,[[3,[46]]]],[4,[[3,[46]]]],[[]],[[]],[[46,1],23],[[],24],[[],[[25,[46]]]],[[],16],[[],16],[[],28],[1,29],[[]],[1,[[16,[[5,[4]],15]]]],0,[1,[[5,[4]]]],[[]],[[]],[1,[[3,[13]]]],[4,[[3,[47]]]],[4,[[3,[47]]]],[[]],[[]],[[47,1],23],[[],24],[[],[[25,[47]]]],[[],16],[[],16],[[],28],[1,29],[[]],[1,[[16,[[5,[4]],15]]]],0,[1,[[5,[4]]]],[[]],[[]],[1,[[3,[13]]]],[4,[[3,[48]]]],[4,[[3,[48]]]],[[]],[[]],[[48,1],23],[[],24],[[],[[25,[48]]]],[[],16],[[],16],[[],28],[1,29],[[]],[1,[[16,[[5,[4]],15]]]],0,[1,[[5,[4]]]],[[]],[[]],[1,[[3,[13]]]],[4,[[3,[49]]]],[4,[[3,[49]]]],[[]],[[]],[[49,1],23],[[],24],[[],[[25,[49]]]],[[],16],[[],16],[[],28],[1,29],[[]],[1,[[16,[[5,[4]],15]]]]],"c":[],"p":[[3,"Python"],[3,"PyModule"],[6,"PyResult"],[3,"PyAny"],[3,"Py"],[8,"Error"],[4,"NautilusDataType"],[3,"String"],[3,"HashMap"],[3,"RecordBatch"],[3,"Vec"],[4,"Data"],[3,"CStr"],[15,"slice"],[3,"PyErr"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"DataStreamingError"],[3,"Error"],[4,"ArrowError"],[6,"SchemaRef"],[6,"PyObject"],[3,"PyClassItemsIter"],[3,"LazyTypeObject"],[3,"Demand"],[4,"Option"],[3,"TypeId"],[3,"PyTypeObject"],[3,"DataBackendSession"],[3,"PyRefMut"],[15,"str"],[6,"Result"],[3,"TsInitComparator"],[3,"DataQueryResult"],[3,"QueryResult"],[15,"usize"],[8,"EncodeToRecordBatch"],[8,"WriteStream"],[3,"DataTransformer"],[3,"Bar"],[3,"PyBytes"],[3,"OrderBookDelta"],[3,"QuoteTick"],[3,"TradeTick"],[3,"BarDataWrangler"],[3,"OrderBookDeltaDataWrangler"],[3,"QuoteTickDataWrangler"],[3,"TradeTickDataWrangler"],[8,"DecodeFromRecordBatch"],[8,"DecodeDataFromRecordBatch"],[8,"ArrowSchemaProvider"]]},\
"nautilus_pyo3":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"tokio_tungstenite":{"doc":"Async <code>WebSocket</code> usage.","t":"CENNDFFFFLLFCCFLFFFLLLLLLLLLLLLLLALLLCLLEENNNNLLLLFFLLALLLLLLLLLFLLLLLLLLLAAFDMLLLMLLMMLLLMMMLLLLLF","n":["Connector","MaybeTlsStream","Plain","Rustls","WebSocketStream","accept_async","accept_async_with_config","accept_hdr_async","accept_hdr_async_with_config","borrow","borrow_mut","client_async","client_async_tls","client_async_tls_with_config","client_async_with_config","close","connect_async","connect_async_tls_with_config","connect_async_with_config","fmt","from","from_partially_read","from_raw_socket","get_config","get_mut","get_ref","into","is_terminated","poll_close","poll_flush","poll_next","poll_ready","start_send","tls","try_from","try_into","try_poll_next","tungstenite","type_id","vzip","Connector","MaybeTlsStream","Plain","Plain","Rustls","Rustls","borrow","borrow","borrow_mut","borrow_mut","client_async_tls","client_async_tls_with_config","clone","clone_into","encryption","fmt","from","from","into","into","poll_flush","poll_read","poll_shutdown","poll_write","tcp_tls","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","plain","rustls","wrap_stream","ClientConfig","alpn_protocols","borrow","borrow_mut","builder","client_auth_cert_resolver","clone","clone_into","enable_early_data","enable_sni","fmt","from","into","key_log","max_fragment_size","resumption","to_owned","try_from","try_into","type_id","vzip","wrap_stream"],"q":[[0,"tokio_tungstenite"],[40,"tokio_tungstenite::tls"],[74,"tokio_tungstenite::tls::encryption"],[76,"tokio_tungstenite::tls::encryption::plain"],[77,"tokio_tungstenite::tls::encryption::rustls"]],"d":["","A stream that might be protected with TLS.","Unencrypted socket stream.","Encrypted socket stream using <code>rustls</code>.","A wrapper around an underlying raw stream which implements …","Accepts a new <code>WebSocket</code> connection with the provided …","The same as <code>accept_async()</code> but the one can specify a …","Accepts a new <code>WebSocket</code> connection with the provided …","The same as <code>accept_hdr_async()</code> but the one can specify a …","","","Creates a <code>WebSocket</code> handshake from a request and a stream. …","","","The same as <code>client_async()</code> but the one can specify a …","Close the underlying web socket","Connect to a given URL.","The same as <code>connect_async()</code> but the one can specify a …","The same as <code>connect_async()</code> but the one can specify a …","","Returns the argument unchanged.","Convert a raw socket into a <code>WebSocketStream</code> without …","Convert a raw socket into a <code>WebSocketStream</code> without …","Returns a reference to the configuration of the …","Returns a mutable reference to the inner stream.","Returns a shared reference to the inner stream.","Calls <code>U::from(self)</code>.","","","","","","","Connection helper.","","","","","","","A connector that can be used when establishing …","A stream that might be protected with TLS.","Unencrypted socket stream.","Plain (non-TLS) connector.","Encrypted socket stream using <code>rustls</code>.","<code>rustls</code> TLS connector.","","","","","Creates a <code>WebSocket</code> handshake from a request and a stream, …","The same as <code>client_async_tls()</code> but the one can specify a …","","","Encrypt a stream usin Tls","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Given a domain and mode","","","","","","","","","","Does not encrypt stream","Use rust-tls implementation to encrypt","Keeps the stream unwrapped","Common configuration for (typically) all connections made …","Which ALPN protocols we include in our client hello. If …","","","Create a builder to build up the client configuration.","How to decide what client auth certificate/keys to use.","","","Whether to send data on the first flight (“early data”…","Whether to send the Server Name Indication (SNI) extension …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","How to output key material for debugging.  The default …","The maximum size of TLS message we’ll emit.  If None, we …","How and when the client can resume a previous session.","","","","","","Wraps the stream with rust-tls encryption"],"i":[0,0,26,26,0,0,0,0,0,4,4,0,0,0,0,4,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,0,4,4,0,0,26,13,26,13,26,13,26,13,0,0,13,13,0,26,26,13,26,13,26,26,26,26,0,13,26,13,26,13,26,13,26,13,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0],"f":[0,0,0,0,0,[[[0,[1,2,3]]],[[6,[[4,[[0,[1,2,3]]]],5]]]],[[[0,[1,2,3]],[8,[7]]],[[6,[[4,[[0,[1,2,3]]]],5]]]],[[[0,[1,2,3]],[0,[9,3]]],[[6,[[4,[[0,[1,2,3]]]],5]]]],[[[0,[1,2,3]],[0,[9,3]],[8,[7]]],[[6,[[4,[[0,[1,2,3]]]],5]]]],[[]],[[]],[[[0,[10,3]],[0,[1,2,3]]],[[6,[5]]]],0,0,[[[0,[10,3]],[0,[1,2,3]],[8,[7]]],[[6,[5]]]],[[[4,[[0,[1,2,3]]]],[8,[11]]],[[6,[5]]]],[[[0,[10,3]]],[[6,[5]]]],[[[0,[10,3]],[8,[7]],12,[8,[13]]],[[6,[5]]]],[[[0,[10,3]],[8,[7]],12],[[6,[5]]]],[[[4,[14]],15],16],[[]],[[[0,[1,2,3]],[18,[17]],19,[8,[7]]],[[4,[[0,[1,2,3]]]]]],[[[0,[1,2,3]],19,[8,[7]]],[[4,[[0,[1,2,3]]]]]],[4,7],[[[4,[[0,[1,2,3]]]]],[[0,[1,2,3]]]],[[[4,[[0,[1,2,3]]]]],[[0,[1,2,3]]]],[[]],[[[4,[[0,[1,2,3]]]]],12],[[[20,[[4,[[0,[1,2,3]]]]]],21],[[22,[6]]]],[[[20,[[4,[[0,[1,2,3]]]]]],21],[[22,[6]]]],[[[20,[[4,[[0,[1,2,3]]]]]],21],[[22,[8]]]],[[[20,[[4,[[0,[1,2,3]]]]]],21],[[22,[6]]]],[[[20,[[4,[[0,[1,2,3]]]]]],23],6],0,[[],6],[[],6],[[20,21],[[22,[[8,[6]]]]]],0,[[],24],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[0,[10,3]],[0,[1,2,25,3]]],[[6,[5]]]],[[[0,[10,3]],[0,[1,2,25,3]],[8,[7]],[8,[13]]],[[6,[5]]]],[13,13],[[]],0,[[[26,[14]],15],16],[[]],[[]],[[]],[[]],[[[20,[[26,[[0,[1,2,3]]]]]],21],[[22,[[6,[27]]]]]],[[[20,[[26,[[0,[1,2,3]]]]]],21,28],[[22,[29]]]],[[[20,[[26,[[0,[1,2,3]]]]]],21],[[22,[[6,[27]]]]]],[[[20,[[26,[[0,[1,2,3]]]]]],21,[30,[17]]],[[22,[[6,[31,27]]]]]],[[32,33,[0,[1,2,25,3]],[8,[13]]],[[6,[[26,[[0,[1,2,25,3]]]],5]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],24],[[],24],[[]],[[]],0,0,[[[0,[1,2,25,3]],33],[[6,[[26,[[0,[1,2,25,3]]]],5]]]],0,0,[[]],[[]],[[],[[36,[34,35]]]],0,[34,34],[[]],0,0,[[34,15],[[6,[37]]]],[[]],[[]],0,0,0,[[]],[[],6],[[],6],[[],24],[[]],[[[0,[1,2,25,3]],38,33,[8,[[39,[34]]]]],[[6,[[26,[[0,[1,2,25,3]]]],5]]]]],"c":[],"p":[[8,"AsyncRead"],[8,"AsyncWrite"],[8,"Unpin"],[3,"WebSocketStream"],[4,"Error"],[4,"Result"],[3,"WebSocketConfig"],[4,"Option"],[8,"Callback"],[8,"IntoClientRequest"],[3,"CloseFrame"],[15,"bool"],[4,"Connector"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"u8"],[3,"Vec"],[4,"Role"],[3,"Pin"],[3,"Context"],[4,"Poll"],[4,"Message"],[3,"TypeId"],[8,"Send"],[4,"MaybeTlsStream"],[3,"Error"],[3,"ReadBuf"],[6,"Result"],[15,"slice"],[15,"usize"],[6,"Request"],[4,"Mode"],[3,"ClientConfig"],[3,"WantsCipherSuites"],[3,"ConfigBuilder"],[3,"Error"],[3,"String"],[3,"Arc"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
