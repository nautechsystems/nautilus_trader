/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Answer {
    #[serde(rename = "answerDetail", skip_serializing_if = "Option::is_none")]
    pub answer_detail: Option<Vec<models::AnswerDetail>>,
    #[serde(rename = "detail", skip_serializing_if = "Option::is_none")]
    pub detail: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "questionId", skip_serializing_if = "Option::is_none")]
    pub question_id: Option<i32>,
}

impl Answer {
    pub fn new() -> Answer {
        Answer {
            answer_detail: None,
            detail: None,
            id: None,
            question_id: None,
        }
    }
}
