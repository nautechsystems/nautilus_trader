/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PredefinedDestinationInstruction {
    #[serde(rename = "clientInstructionId")]
    pub client_instruction_id: f64,
    #[serde(rename = "bankInstructionName")]
    pub bank_instruction_name: String,
    #[serde(rename = "bankInstructionMethod")]
    pub bank_instruction_method: BankInstructionMethod,
    #[serde(rename = "accountId")]
    pub account_id: String,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "financialInstitution")]
    pub financial_institution: Box<models::PredefinedDestinationInstructionFinancialInstitution>,
}

impl PredefinedDestinationInstruction {
    pub fn new(
        client_instruction_id: f64,
        bank_instruction_name: String,
        bank_instruction_method: BankInstructionMethod,
        account_id: String,
        currency: String,
        financial_institution: models::PredefinedDestinationInstructionFinancialInstitution,
    ) -> PredefinedDestinationInstruction {
        PredefinedDestinationInstruction {
            client_instruction_id,
            bank_instruction_name,
            bank_instruction_method,
            account_id,
            currency,
            financial_institution: Box::new(financial_institution),
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BankInstructionMethod {
    #[serde(rename = "LVP")]
    Lvp,
    #[serde(rename = "SEPA")]
    Sepa,
    #[serde(rename = "WIRE")]
    Wire,
    #[serde(rename = "ACH")]
    Ach,
    #[serde(rename = "CPA")]
    Cpa,
}

impl Default for BankInstructionMethod {
    fn default() -> BankInstructionMethod {
        Self::Lvp
    }
}
