/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EddaInstruction {
    #[serde(rename = "clientInstructionId")]
    pub client_instruction_id: f64,
    #[serde(rename = "bankInstructionName")]
    pub bank_instruction_name: String,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "accountId")]
    pub account_id: String,
    #[serde(rename = "bankBranchCode")]
    pub bank_branch_code: String,
    #[serde(rename = "bankAccountNumber")]
    pub bank_account_number: String,
    #[serde(rename = "bankClearingCode")]
    pub bank_clearing_code: String,
    #[serde(rename = "debtorIdentificationDocumentType")]
    pub debtor_identification_document_type: DebtorIdentificationDocumentType,
}

impl EddaInstruction {
    pub fn new(
        client_instruction_id: f64,
        bank_instruction_name: String,
        currency: String,
        account_id: String,
        bank_branch_code: String,
        bank_account_number: String,
        bank_clearing_code: String,
        debtor_identification_document_type: DebtorIdentificationDocumentType,
    ) -> EddaInstruction {
        EddaInstruction {
            client_instruction_id,
            bank_instruction_name,
            currency,
            account_id,
            bank_branch_code,
            bank_account_number,
            bank_clearing_code,
            debtor_identification_document_type,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DebtorIdentificationDocumentType {
    #[serde(rename = "hkId")]
    HkId,
    #[serde(rename = "passport")]
    Passport,
    #[serde(rename = "chinaId")]
    ChinaId,
    #[serde(rename = "hkMacaoEntryPermit")]
    HkMacaoEntryPermit,
}

impl Default for DebtorIdentificationDocumentType {
    fn default() -> DebtorIdentificationDocumentType {
        Self::HkId
    }
}
