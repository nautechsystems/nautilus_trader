/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StmtRequest {
    /// account id
    #[serde(rename = "accountId")]
    pub account_id: String,
    /// array of account id's
    #[serde(rename = "accountIds", skip_serializing_if = "Option::is_none")]
    pub account_ids: Option<Vec<String>>,
    /// from date
    #[serde(rename = "startDate")]
    pub start_date: String,
    /// to date
    #[serde(rename = "endDate")]
    pub end_date: String,
    /// possible values are consolidate, concatenate, or customConsolidate
    #[serde(rename = "multiAccountFormat", skip_serializing_if = "Option::is_none")]
    pub multi_account_format: Option<String>,
    /// crypto consolidate flag, If request contains any accounts with crypto segment, will turn request into Crypto Consolidated
    #[serde(rename = "cryptoConsolIfAvailable", skip_serializing_if = "Option::is_none")]
    pub crypto_consol_if_available: Option<bool>,
    /// output format
    #[serde(rename = "mimeType", skip_serializing_if = "Option::is_none")]
    pub mime_type: Option<String>,
    /// two character ISO language code
    #[serde(rename = "language", skip_serializing_if = "Option::is_none")]
    pub language: Option<String>,
    /// to gzip the whole response pass true
    #[serde(rename = "gzip", skip_serializing_if = "Option::is_none")]
    pub gzip: Option<bool>,
}

impl StmtRequest {
    pub fn new(account_id: String, start_date: String, end_date: String) -> StmtRequest {
        StmtRequest {
            account_id,
            account_ids: None,
            start_date,
            end_date,
            multi_account_format: None,
            crypto_consol_if_available: None,
            mime_type: None,
            language: None,
            gzip: None,
        }
    }
}
