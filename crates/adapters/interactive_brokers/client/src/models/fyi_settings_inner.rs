/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FyiSettingsInner {
    /// Returns ony if the subscription can be disabled/enabled manually. See /fyi/settings/{typecode} for how to enable/disable.
    #[serde(rename = "A", skip_serializing_if = "Option::is_none")]
    pub a: Option<i32>,
    /// Fyi code for enabling or disabling the notification.
    #[serde(rename = "FC", skip_serializing_if = "Option::is_none")]
    pub fc: Option<String>,
    /// Disclaimer if the notification was read.
    #[serde(rename = "H", skip_serializing_if = "Option::is_none")]
    pub h: Option<i32>,
    /// Returns a detailed description of the topic.
    #[serde(rename = "FD", skip_serializing_if = "Option::is_none")]
    pub fd: Option<String>,
    /// Returns a human readable title for the notification.
    #[serde(rename = "FN", skip_serializing_if = "Option::is_none")]
    pub r#fn: Option<String>,
}

impl FyiSettingsInner {
    pub fn new() -> FyiSettingsInner {
        FyiSettingsInner {
            a: None,
            fc: None,
            h: None,
            fd: None,
            r#fn: None,
        }
    }
}
