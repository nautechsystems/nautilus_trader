/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DynAccountSearchResponseMatchedAccountsInner {
    /// Returns a matching account ID that corresponds to the matching value.
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    /// Returns the corresponding alias or alternative name for the specific account ID. May be a duplicate of the accountId value in most cases.
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
    /// Returns the allocation identifier used internally for the account.
    #[serde(rename = "allocationId", skip_serializing_if = "Option::is_none")]
    pub allocation_id: Option<String>,
}

impl DynAccountSearchResponseMatchedAccountsInner {
    pub fn new() -> DynAccountSearchResponseMatchedAccountsInner {
        DynAccountSearchResponseMatchedAccountsInner {
            account_id: None,
            alias: None,
            allocation_id: None,
        }
    }
}
