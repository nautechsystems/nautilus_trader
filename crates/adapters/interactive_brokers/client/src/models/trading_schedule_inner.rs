/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradingScheduleInner {
    /// Exchange parameter id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Reference on a trade venue of given exchange parameter
    #[serde(rename = "tradeVenueId", skip_serializing_if = "Option::is_none")]
    pub trade_venue_id: Option<String>,
    /// short exchange name
    #[serde(rename = "exchange", skip_serializing_if = "Option::is_none")]
    pub exchange: Option<String>,
    /// exchange description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// References the time zone corresponding to the listed dates and times.
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    /// Always contains at least one ‘tradingTime’ and zero or more ‘sessionTime’ tags
    #[serde(rename = "schedules", skip_serializing_if = "Option::is_none")]
    pub schedules: Option<Vec<String>>,
}

impl TradingScheduleInner {
    pub fn new() -> TradingScheduleInner {
        TradingScheduleInner {
            id: None,
            trade_venue_id: None,
            exchange: None,
            description: None,
            timezone: None,
            schedules: None,
        }
    }
}
