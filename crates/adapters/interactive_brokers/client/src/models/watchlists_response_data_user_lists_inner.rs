/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WatchlistsResponseDataUserListsInner : Details of a single watchlist.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WatchlistsResponseDataUserListsInner {
    /// Internal use. Indicates if the watchlist is currently in use.
    #[serde(rename = "is_open", skip_serializing_if = "Option::is_none")]
    pub is_open: Option<bool>,
    /// Indicates if the watchlist can be edited.
    #[serde(rename = "read_only", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    /// Display name of the watchlist.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Unix timestamp in milliseconds of the last modification of the watchlist.
    #[serde(rename = "modified", skip_serializing_if = "Option::is_none")]
    pub modified: Option<i32>,
    /// Watchlist ID of the watchlist.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Always has value 'watchlist'.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl WatchlistsResponseDataUserListsInner {
    /// Details of a single watchlist.
    pub fn new() -> WatchlistsResponseDataUserListsInner {
        WatchlistsResponseDataUserListsInner {
            is_open: None,
            read_only: None,
            name: None,
            modified: None,
            id: None,
            r#type: None,
        }
    }
}
/// Always has value 'watchlist'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "watchlist")]
    Watchlist,
}

impl Default for Type {
    fn default() -> Type {
        Self::Watchlist
    }
}
