/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndividualIraBene {
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "dateOfBirth", skip_serializing_if = "Option::is_none")]
    pub date_of_birth: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "identification", skip_serializing_if = "Option::is_none")]
    pub identification: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "relationship", skip_serializing_if = "Option::is_none")]
    pub relationship: Option<String>,
    #[serde(rename = "ownership", skip_serializing_if = "Option::is_none")]
    pub ownership: Option<i32>,
    #[serde(rename = "perStripes", skip_serializing_if = "Option::is_none")]
    pub per_stripes: Option<String>,
}

impl IndividualIraBene {
    pub fn new() -> IndividualIraBene {
        IndividualIraBene {
            first_name: None,
            last_name: None,
            date_of_birth: None,
            r#type: None,
            identification: None,
            location: None,
            relationship: None,
            ownership: None,
            per_stripes: None,
        }
    }
}
