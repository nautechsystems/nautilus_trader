/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FormW9 {
    #[serde(rename = "localTaxForms", skip_serializing_if = "Option::is_none")]
    pub local_tax_forms: Option<Vec<models::LocalTaxForm>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "businessName", skip_serializing_if = "Option::is_none")]
    pub business_name: Option<String>,
    #[serde(rename = "customerType", skip_serializing_if = "Option::is_none")]
    pub customer_type: Option<CustomerType>,
    #[serde(rename = "taxClassification", skip_serializing_if = "Option::is_none")]
    pub tax_classification: Option<String>,
    #[serde(rename = "otherCustomerType", skip_serializing_if = "Option::is_none")]
    pub other_customer_type: Option<String>,
    #[serde(rename = "tin", skip_serializing_if = "Option::is_none")]
    pub tin: Option<String>,
    #[serde(rename = "tinType", skip_serializing_if = "Option::is_none")]
    pub tin_type: Option<TinType>,
    #[serde(rename = "cert1", skip_serializing_if = "Option::is_none")]
    pub cert1: Option<bool>,
    #[serde(rename = "cert2", skip_serializing_if = "Option::is_none")]
    pub cert2: Option<bool>,
    #[serde(rename = "cert3", skip_serializing_if = "Option::is_none")]
    pub cert3: Option<bool>,
    #[serde(rename = "cert4", skip_serializing_if = "Option::is_none")]
    pub cert4: Option<bool>,
    #[serde(rename = "signatureType", skip_serializing_if = "Option::is_none")]
    pub signature_type: Option<SignatureType>,
    #[serde(rename = "blankForm", skip_serializing_if = "Option::is_none")]
    pub blank_form: Option<bool>,
    #[serde(rename = "taxFormFile", skip_serializing_if = "Option::is_none")]
    pub tax_form_file: Option<String>,
    #[serde(
        rename = "proprietaryFormNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub proprietary_form_number: Option<i32>,
}

impl FormW9 {
    pub fn new() -> FormW9 {
        FormW9 {
            local_tax_forms: None,
            name: None,
            business_name: None,
            customer_type: None,
            tax_classification: None,
            other_customer_type: None,
            tin: None,
            tin_type: None,
            cert1: None,
            cert2: None,
            cert3: None,
            cert4: None,
            signature_type: None,
            blank_form: None,
            tax_form_file: None,
            proprietary_form_number: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CustomerType {
    #[serde(rename = "Individual")]
    Individual,
    #[serde(rename = "Corporation")]
    Corporation,
    #[serde(rename = "Partnership")]
    Partnership,
    #[serde(rename = "LLC")]
    Llc,
    #[serde(rename = "Other")]
    Other,
}

impl Default for CustomerType {
    fn default() -> CustomerType {
        Self::Individual
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TinType {
    #[serde(rename = "SSN")]
    Ssn,
    #[serde(rename = "EIN")]
    Ein,
    #[serde(rename = "NonUS_NationalId")]
    NonUsNationalId,
}

impl Default for TinType {
    fn default() -> TinType {
        Self::Ssn
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SignatureType {
    #[serde(rename = "Electronic")]
    Electronic,
    #[serde(rename = "Physical")]
    Physical,
}

impl Default for SignatureType {
    fn default() -> SignatureType {
        Self::Electronic
    }
}
