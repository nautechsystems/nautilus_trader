/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

/// SingleHistoricalBar : Object containing data for a single OHLC bar.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SingleHistoricalBar {
    /// Unix timestamp of the start (chronologically earlier) of the bar.
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<i32>,
    /// Opening value of the bar.
    #[serde(rename = "o", skip_serializing_if = "Option::is_none")]
    pub o: Option<f64>,
    /// Closing value of the bar.
    #[serde(rename = "c", skip_serializing_if = "Option::is_none")]
    pub c: Option<f64>,
    /// High value of the bar.
    #[serde(rename = "h", skip_serializing_if = "Option::is_none")]
    pub h: Option<f64>,
    /// Low value of the bar.
    #[serde(rename = "l", skip_serializing_if = "Option::is_none")]
    pub l: Option<f64>,
    /// Volume value of the bar, returned only for \"Last\" barType.
    #[serde(rename = "v", skip_serializing_if = "Option::is_none")]
    pub v: Option<f64>,
}

impl SingleHistoricalBar {
    /// Object containing data for a single OHLC bar.
    pub fn new() -> SingleHistoricalBar {
        SingleHistoricalBar {
            t: None,
            o: None,
            c: None,
            h: None,
            l: None,
            v: None,
        }
    }
}
