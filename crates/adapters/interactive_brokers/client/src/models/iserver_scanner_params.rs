/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IserverScannerParams {
    /// Contains all values used as the scanner “type” in the request.
    #[serde(rename = "scan_type_list", skip_serializing_if = "Option::is_none")]
    pub scan_type_list: Option<Vec<models::IserverScannerParamsScanTypeListInner>>,
    /// Contains all values relevant to the scanner “instrument” request field.
    #[serde(rename = "instrument_list", skip_serializing_if = "Option::is_none")]
    pub instrument_list: Option<Vec<models::IserverScannerParamsInstrumentListInner>>,
    #[serde(rename = "filter_list", skip_serializing_if = "Option::is_none")]
    pub filter_list: Option<Vec<models::IserverScannerParamsFilterListInner>>,
    /// Contains all values relevant to the location field of the market scanner request.
    #[serde(rename = "location_tree", skip_serializing_if = "Option::is_none")]
    pub location_tree: Option<Vec<models::IserverScannerParamsLocationTreeInner>>,
}

impl IserverScannerParams {
    pub fn new() -> IserverScannerParams {
        IserverScannerParams {
            scan_type_list: None,
            instrument_list: None,
            filter_list: None,
            location_tree: None,
        }
    }
}
