/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FormW8Bene {
    #[serde(rename = "substantialUsOwnerExternalIds", skip_serializing_if = "Option::is_none")]
    pub substantial_us_owner_external_ids: Option<Vec<String>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "countryOfOrganization", skip_serializing_if = "Option::is_none")]
    pub country_of_organization: Option<String>,
    #[serde(rename = "disregardedEntityName", skip_serializing_if = "Option::is_none")]
    pub disregarded_entity_name: Option<String>,
    #[serde(rename = "entityType", skip_serializing_if = "Option::is_none")]
    pub entity_type: Option<EntityType>,
    #[serde(rename = "fatcaStatus", skip_serializing_if = "Option::is_none")]
    pub fatca_status: Option<FatcaStatus>,
    #[serde(rename = "usTin", skip_serializing_if = "Option::is_none")]
    pub us_tin: Option<String>,
    #[serde(rename = "giin", skip_serializing_if = "Option::is_none")]
    pub giin: Option<String>,
    #[serde(rename = "foreignTin", skip_serializing_if = "Option::is_none")]
    pub foreign_tin: Option<String>,
    #[serde(rename = "tinOrExplanationRequired", skip_serializing_if = "Option::is_none")]
    pub tin_or_explanation_required: Option<bool>,
    #[serde(rename = "explanation", skip_serializing_if = "Option::is_none")]
    pub explanation: Option<Explanation>,
    #[serde(rename = "referenceNumber", skip_serializing_if = "Option::is_none")]
    pub reference_number: Option<i32>,
    #[serde(rename = "submitDate", skip_serializing_if = "Option::is_none")]
    pub submit_date: Option<String>,
    #[serde(rename = "box11Status", skip_serializing_if = "Option::is_none")]
    pub box11_status: Option<Box11Status>,
    #[serde(rename = "part314A", skip_serializing_if = "Option::is_none")]
    pub part314_a: Option<bool>,
    #[serde(rename = "part314ACountry", skip_serializing_if = "Option::is_none")]
    pub part314_a_country: Option<String>,
    #[serde(rename = "part314B", skip_serializing_if = "Option::is_none")]
    pub part314_b: Option<Part314B>,
    #[serde(rename = "part314C", skip_serializing_if = "Option::is_none")]
    pub part314_c: Option<bool>,
    #[serde(rename = "part416", skip_serializing_if = "Option::is_none")]
    pub part416: Option<String>,
    #[serde(rename = "part417I", skip_serializing_if = "Option::is_none")]
    pub part417_i: Option<bool>,
    #[serde(rename = "part417Ii", skip_serializing_if = "Option::is_none")]
    pub part417_ii: Option<bool>,
    #[serde(rename = "part518", skip_serializing_if = "Option::is_none")]
    pub part518: Option<bool>,
    #[serde(rename = "part619", skip_serializing_if = "Option::is_none")]
    pub part619: Option<bool>,
    #[serde(rename = "part720", skip_serializing_if = "Option::is_none")]
    pub part720: Option<String>,
    #[serde(rename = "part721", skip_serializing_if = "Option::is_none")]
    pub part721: Option<bool>,
    #[serde(rename = "part822", skip_serializing_if = "Option::is_none")]
    pub part822: Option<bool>,
    #[serde(rename = "part923", skip_serializing_if = "Option::is_none")]
    pub part923: Option<bool>,
    #[serde(rename = "part1024A", skip_serializing_if = "Option::is_none")]
    pub part1024_a: Option<bool>,
    #[serde(rename = "part1024B", skip_serializing_if = "Option::is_none")]
    pub part1024_b: Option<bool>,
    #[serde(rename = "part1024C", skip_serializing_if = "Option::is_none")]
    pub part1024_c: Option<bool>,
    #[serde(rename = "part1024D", skip_serializing_if = "Option::is_none")]
    pub part1024_d: Option<bool>,
    #[serde(rename = "part1125A", skip_serializing_if = "Option::is_none")]
    pub part1125_a: Option<bool>,
    #[serde(rename = "part1125B", skip_serializing_if = "Option::is_none")]
    pub part1125_b: Option<bool>,
    #[serde(rename = "part1125C", skip_serializing_if = "Option::is_none")]
    pub part1125_c: Option<bool>,
    #[serde(rename = "part1226", skip_serializing_if = "Option::is_none")]
    pub part1226: Option<bool>,
    #[serde(rename = "part1226Desc1", skip_serializing_if = "Option::is_none")]
    pub part1226_desc1: Option<String>,
    #[serde(rename = "part1226Desc2", skip_serializing_if = "Option::is_none")]
    pub part1226_desc2: Option<String>,
    #[serde(rename = "part1226Desc3", skip_serializing_if = "Option::is_none")]
    pub part1226_desc3: Option<Part1226Desc3>,
    #[serde(rename = "part1226Desc4", skip_serializing_if = "Option::is_none")]
    pub part1226_desc4: Option<String>,
    #[serde(rename = "part1327", skip_serializing_if = "Option::is_none")]
    pub part1327: Option<bool>,
    #[serde(rename = "part1428A", skip_serializing_if = "Option::is_none")]
    pub part1428_a: Option<bool>,
    #[serde(rename = "part1428B", skip_serializing_if = "Option::is_none")]
    pub part1428_b: Option<bool>,
    #[serde(rename = "part1529A", skip_serializing_if = "Option::is_none")]
    pub part1529_a: Option<bool>,
    #[serde(rename = "part1529B", skip_serializing_if = "Option::is_none")]
    pub part1529_b: Option<bool>,
    #[serde(rename = "part1529C", skip_serializing_if = "Option::is_none")]
    pub part1529_c: Option<bool>,
    #[serde(rename = "part1529D", skip_serializing_if = "Option::is_none")]
    pub part1529_d: Option<bool>,
    #[serde(rename = "part1529E", skip_serializing_if = "Option::is_none")]
    pub part1529_e: Option<bool>,
    #[serde(rename = "part1529F", skip_serializing_if = "Option::is_none")]
    pub part1529_f: Option<bool>,
    #[serde(rename = "part1630", skip_serializing_if = "Option::is_none")]
    pub part1630: Option<bool>,
    #[serde(rename = "part1731", skip_serializing_if = "Option::is_none")]
    pub part1731: Option<bool>,
    #[serde(rename = "part1832", skip_serializing_if = "Option::is_none")]
    pub part1832: Option<bool>,
    #[serde(rename = "part1933", skip_serializing_if = "Option::is_none")]
    pub part1933: Option<bool>,
    #[serde(rename = "part2034", skip_serializing_if = "Option::is_none")]
    pub part2034: Option<bool>,
    #[serde(rename = "part2135", skip_serializing_if = "Option::is_none")]
    pub part2135: Option<bool>,
    #[serde(rename = "part2135Date", skip_serializing_if = "Option::is_none")]
    pub part2135_date: Option<String>,
    #[serde(rename = "part2236", skip_serializing_if = "Option::is_none")]
    pub part2236: Option<bool>,
    #[serde(rename = "part2337A", skip_serializing_if = "Option::is_none")]
    pub part2337_a: Option<bool>,
    #[serde(rename = "part2337ADesc", skip_serializing_if = "Option::is_none")]
    pub part2337_a_desc: Option<String>,
    #[serde(rename = "part2337B", skip_serializing_if = "Option::is_none")]
    pub part2337_b: Option<bool>,
    #[serde(rename = "part2337BDesc1", skip_serializing_if = "Option::is_none")]
    pub part2337_b_desc1: Option<String>,
    #[serde(rename = "part2337BDesc2", skip_serializing_if = "Option::is_none")]
    pub part2337_b_desc2: Option<String>,
    #[serde(rename = "part2438", skip_serializing_if = "Option::is_none")]
    pub part2438: Option<bool>,
    #[serde(rename = "part2539", skip_serializing_if = "Option::is_none")]
    pub part2539: Option<bool>,
    #[serde(rename = "part2640A", skip_serializing_if = "Option::is_none")]
    pub part2640_a: Option<bool>,
    #[serde(rename = "part2640B", skip_serializing_if = "Option::is_none")]
    pub part2640_b: Option<bool>,
    #[serde(rename = "part2640C", skip_serializing_if = "Option::is_none")]
    pub part2640_c: Option<bool>,
    #[serde(rename = "part2741", skip_serializing_if = "Option::is_none")]
    pub part2741: Option<bool>,
    #[serde(rename = "part2842", skip_serializing_if = "Option::is_none")]
    pub part2842: Option<String>,
    #[serde(rename = "part2843", skip_serializing_if = "Option::is_none")]
    pub part2843: Option<bool>,
    #[serde(rename = "cert", skip_serializing_if = "Option::is_none")]
    pub cert: Option<bool>,
    #[serde(rename = "signatureType", skip_serializing_if = "Option::is_none")]
    pub signature_type: Option<SignatureType>,
    #[serde(rename = "blankForm", skip_serializing_if = "Option::is_none")]
    pub blank_form: Option<bool>,
    #[serde(rename = "taxFormFile", skip_serializing_if = "Option::is_none")]
    pub tax_form_file: Option<String>,
    #[serde(rename = "proprietaryFormNumber", skip_serializing_if = "Option::is_none")]
    pub proprietary_form_number: Option<i32>,
    #[serde(rename = "electronicFormat", skip_serializing_if = "Option::is_none")]
    pub electronic_format: Option<bool>,
}

impl FormW8Bene {
    pub fn new() -> FormW8Bene {
        FormW8Bene {
            substantial_us_owner_external_ids: None,
            name: None,
            country_of_organization: None,
            disregarded_entity_name: None,
            entity_type: None,
            fatca_status: None,
            us_tin: None,
            giin: None,
            foreign_tin: None,
            tin_or_explanation_required: None,
            explanation: None,
            reference_number: None,
            submit_date: None,
            box11_status: None,
            part314_a: None,
            part314_a_country: None,
            part314_b: None,
            part314_c: None,
            part416: None,
            part417_i: None,
            part417_ii: None,
            part518: None,
            part619: None,
            part720: None,
            part721: None,
            part822: None,
            part923: None,
            part1024_a: None,
            part1024_b: None,
            part1024_c: None,
            part1024_d: None,
            part1125_a: None,
            part1125_b: None,
            part1125_c: None,
            part1226: None,
            part1226_desc1: None,
            part1226_desc2: None,
            part1226_desc3: None,
            part1226_desc4: None,
            part1327: None,
            part1428_a: None,
            part1428_b: None,
            part1529_a: None,
            part1529_b: None,
            part1529_c: None,
            part1529_d: None,
            part1529_e: None,
            part1529_f: None,
            part1630: None,
            part1731: None,
            part1832: None,
            part1933: None,
            part2034: None,
            part2135: None,
            part2135_date: None,
            part2236: None,
            part2337_a: None,
            part2337_a_desc: None,
            part2337_b: None,
            part2337_b_desc1: None,
            part2337_b_desc2: None,
            part2438: None,
            part2539: None,
            part2640_a: None,
            part2640_b: None,
            part2640_c: None,
            part2741: None,
            part2842: None,
            part2843: None,
            cert: None,
            signature_type: None,
            blank_form: None,
            tax_form_file: None,
            proprietary_form_number: None,
            electronic_format: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EntityType {
    #[serde(rename = "CORPORATION")]
    Corporation,
    #[serde(rename = "DISREGARDED_ENTITY")]
    DisregardedEntity,
    #[serde(rename = "PARTNERSHIP")]
    Partnership,
    #[serde(rename = "SIMPLE_TRUST")]
    SimpleTrust,
    #[serde(rename = "GRANTOR_TRUST")]
    GrantorTrust,
    #[serde(rename = "COMPLEX_TRUST")]
    ComplexTrust,
    #[serde(rename = "ESTATE")]
    Estate,
    #[serde(rename = "GOVERNMENT")]
    Government,
    #[serde(rename = "CENTRAL_BANK_OF_ISSUE")]
    CentralBankOfIssue,
    #[serde(rename = "TAX_EXEMPT_ORGANIZATION")]
    TaxExemptOrganization,
    #[serde(rename = "PRIVATE_FOUNDATION")]
    PrivateFoundation,
}

impl Default for EntityType {
    fn default() -> EntityType {
        Self::Corporation
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FatcaStatus {
    #[serde(rename = "NONPARTICIPATING_FFI")]
    NonparticipatingFfi,
    #[serde(rename = "PARICIPATING_FFI")]
    ParicipatingFfi,
    #[serde(rename = "REPORTING_MODEL_1_FFI")]
    ReportingModel1Ffi,
    #[serde(rename = "REPORTING_MODEL_2_FFI")]
    ReportingModel2Ffi,
    #[serde(rename = "REGISTERED_DEEMED_COMPLIANT_FFI")]
    RegisteredDeemedCompliantFfi,
    #[serde(rename = "SPONSORED_FFI")]
    SponsoredFfi,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLIANT_NONREGISTERING_LOCAL_BANK")]
    CertifiedDeemedCompliantNonregisteringLocalBank,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLIANT_FFI")]
    CertifiedDeemedCompliantFfi,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLIANT_SPONSORED_VEHICLE")]
    CertifiedDeemedCompliantSponsoredVehicle,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLIANT_LIMITED_LIFE_DEBT")]
    CertifiedDeemedCompliantLimitedLifeDebt,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLIANT_INVESTMENT_ADVISORS")]
    CertifiedDeemedCompliantInvestmentAdvisors,
    #[serde(rename = "OWNER_DOCUMENTED_FFI")]
    OwnerDocumentedFfi,
    #[serde(rename = "RESTRICTED_DISTRIBUTOR")]
    RestrictedDistributor,
    #[serde(rename = "NONREPORTING_IGA_FFI")]
    NonreportingIgaFfi,
    #[serde(rename = "FOREIGN_GOVERNMENT")]
    ForeignGovernment,
    #[serde(rename = "INTERNATIONAL_ORGANIZATION")]
    InternationalOrganization,
    #[serde(rename = "EXEMPT_RETIREMENT_PLANS")]
    ExemptRetirementPlans,
    #[serde(rename = "ENTITY_OWNED_BY_EXEMPT_BENEFICIAL_OWNERS")]
    EntityOwnedByExemptBeneficialOwners,
    #[serde(rename = "TERRITORY_FINANCIAL_INSTITUTION")]
    TerritoryFinancialInstitution,
    #[serde(rename = "NONFINANCIAL_GROUP")]
    NonfinancialGroup,
    #[serde(rename = "EXCEPTED_NONFINANCIAL_STARTUP")]
    ExceptedNonfinancialStartup,
    #[serde(rename = "EXCEPTED_NONFINANCIAL_ENTITY")]
    ExceptedNonfinancialEntity,
    #[serde(rename = "AN_501_C_ORGANIZATION")]
    An501COrganization,
    #[serde(rename = "NONPROFIT_ORGANIZATION")]
    NonprofitOrganization,
    #[serde(rename = "PUBLICLY_TRADED_NFFE")]
    PubliclyTradedNffe,
    #[serde(rename = "EXCEPTED_TERRITORY_NFFE")]
    ExceptedTerritoryNffe,
    #[serde(rename = "ACTIVE_NFFE")]
    ActiveNffe,
    #[serde(rename = "PASSIVE_NFFE")]
    PassiveNffe,
    #[serde(rename = "EXCEPTED_INTER_AFFILIATE_FFI")]
    ExceptedInterAffiliateFfi,
    #[serde(rename = "DIRECT_REPORTING_NFFE")]
    DirectReportingNffe,
    #[serde(rename = "SPONSORED_DIRECT_REPORTING_NFFE")]
    SponsoredDirectReportingNffe,
}

impl Default for FatcaStatus {
    fn default() -> FatcaStatus {
        Self::NonparticipatingFfi
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Explanation {
    #[serde(rename = "US_TIN")]
    UsTin,
    #[serde(rename = "TIN_NOT_DISCLOSED")]
    TinNotDisclosed,
    #[serde(rename = "TIN_NOT_REQUIRED")]
    TinNotRequired,
    #[serde(rename = "TIN_NOT_ISSUED")]
    TinNotIssued,
}

impl Default for Explanation {
    fn default() -> Explanation {
        Self::UsTin
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Box11Status {
    #[serde(rename = "LIMITED_BRANCH")]
    LimitedBranch,
    #[serde(rename = "US_BRANCH")]
    UsBranch,
    #[serde(rename = "PARTICIPATING_FFI")]
    ParticipatingFfi,
    #[serde(rename = "REPORTING_MODEL_1_FFI")]
    ReportingModel1Ffi,
    #[serde(rename = "REPORTING_MODEL_2_FFI")]
    ReportingModel2Ffi,
}

impl Default for Box11Status {
    fn default() -> Box11Status {
        Self::LimitedBranch
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Part314B {
    #[serde(rename = "CompanyMeetsOwnershipAndBaseErosionTest")]
    CompanyMeetsOwnershipAndBaseErosionTest,
    #[serde(rename = "TaxExemptPensionTrustOrPensionFund")]
    TaxExemptPensionTrustOrPensionFund,
    #[serde(rename = "CompanyMeetsDerivativeBenefitsTest")]
    CompanyMeetsDerivativeBenefitsTest,
    #[serde(rename = "TaxExemptOrganization")]
    TaxExemptOrganization,
    #[serde(rename = "CompanyWithIncomeActiveBusiness")]
    CompanyWithIncomeActiveBusiness,
    #[serde(rename = "PubliclyTradedCorporation")]
    PubliclyTradedCorporation,
    #[serde(rename = "FavorableDiscretionaryDetermination")]
    FavorableDiscretionaryDetermination,
    #[serde(rename = "SubsidiaryOfAPubliclyTradedCorporation")]
    SubsidiaryOfAPubliclyTradedCorporation,
    #[serde(rename = "Government")]
    Government,
    #[serde(rename = "NoLobArticleInTreaty")]
    NoLobArticleInTreaty,
    #[serde(rename = "Other")]
    Other,
}

impl Default for Part314B {
    fn default() -> Part314B {
        Self::CompanyMeetsOwnershipAndBaseErosionTest
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Part1226Desc3 {
    #[serde(rename = "CollectiveInvestmentVehicle")]
    CollectiveInvestmentVehicle,
    #[serde(rename = "ExemptBeneficialOwner-RetirementPlan")]
    ExemptBeneficialOwnerRetirementPlan,
    #[serde(rename = "FinancialInstitutionwithlocalClientBase")]
    FinancialInstitutionwithlocalClientBase,
    #[serde(rename = "InvestmentAdvisorsandManagers")]
    InvestmentAdvisorsandManagers,
    #[serde(rename = "LocalBank")]
    LocalBank,
    #[serde(rename = "SponsoredCloselyHeldInvestmentVehicle")]
    SponsoredCloselyHeldInvestmentVehicle,
    #[serde(rename = "SponsoredInvestmentEntity")]
    SponsoredInvestmentEntity,
    #[serde(rename = "TrusteeDocumentedTrust")]
    TrusteeDocumentedTrust,
}

impl Default for Part1226Desc3 {
    fn default() -> Part1226Desc3 {
        Self::CollectiveInvestmentVehicle
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SignatureType {
    #[serde(rename = "Electronic")]
    Electronic,
    #[serde(rename = "Physical")]
    Physical,
}

impl Default for SignatureType {
    fn default() -> SignatureType {
        Self::Electronic
    }
}
