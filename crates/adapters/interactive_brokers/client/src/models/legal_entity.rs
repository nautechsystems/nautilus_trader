/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LegalEntity {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<Box<models::Address>>,
    #[serde(rename = "phones", skip_serializing_if = "Option::is_none")]
    pub phones: Option<Vec<models::PhoneInfo>>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(
        rename = "legalEntityIdentification",
        skip_serializing_if = "Option::is_none"
    )]
    pub legal_entity_identification: Option<Box<models::LegalEntityIdentification>>,
    #[serde(rename = "taxResidencies", skip_serializing_if = "Option::is_none")]
    pub tax_residencies: Option<Vec<models::TaxResidency>>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "externalId", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    #[serde(rename = "usTaxResident", skip_serializing_if = "Option::is_none")]
    pub us_tax_resident: Option<bool>,
    #[serde(rename = "translated", skip_serializing_if = "Option::is_none")]
    pub translated: Option<bool>,
}

impl LegalEntity {
    pub fn new() -> LegalEntity {
        LegalEntity {
            name: None,
            address: None,
            phones: None,
            email: None,
            legal_entity_identification: None,
            tax_residencies: None,
            id: None,
            external_id: None,
            us_tax_resident: None,
            translated: None,
        }
    }
}
