/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AffiliationDetailsType {
    #[serde(rename = "affiliationRelationship", skip_serializing_if = "Option::is_none")]
    pub affiliation_relationship: Option<AffiliationRelationship>,
    #[serde(rename = "personName", skip_serializing_if = "Option::is_none")]
    pub person_name: Option<String>,
    #[serde(rename = "companyId", skip_serializing_if = "Option::is_none")]
    pub company_id: Option<i32>,
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<String>,
    #[serde(rename = "companyMailingAddress", skip_serializing_if = "Option::is_none")]
    pub company_mailing_address: Option<Box<models::Address>>,
    #[serde(rename = "companyPhone", skip_serializing_if = "Option::is_none")]
    pub company_phone: Option<String>,
    #[serde(rename = "companyEmailAddress", skip_serializing_if = "Option::is_none")]
    pub company_email_address: Option<String>,
    #[serde(rename = "duplicateStmtRequired", skip_serializing_if = "Option::is_none")]
    pub duplicate_stmt_required: Option<bool>,
}

impl AffiliationDetailsType {
    pub fn new() -> AffiliationDetailsType {
        AffiliationDetailsType {
            affiliation_relationship: None,
            person_name: None,
            company_id: None,
            company: None,
            company_mailing_address: None,
            company_phone: None,
            company_email_address: None,
            duplicate_stmt_required: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AffiliationRelationship {
    #[serde(rename = "Self")]
    VariantSelf,
    #[serde(rename = "Spouse")]
    Spouse,
    #[serde(rename = "Parent")]
    Parent,
    #[serde(rename = "Child")]
    Child,
    #[serde(rename = "Other")]
    Other,
}

impl Default for AffiliationRelationship {
    fn default() -> AffiliationRelationship {
        Self::VariantSelf
    }
}
