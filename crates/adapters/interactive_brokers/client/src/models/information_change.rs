/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InformationChange {
    #[serde(rename = "addEntities", skip_serializing_if = "Option::is_none")]
    pub add_entities: Option<Vec<models::AddEntity>>,
    #[serde(rename = "updateEntities", skip_serializing_if = "Option::is_none")]
    pub update_entities: Option<Vec<models::UpdateEntity>>,
    #[serde(rename = "deleteEntities", skip_serializing_if = "Option::is_none")]
    pub delete_entities: Option<Vec<models::DeleteEntity>>,
    #[serde(rename = "ibAccountId", skip_serializing_if = "Option::is_none")]
    pub ib_account_id: Option<String>,
}

impl InformationChange {
    pub fn new() -> InformationChange {
        InformationChange {
            add_entities: None,
            update_entities: None,
            delete_entities: None,
            ib_account_id: None,
        }
    }
}
