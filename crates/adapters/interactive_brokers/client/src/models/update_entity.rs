/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateEntity {
    #[serde(rename = "addRelationships", skip_serializing_if = "Option::is_none")]
    pub add_relationships: Option<Vec<models::AddRelationship>>,
    #[serde(
        rename = "deleteRelationships",
        skip_serializing_if = "Option::is_none"
    )]
    pub delete_relationships: Option<Vec<models::DeleteRelationship>>,
    #[serde(rename = "individual", skip_serializing_if = "Option::is_none")]
    pub individual: Option<Box<models::Individual>>,
    #[serde(rename = "legalEntity", skip_serializing_if = "Option::is_none")]
    pub legal_entity: Option<Box<models::LegalEntity>>,
    #[serde(rename = "trust", skip_serializing_if = "Option::is_none")]
    pub trust: Option<Box<models::Trust>>,
    #[serde(rename = "organization", skip_serializing_if = "Option::is_none")]
    pub organization: Option<Box<models::Organization>>,
    #[serde(rename = "documents", skip_serializing_if = "Option::is_none")]
    pub documents: Option<Vec<models::Document>>,
    #[serde(rename = "ibEntityId", skip_serializing_if = "Option::is_none")]
    pub ib_entity_id: Option<i32>,
}

impl UpdateEntity {
    pub fn new() -> UpdateEntity {
        UpdateEntity {
            add_relationships: None,
            delete_relationships: None,
            individual: None,
            legal_entity: None,
            trust: None,
            organization: None,
            documents: None,
            ib_entity_id: None,
        }
    }
}
