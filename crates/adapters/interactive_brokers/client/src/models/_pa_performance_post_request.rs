/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaPerformancePostRequest {
    /// An array of strings containing each account identifier to retrieve performance details for.
    #[serde(rename = "acctIds", skip_serializing_if = "Option::is_none")]
    pub acct_ids: Option<Vec<String>>,
    /// Specify the period for which the account should be analyzed. Available period lengths:   * `1D` - The last 24 hours.   * `7D` - The last 7 full days.   * `MTD` - Performance since the 1st of the month.   * `1M` - A full calendar month from the last full trade day.   * `3M` - 3 full calendar months from the last full trade day.   * `6M` - 6 full calendar months from the last full trade day.   * `12M` - 12 full calendar month from the last full trade day.   * `YTD` - Performance since January 1st.
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<Period>,
}

impl PaPerformancePostRequest {
    pub fn new() -> PaPerformancePostRequest {
        PaPerformancePostRequest {
            acct_ids: None,
            period: None,
        }
    }
}
/// Specify the period for which the account should be analyzed. Available period lengths:   * `1D` - The last 24 hours.   * `7D` - The last 7 full days.   * `MTD` - Performance since the 1st of the month.   * `1M` - A full calendar month from the last full trade day.   * `3M` - 3 full calendar months from the last full trade day.   * `6M` - 6 full calendar months from the last full trade day.   * `12M` - 12 full calendar month from the last full trade day.   * `YTD` - Performance since January 1st.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Period {
    #[serde(rename = "1D")]
    Variant1D,
    #[serde(rename = "7D")]
    Variant7D,
    #[serde(rename = "MTD")]
    Mtd,
    #[serde(rename = "1M")]
    Variant1M,
    #[serde(rename = "3M")]
    Variant3M,
    #[serde(rename = "6M")]
    Variant6M,
    #[serde(rename = "12M")]
    Variant12M,
    #[serde(rename = "YTD")]
    Ytd,
}

impl Default for Period {
    fn default() -> Period {
        Self::Variant1D
    }
}
