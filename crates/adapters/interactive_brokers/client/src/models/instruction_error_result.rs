/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InstructionErrorResult {
    #[serde(rename = "error")]
    pub error: Box<serde_json::Value>,
    #[serde(rename = "clientInstructionId")]
    pub client_instruction_id: f64,
    #[serde(rename = "instructionType")]
    pub instruction_type: InstructionType,
    #[serde(rename = "instructionStatus")]
    pub instruction_status: InstructionStatus,
    #[serde(rename = "instructionId")]
    pub instruction_id: f64,
    #[serde(rename = "ibReferenceId", skip_serializing_if = "Option::is_none")]
    pub ib_reference_id: Option<f64>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl InstructionErrorResult {
    pub fn new(error: serde_json::Value, client_instruction_id: f64, instruction_type: InstructionType, instruction_status: InstructionStatus, instruction_id: f64) -> InstructionErrorResult {
        InstructionErrorResult {
            error: Box::new(error),
            client_instruction_id,
            instruction_type,
            instruction_status,
            instruction_id,
            ib_reference_id: None,
            description: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InstructionType {
    #[serde(rename = "ACCOUNT_CLOSE")]
    AccountClose,
    #[serde(rename = "ACH_INSTRUCTION")]
    AchInstruction,
    #[serde(rename = "APPLY_FEE_TEMPLATE")]
    ApplyFeeTemplate,
    #[serde(rename = "CANCEL_INSTRUCTION")]
    CancelInstruction,
    #[serde(rename = "COMPLEX_ASSET_TRANSFER")]
    ComplexAssetTransfer,
    #[serde(rename = "DELETE_BANK_INSTRUCTION")]
    DeleteBankInstruction,
    #[serde(rename = "DEPOSIT")]
    Deposit,
    #[serde(rename = "DWAC")]
    Dwac,
    #[serde(rename = "EXTERNAL_POSITION_TRANSFER")]
    ExternalPositionTransfer,
    #[serde(rename = "FOP")]
    Fop,
    #[serde(rename = "QUERY_RECENT_INSTRUCTIONS")]
    QueryRecentInstructions,
    #[serde(rename = "QUERY_WITHDRAWABLE_FUNDS")]
    QueryWithdrawableFunds,
    #[serde(rename = "INTERNAL_POSITION_TRANSFER")]
    InternalPositionTransfer,
    #[serde(rename = "INTERNAL_CASH_TRANSFER")]
    InternalCashTransfer,
    #[serde(rename = "MICRO_AMOUNT")]
    MicroAmount,
    #[serde(rename = "PREDEFINED_DESTINATION_INSTRUCTION")]
    PredefinedDestinationInstruction,
    #[serde(rename = "TRADITIONAL_BANK_INSTRUCTION_VERIFICATION")]
    TraditionalBankInstructionVerification,
    #[serde(rename = "WITHDRAWAL")]
    Withdrawal,
    #[serde(rename = "QUERY_IRA_CONTRIBUTIONS")]
    QueryIraContributions,
    #[serde(rename = "EDDA_INSTRUCTION")]
    EddaInstruction,
    #[serde(rename = "QUERY_FEE_TEMPLATE")]
    QueryFeeTemplate,
    #[serde(rename = "QUERY_RECENT_RECURRING_EVENTS")]
    QueryRecentRecurringEvents,
    #[serde(rename = "QUERY_BANK_INSTRUCTION")]
    QueryBankInstruction,
}

impl Default for InstructionType {
    fn default() -> InstructionType {
        Self::AccountClose
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InstructionStatus {
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "PROCESSED")]
    Processed,
    #[serde(rename = "REJECTED")]
    Rejected,
    #[serde(rename = "PENDING_VERIFICATION")]
    PendingVerification,
}

impl Default for InstructionStatus {
    fn default() -> InstructionStatus {
        Self::Pending
    }
}
