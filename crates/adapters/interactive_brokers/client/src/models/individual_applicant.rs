/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndividualApplicant {
    #[serde(
        rename = "accountHolderDetails",
        skip_serializing_if = "Option::is_none"
    )]
    pub account_holder_details: Option<Vec<models::AssociatedIndividual>>,
    #[serde(
        rename = "financialInformation",
        skip_serializing_if = "Option::is_none"
    )]
    pub financial_information: Option<Vec<models::FinancialInformation>>,
    #[serde(
        rename = "regulatoryInformation",
        skip_serializing_if = "Option::is_none"
    )]
    pub regulatory_information: Option<Vec<models::RegulatoryInformation>>,
    #[serde(
        rename = "regulatedMemberships",
        skip_serializing_if = "Option::is_none"
    )]
    pub regulated_memberships: Option<Vec<models::RegulatedMembership>>,
    #[serde(
        rename = "accreditedInvestorInformation",
        skip_serializing_if = "Option::is_none"
    )]
    pub accredited_investor_information: Option<Box<models::AccreditedInvestorInformation>>,
    #[serde(rename = "taxInformation", skip_serializing_if = "Option::is_none")]
    pub tax_information: Option<Box<models::IndividualTaxInformation>>,
    #[serde(
        rename = "withholdingStatement",
        skip_serializing_if = "Option::is_none"
    )]
    pub withholding_statement: Option<Box<models::WithholdingStatementType>>,
}

impl IndividualApplicant {
    pub fn new() -> IndividualApplicant {
        IndividualApplicant {
            account_holder_details: None,
            financial_information: None,
            regulatory_information: None,
            regulated_memberships: None,
            accredited_investor_information: None,
            tax_information: None,
            withholding_statement: None,
        }
    }
}
