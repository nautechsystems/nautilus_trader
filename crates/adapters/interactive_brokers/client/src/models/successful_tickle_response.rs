/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SuccessfulTickleResponse {
    /// Returns the session token of the contract.
    #[serde(rename = "session", skip_serializing_if = "Option::is_none")]
    pub session: Option<String>,
    /// Returns the number of milliseconds until the current sso session expires.
    #[serde(rename = "ssoExpires", skip_serializing_if = "Option::is_none")]
    pub sso_expires: Option<i32>,
    /// (Internal Use Only)
    #[serde(rename = "collission", skip_serializing_if = "Option::is_none")]
    pub collission: Option<bool>,
    /// (Internal Use Only)
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i32>,
    #[serde(rename = "hmds", skip_serializing_if = "Option::is_none")]
    pub hmds: Option<Box<models::SuccessfulTickleResponseHmds>>,
    #[serde(rename = "iserver", skip_serializing_if = "Option::is_none")]
    pub iserver: Option<Box<models::SuccessfulTickleResponseIserver>>,
}

impl SuccessfulTickleResponse {
    pub fn new() -> SuccessfulTickleResponse {
        SuccessfulTickleResponse {
            session: None,
            sso_expires: None,
            collission: None,
            user_id: None,
            hmds: None,
            iserver: None,
        }
    }
}
