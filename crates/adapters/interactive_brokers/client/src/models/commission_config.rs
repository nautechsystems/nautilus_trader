/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CommissionConfig {
    #[serde(rename = "style", skip_serializing_if = "Option::is_none")]
    pub style: Option<Style>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl CommissionConfig {
    pub fn new() -> CommissionConfig {
        CommissionConfig {
            style: None,
            r#type: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Style {
    #[serde(rename = "Bundled")]
    Bundled,
    #[serde(rename = "Unbundled")]
    Unbundled,
}

impl Default for Style {
    fn default() -> Style {
        Self::Bundled
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Commodities")]
    Commodities,
    #[serde(rename = "Securities")]
    Securities,
}

impl Default for Type {
    fn default() -> Type {
        Self::Commodities
    }
}
