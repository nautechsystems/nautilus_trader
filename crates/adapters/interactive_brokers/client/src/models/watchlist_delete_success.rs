/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WatchlistDeleteSuccess : Object detailing the successful deletion of a watchlist.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WatchlistDeleteSuccess {
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<models::WatchlistDeleteSuccessData>>,
    /// Internal use. Always has value 'context'.
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<Action>,
    /// Internal use. Number of times endpoint has been visited during session.
    #[serde(rename = "MID", skip_serializing_if = "Option::is_none")]
    pub mid: Option<String>,
}

impl WatchlistDeleteSuccess {
    /// Object detailing the successful deletion of a watchlist.
    pub fn new() -> WatchlistDeleteSuccess {
        WatchlistDeleteSuccess {
            data: None,
            action: None,
            mid: None,
        }
    }
}
/// Internal use. Always has value 'context'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "context")]
    Context,
}

impl Default for Action {
    fn default() -> Action {
        Self::Context
    }
}
