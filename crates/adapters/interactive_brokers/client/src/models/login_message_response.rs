/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LoginMessageResponse {
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    #[serde(rename = "clearingStatus", skip_serializing_if = "Option::is_none")]
    pub clearing_status: Option<String>,
    #[serde(
        rename = "clearingStatusDescription",
        skip_serializing_if = "Option::is_none"
    )]
    pub clearing_status_description: Option<String>,
    #[serde(rename = "loginMessages", skip_serializing_if = "Option::is_none")]
    pub login_messages: Option<Vec<models::LoginMessage>>,
    #[serde(
        rename = "loginMessagePresent",
        skip_serializing_if = "Option::is_none"
    )]
    pub login_message_present: Option<bool>,
}

impl LoginMessageResponse {
    pub fn new() -> LoginMessageResponse {
        LoginMessageResponse {
            account_id: None,
            clearing_status: None,
            clearing_status_description: None,
            login_messages: None,
            login_message_present: None,
        }
    }
}
