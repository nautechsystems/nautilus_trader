/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmploymentDetails {
    #[serde(rename = "employer", skip_serializing_if = "Option::is_none")]
    pub employer: Option<String>,
    #[serde(rename = "occupation", skip_serializing_if = "Option::is_none")]
    pub occupation: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "employerBusiness", skip_serializing_if = "Option::is_none")]
    pub employer_business: Option<String>,
    #[serde(rename = "employerAddress", skip_serializing_if = "Option::is_none")]
    pub employer_address: Option<Box<models::Address>>,
    #[serde(rename = "employerPhone", skip_serializing_if = "Option::is_none")]
    pub employer_phone: Option<String>,
    #[serde(rename = "emplCountryResCountryDetails", skip_serializing_if = "Option::is_none")]
    pub empl_country_res_country_details: Option<String>,
}

impl EmploymentDetails {
    pub fn new() -> EmploymentDetails {
        EmploymentDetails {
            employer: None,
            occupation: None,
            description: None,
            employer_business: None,
            employer_address: None,
            employer_phone: None,
            empl_country_res_country_details: None,
        }
    }
}
