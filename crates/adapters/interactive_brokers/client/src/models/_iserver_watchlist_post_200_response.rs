/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IserverWatchlistPost200Response {
    /// The submitted watchlist ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// IB's internal hash of the submitted watchlist.
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<String>,
    /// The submitted human-readable watchlist name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Indicates whether watchlist is write-restricted. User-created watchlists will always show false.
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    /// Array will always be empty. Contents can be queried via GET /iserver/watchlist?id=
    #[serde(rename = "instruments", skip_serializing_if = "Option::is_none")]
    pub instruments: Option<Vec<String>>,
}

impl IserverWatchlistPost200Response {
    pub fn new() -> IserverWatchlistPost200Response {
        IserverWatchlistPost200Response {
            id: None,
            hash: None,
            name: None,
            read_only: None,
            instruments: None,
        }
    }
}
