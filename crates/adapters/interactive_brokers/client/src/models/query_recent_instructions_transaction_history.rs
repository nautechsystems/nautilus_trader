/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryRecentInstructionsTransactionHistory {
    #[serde(rename = "daysToGoBack")]
    pub days_to_go_back: f64,
    #[serde(rename = "transactionType", skip_serializing_if = "Option::is_none")]
    pub transaction_type: Option<TransactionType>,
}

impl QueryRecentInstructionsTransactionHistory {
    pub fn new(days_to_go_back: f64) -> QueryRecentInstructionsTransactionHistory {
        QueryRecentInstructionsTransactionHistory {
            days_to_go_back,
            transaction_type: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TransactionType {
    #[serde(rename = "ALL")]
    All,
    #[serde(rename = "ACH_INSTRUCTION")]
    AchInstruction,
    #[serde(rename = "PREDEFINED_DESTINATION_INSTRUCTION")]
    PredefinedDestinationInstruction,
    #[serde(rename = "WITHDRAWAL")]
    Withdrawal,
    #[serde(rename = "ACCOUNT_CLOSE")]
    AccountClose,
    #[serde(rename = "DEPOSIT")]
    Deposit,
    #[serde(rename = "DWAC")]
    Dwac,
    #[serde(rename = "FOP")]
    Fop,
    #[serde(rename = "EDDA_INSTRUCTION")]
    EddaInstruction,
    #[serde(rename = "TRADITIONAL_BANK_INSTRUCTION_VERIFICATION")]
    TraditionalBankInstructionVerification,
    #[serde(rename = "CANCEL_INSTRUCTION")]
    CancelInstruction,
    #[serde(rename = "DELETE_BANK_INSTRUCTION")]
    DeleteBankInstruction,
    #[serde(rename = "EXTERNAL_POSITION_TRANSFER")]
    ExternalPositionTransfer,
    #[serde(rename = "INTERNAL_CASH_TRANSFER")]
    InternalCashTransfer,
    #[serde(rename = "INTERNAL_POSITION_TRANSFER")]
    InternalPositionTransfer,
    #[serde(rename = "COMPLEX_ASSET_TRANSFER")]
    ComplexAssetTransfer,
}

impl Default for TransactionType {
    fn default() -> TransactionType {
        Self::All
    }
}
