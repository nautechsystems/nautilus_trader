/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderReplyMessageInner : An object containing order reply messages emitted against a single order ticket.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderReplyMessageInner {
    /// The replyId UUID of the order ticket's emitted order reply messages, used to confirm them and proceed.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Internal use. Always delivers value 'false'.
    #[serde(rename = "isSuppressed", skip_serializing_if = "Option::is_none")]
    pub is_suppressed: Option<bool>,
    /// An array containing the human-readable text of all order reply messages emitted for the order ticket.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<Vec<String>>,
    /// An array containing identifiers that categorize the types of order reply messages that have been emitted. Elements of this array are ordered so that indicies match the corresponding human-readable text strings in the 'message' array.
    #[serde(rename = "messageIds", skip_serializing_if = "Option::is_none")]
    pub message_ids: Option<Vec<String>>,
}

impl OrderReplyMessageInner {
    /// An object containing order reply messages emitted against a single order ticket.
    pub fn new() -> OrderReplyMessageInner {
        OrderReplyMessageInner {
            id: None,
            is_suppressed: None,
            message: None,
            message_ids: None,
        }
    }
}
