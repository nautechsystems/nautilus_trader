/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DepositFundsInstructionIraDepositDetail {
    #[serde(rename = "iraContributionType")]
    pub ira_contribution_type: IraContributionType,
    #[serde(rename = "iraTaxYearType")]
    pub ira_tax_year_type: IraTaxYearType,
    #[serde(rename = "fromIraType")]
    pub from_ira_type: FromIraType,
}

impl DepositFundsInstructionIraDepositDetail {
    pub fn new(
        ira_contribution_type: IraContributionType,
        ira_tax_year_type: IraTaxYearType,
        from_ira_type: FromIraType,
    ) -> DepositFundsInstructionIraDepositDetail {
        DepositFundsInstructionIraDepositDetail {
            ira_contribution_type,
            ira_tax_year_type,
            from_ira_type,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IraContributionType {
    #[serde(rename = "ROLLOVER")]
    Rollover,
    #[serde(rename = "LATE_ROLLOVER")]
    LateRollover,
    #[serde(rename = "DIRECT_ROLLOVER")]
    DirectRollover,
    #[serde(rename = "CONTRIBUTION")]
    Contribution,
    #[serde(rename = "SPOUSAL_CONTRIBUTION")]
    SpousalContribution,
    #[serde(rename = "EMPLOYER_SEP_CONTRIBUTION")]
    EmployerSepContribution,
}

impl Default for IraContributionType {
    fn default() -> IraContributionType {
        Self::Rollover
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IraTaxYearType {
    #[serde(rename = "CURRENT")]
    Current,
    #[serde(rename = "PRIOR")]
    Prior,
}

impl Default for IraTaxYearType {
    fn default() -> IraTaxYearType {
        Self::Current
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FromIraType {
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "TRADITIONAL")]
    Traditional,
    #[serde(rename = "ROLLOVER")]
    Rollover,
    #[serde(rename = "ROTH")]
    Roth,
    #[serde(rename = "SEP")]
    Sep,
    #[serde(rename = "EDUCATION")]
    Education,
    #[serde(rename = "TRADITIONAL_INHERITED")]
    TraditionalInherited,
    #[serde(rename = "ROTH_INHERITED")]
    RothInherited,
    #[serde(rename = "SEP_INHERITED")]
    SepInherited,
    #[serde(rename = "RETIREMENT_SAVING_PLAN")]
    RetirementSavingPlan,
    #[serde(rename = "SPOUSAL_RETIREMENT_SAVING_PLAN")]
    SpousalRetirementSavingPlan,
    #[serde(rename = "TAX_FREE_SAVING_ACCOUNT")]
    TaxFreeSavingAccount,
}

impl Default for FromIraType {
    fn default() -> FromIraType {
        Self::None
    }
}
