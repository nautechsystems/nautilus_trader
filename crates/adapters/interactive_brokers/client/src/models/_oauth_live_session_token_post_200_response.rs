/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OauthLiveSessionTokenPost200Response {
    /// Diffie-Hellman challenge value used to compute live session token locally by client.
    #[serde(rename = "diffie_hellman_challenge", skip_serializing_if = "Option::is_none")]
    pub diffie_hellman_challenge: Option<String>,
    /// Signature value used to validate successful client-side computation of live session token.
    #[serde(rename = "live_session_token_signature", skip_serializing_if = "Option::is_none")]
    pub live_session_token_signature: Option<String>,
    /// Unix timestamp in milliseconds of time of live session token computation by IB. Live session tokens are valid for 24 hours from this time.
    #[serde(rename = "live_session_token_expiration", skip_serializing_if = "Option::is_none")]
    pub live_session_token_expiration: Option<i32>,
}

impl OauthLiveSessionTokenPost200Response {
    pub fn new() -> OauthLiveSessionTokenPost200Response {
        OauthLiveSessionTokenPost200Response {
            diffie_hellman_challenge: None,
            live_session_token_signature: None,
            live_session_token_expiration: None,
        }
    }
}
