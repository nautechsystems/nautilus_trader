/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DocumentSubmission {
    #[serde(rename = "documents", skip_serializing_if = "Option::is_none")]
    pub documents: Option<Vec<models::Document>>,
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    #[serde(rename = "inputLanguage", skip_serializing_if = "Option::is_none")]
    pub input_language: Option<InputLanguage>,
    #[serde(rename = "translation", skip_serializing_if = "Option::is_none")]
    pub translation: Option<bool>,
}

impl DocumentSubmission {
    pub fn new() -> DocumentSubmission {
        DocumentSubmission {
            documents: None,
            account_id: None,
            input_language: None,
            translation: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InputLanguage {
    #[serde(rename = "en")]
    En,
    #[serde(rename = "zh-Hans")]
    ZhHans,
    #[serde(rename = "ja")]
    Ja,
    #[serde(rename = "ru")]
    Ru,
    #[serde(rename = "fr")]
    Fr,
    #[serde(rename = "pt")]
    Pt,
    #[serde(rename = "es")]
    Es,
    #[serde(rename = "it")]
    It,
    #[serde(rename = "ar-AE")]
    ArAe,
    #[serde(rename = "de")]
    De,
    #[serde(rename = "he-IL")]
    HeIl,
    #[serde(rename = "hu")]
    Hu,
}

impl Default for InputLanguage {
    fn default() -> InputLanguage {
        Self::En
    }
}
