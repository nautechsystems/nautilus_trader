/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BrokerageSessionStatus {
    /// Returns whether your brokerage session is authenticated or not.
    #[serde(rename = "authenticated", skip_serializing_if = "Option::is_none")]
    pub authenticated: Option<bool>,
    /// Returns whether you have a competing brokerage session in another connection.
    #[serde(rename = "competing", skip_serializing_if = "Option::is_none")]
    pub competing: Option<bool>,
    /// Returns whether you are connected to the gateway or not.
    #[serde(rename = "connected", skip_serializing_if = "Option::is_none")]
    pub connected: Option<bool>,
    /// A message about your authenticate status if any.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// Device MAC information.
    #[serde(rename = "MAC", skip_serializing_if = "Option::is_none")]
    pub mac: Option<String>,
    #[serde(rename = "serverInfo", skip_serializing_if = "Option::is_none")]
    pub server_info: Option<Box<models::BrokerageSessionStatusServerInfo>>,
}

impl BrokerageSessionStatus {
    pub fn new() -> BrokerageSessionStatus {
        BrokerageSessionStatus {
            authenticated: None,
            competing: None,
            connected: None,
            message: None,
            mac: None,
            server_info: None,
        }
    }
}
