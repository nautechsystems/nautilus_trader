/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IserverScannerParamsLocationTreeInner {
    /// Returns the overarching instrument type to designate the location.
    #[serde(rename = "display_name", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Returns the code value of the market scanner instrument type value.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "locations", skip_serializing_if = "Option::is_none")]
    pub locations: Option<Vec<models::IserverScannerParamsLocationTreeInnerLocationsInner>>,
}

impl IserverScannerParamsLocationTreeInner {
    pub fn new() -> IserverScannerParamsLocationTreeInner {
        IserverScannerParamsLocationTreeInner {
            display_name: None,
            r#type: None,
            locations: None,
        }
    }
}
