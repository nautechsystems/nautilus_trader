/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FormW8Imy {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "countryOfIncorporation", skip_serializing_if = "Option::is_none")]
    pub country_of_incorporation: Option<String>,
    #[serde(rename = "disregardedEntityName", skip_serializing_if = "Option::is_none")]
    pub disregarded_entity_name: Option<String>,
    #[serde(rename = "entityType", skip_serializing_if = "Option::is_none")]
    pub entity_type: Option<EntityType>,
    #[serde(rename = "fatcaStatus", skip_serializing_if = "Option::is_none")]
    pub fatca_status: Option<FatcaStatus>,
    #[serde(rename = "usTin", skip_serializing_if = "Option::is_none")]
    pub us_tin: Option<String>,
    #[serde(rename = "usTinType", skip_serializing_if = "Option::is_none")]
    pub us_tin_type: Option<UsTinType>,
    #[serde(rename = "giin", skip_serializing_if = "Option::is_none")]
    pub giin: Option<String>,
    #[serde(rename = "referenceNumber", skip_serializing_if = "Option::is_none")]
    pub reference_number: Option<i32>,
    #[serde(rename = "box11Status", skip_serializing_if = "Option::is_none")]
    pub box11_status: Option<Box11Status>,
    #[serde(rename = "part314A", skip_serializing_if = "Option::is_none")]
    pub part314_a: Option<bool>,
    #[serde(rename = "part314B", skip_serializing_if = "Option::is_none")]
    pub part314_b: Option<bool>,
    #[serde(rename = "part314C", skip_serializing_if = "Option::is_none")]
    pub part314_c: Option<bool>,
    #[serde(rename = "part314CDesc", skip_serializing_if = "Option::is_none")]
    pub part314_c_desc: Option<String>,
    #[serde(rename = "part314D", skip_serializing_if = "Option::is_none")]
    pub part314_d: Option<bool>,
    #[serde(rename = "part314DDesc", skip_serializing_if = "Option::is_none")]
    pub part314_d_desc: Option<String>,
    #[serde(rename = "part314E", skip_serializing_if = "Option::is_none")]
    pub part314_e: Option<bool>,
    #[serde(rename = "part314EDesc", skip_serializing_if = "Option::is_none")]
    pub part314_e_desc: Option<String>,
    #[serde(rename = "part314EI", skip_serializing_if = "Option::is_none")]
    pub part314_ei: Option<bool>,
    #[serde(rename = "part314EIi", skip_serializing_if = "Option::is_none")]
    pub part314_eii: Option<bool>,
    #[serde(rename = "part415A", skip_serializing_if = "Option::is_none")]
    pub part415_a: Option<bool>,
    #[serde(rename = "part415B", skip_serializing_if = "Option::is_none")]
    pub part415_b: Option<bool>,
    #[serde(rename = "part415C", skip_serializing_if = "Option::is_none")]
    pub part415_c: Option<bool>,
    #[serde(rename = "part415D", skip_serializing_if = "Option::is_none")]
    pub part415_d: Option<bool>,
    #[serde(rename = "part516A", skip_serializing_if = "Option::is_none")]
    pub part516_a: Option<bool>,
    #[serde(rename = "part516B", skip_serializing_if = "Option::is_none")]
    pub part516_b: Option<bool>,
    #[serde(rename = "part516C", skip_serializing_if = "Option::is_none")]
    pub part516_c: Option<bool>,
    #[serde(rename = "part617A", skip_serializing_if = "Option::is_none")]
    pub part617_a: Option<bool>,
    #[serde(rename = "part617B", skip_serializing_if = "Option::is_none")]
    pub part617_b: Option<bool>,
    #[serde(rename = "part617C", skip_serializing_if = "Option::is_none")]
    pub part617_c: Option<bool>,
    #[serde(rename = "part718", skip_serializing_if = "Option::is_none")]
    pub part718: Option<bool>,
    #[serde(rename = "part819", skip_serializing_if = "Option::is_none")]
    pub part819: Option<bool>,
    #[serde(rename = "part920", skip_serializing_if = "Option::is_none")]
    pub part920: Option<bool>,
    #[serde(rename = "part1021", skip_serializing_if = "Option::is_none")]
    pub part1021: Option<String>,
    #[serde(rename = "part1021A", skip_serializing_if = "Option::is_none")]
    pub part1021_a: Option<String>,
    #[serde(rename = "part1021B", skip_serializing_if = "Option::is_none")]
    pub part1021_b: Option<bool>,
    #[serde(rename = "part1021C", skip_serializing_if = "Option::is_none")]
    pub part1021_c: Option<bool>,
    #[serde(rename = "part1122A", skip_serializing_if = "Option::is_none")]
    pub part1122_a: Option<bool>,
    #[serde(rename = "part1122B", skip_serializing_if = "Option::is_none")]
    pub part1122_b: Option<bool>,
    #[serde(rename = "part1122C", skip_serializing_if = "Option::is_none")]
    pub part1122_c: Option<bool>,
    #[serde(rename = "part1223", skip_serializing_if = "Option::is_none")]
    pub part1223: Option<bool>,
    #[serde(rename = "part1324", skip_serializing_if = "Option::is_none")]
    pub part1324: Option<bool>,
    #[serde(rename = "part1425A", skip_serializing_if = "Option::is_none")]
    pub part1425_a: Option<String>,
    #[serde(rename = "part1425B", skip_serializing_if = "Option::is_none")]
    pub part1425_b: Option<bool>,
    #[serde(rename = "part1526", skip_serializing_if = "Option::is_none")]
    pub part1526: Option<bool>,
    #[serde(rename = "part1627A", skip_serializing_if = "Option::is_none")]
    pub part1627_a: Option<bool>,
    #[serde(rename = "part1627B", skip_serializing_if = "Option::is_none")]
    pub part1627_b: Option<bool>,
    #[serde(rename = "part1627C", skip_serializing_if = "Option::is_none")]
    pub part1627_c: Option<bool>,
    #[serde(rename = "part1728", skip_serializing_if = "Option::is_none")]
    pub part1728: Option<bool>,
    #[serde(rename = "part1829", skip_serializing_if = "Option::is_none")]
    pub part1829: Option<bool>,
    #[serde(rename = "part1829Desc1", skip_serializing_if = "Option::is_none")]
    pub part1829_desc1: Option<String>,
    #[serde(rename = "part1829Desc2", skip_serializing_if = "Option::is_none")]
    pub part1829_desc2: Option<String>,
    #[serde(rename = "part1829Desc3", skip_serializing_if = "Option::is_none")]
    pub part1829_desc3: Option<String>,
    #[serde(rename = "part1930A", skip_serializing_if = "Option::is_none")]
    pub part1930_a: Option<bool>,
    #[serde(rename = "part1930B", skip_serializing_if = "Option::is_none")]
    pub part1930_b: Option<bool>,
    #[serde(rename = "part1930C", skip_serializing_if = "Option::is_none")]
    pub part1930_c: Option<bool>,
    #[serde(rename = "part1930D", skip_serializing_if = "Option::is_none")]
    pub part1930_d: Option<bool>,
    #[serde(rename = "part1930E", skip_serializing_if = "Option::is_none")]
    pub part1930_e: Option<bool>,
    #[serde(rename = "part1930F", skip_serializing_if = "Option::is_none")]
    pub part1930_f: Option<bool>,
    #[serde(rename = "part2031", skip_serializing_if = "Option::is_none")]
    pub part2031: Option<bool>,
    #[serde(rename = "part2132", skip_serializing_if = "Option::is_none")]
    pub part2132: Option<bool>,
    #[serde(rename = "part2132Desc", skip_serializing_if = "Option::is_none")]
    pub part2132_desc: Option<String>,
    #[serde(rename = "part2233", skip_serializing_if = "Option::is_none")]
    pub part2233: Option<bool>,
    #[serde(rename = "part2233Desc", skip_serializing_if = "Option::is_none")]
    pub part2233_desc: Option<String>,
    #[serde(rename = "part2334A", skip_serializing_if = "Option::is_none")]
    pub part2334_a: Option<bool>,
    #[serde(rename = "part2334ADesc", skip_serializing_if = "Option::is_none")]
    pub part2334_a_desc: Option<String>,
    #[serde(rename = "part2334B", skip_serializing_if = "Option::is_none")]
    pub part2334_b: Option<bool>,
    #[serde(rename = "part2334BDesc", skip_serializing_if = "Option::is_none")]
    pub part2334_b_desc: Option<String>,
    #[serde(rename = "part2435", skip_serializing_if = "Option::is_none")]
    pub part2435: Option<bool>,
    #[serde(rename = "part2536", skip_serializing_if = "Option::is_none")]
    pub part2536: Option<bool>,
    #[serde(rename = "part2637", skip_serializing_if = "Option::is_none")]
    pub part2637: Option<bool>,
    #[serde(rename = "part2738", skip_serializing_if = "Option::is_none")]
    pub part2738: Option<String>,
    #[serde(rename = "part2739", skip_serializing_if = "Option::is_none")]
    pub part2739: Option<bool>,
    #[serde(rename = "cert", skip_serializing_if = "Option::is_none")]
    pub cert: Option<bool>,
}

impl FormW8Imy {
    pub fn new() -> FormW8Imy {
        FormW8Imy {
            name: None,
            country_of_incorporation: None,
            disregarded_entity_name: None,
            entity_type: None,
            fatca_status: None,
            us_tin: None,
            us_tin_type: None,
            giin: None,
            reference_number: None,
            box11_status: None,
            part314_a: None,
            part314_b: None,
            part314_c: None,
            part314_c_desc: None,
            part314_d: None,
            part314_d_desc: None,
            part314_e: None,
            part314_e_desc: None,
            part314_ei: None,
            part314_eii: None,
            part415_a: None,
            part415_b: None,
            part415_c: None,
            part415_d: None,
            part516_a: None,
            part516_b: None,
            part516_c: None,
            part617_a: None,
            part617_b: None,
            part617_c: None,
            part718: None,
            part819: None,
            part920: None,
            part1021: None,
            part1021_a: None,
            part1021_b: None,
            part1021_c: None,
            part1122_a: None,
            part1122_b: None,
            part1122_c: None,
            part1223: None,
            part1324: None,
            part1425_a: None,
            part1425_b: None,
            part1526: None,
            part1627_a: None,
            part1627_b: None,
            part1627_c: None,
            part1728: None,
            part1829: None,
            part1829_desc1: None,
            part1829_desc2: None,
            part1829_desc3: None,
            part1930_a: None,
            part1930_b: None,
            part1930_c: None,
            part1930_d: None,
            part1930_e: None,
            part1930_f: None,
            part2031: None,
            part2132: None,
            part2132_desc: None,
            part2233: None,
            part2233_desc: None,
            part2334_a: None,
            part2334_a_desc: None,
            part2334_b: None,
            part2334_b_desc: None,
            part2435: None,
            part2536: None,
            part2637: None,
            part2738: None,
            part2739: None,
            cert: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EntityType {
    #[serde(rename = "QUALIFIED_INTERMEDIARY")]
    QualifiedIntermediary,
    #[serde(rename = "NONQUALIFIED_INTERMEDIARY")]
    NonqualifiedIntermediary,
    #[serde(rename = "TERRITORY_FINANCIAL")]
    TerritoryFinancial,
    #[serde(rename = "US_BRANCH")]
    UsBranch,
    #[serde(rename = "WITHHOLDING_FOREIGN_PARTNERSHIP")]
    WithholdingForeignPartnership,
    #[serde(rename = "WITHHOLDING_FOREIGN_TRUST")]
    WithholdingForeignTrust,
    #[serde(rename = "NONWITHHOLDING_FOREIGN_PARTNERSHIP")]
    NonwithholdingForeignPartnership,
    #[serde(rename = "NONWITHHOLDING_FOREIGN_SIMPLE_TRUST")]
    NonwithholdingForeignSimpleTrust,
    #[serde(rename = "NONWITHHOLDING_FOREIGN_GRANTOR_TRUST")]
    NonwithholdingForeignGrantorTrust,
}

impl Default for EntityType {
    fn default() -> EntityType {
        Self::QualifiedIntermediary
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FatcaStatus {
    #[serde(rename = "NONPARTICIPATING_FFI")]
    NonparticipatingFfi,
    #[serde(rename = "PARTICIPATING_FFI")]
    ParticipatingFfi,
    #[serde(rename = "REPORTING_MODEL1_FFI")]
    ReportingModel1Ffi,
    #[serde(rename = "REPORTING_MODEL2_FFI")]
    ReportingModel2Ffi,
    #[serde(rename = "REGISTERED_DEEMED_COMPLAINT")]
    RegisteredDeemedComplaint,
    #[serde(rename = "TERRITORY_FINANCIAL_INSTITUTION")]
    TerritoryFinancialInstitution,
    #[serde(rename = "SPONSORED_FFI")]
    SponsoredFfi,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLAINT_FFI")]
    CertifiedDeemedComplaintFfi,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLAINT_SPONSORED")]
    CertifiedDeemedComplaintSponsored,
    #[serde(rename = "CERTIFIED_DEEMED_COMPLAINT_LIMITED_LIFE_DEBT")]
    CertifiedDeemedComplaintLimitedLifeDebt,
    #[serde(rename = "OWNER_DOCUMENTED_FFI")]
    OwnerDocumentedFfi,
    #[serde(rename = "RESTRICTED_DISTRIBUTOR")]
    RestrictedDistributor,
    #[serde(rename = "FOREIGN_CENTRAL_BANK_ISSUE")]
    ForeignCentralBankIssue,
    #[serde(rename = "NONREPORTING_IGA_FFO")]
    NonreportingIgaFfo,
    #[serde(rename = "EXEMPT_RETIREMENT_PLAN")]
    ExemptRetirementPlan,
    #[serde(rename = "EXCEPTED_NONFINANCIAL_GROUP_ENTITY")]
    ExceptedNonfinancialGroupEntity,
    #[serde(rename = "EXCEPTED_NONFINANCIAL_STARTUP_COMPANY")]
    ExceptedNonfinancialStartupCompany,
    #[serde(rename = "EXCEPTED_NONFINANCIAL_ENTITY_IN_LIQUIDATION")]
    ExceptedNonfinancialEntityInLiquidation,
    #[serde(rename = "PUBLICLY_TRADED_NFFE")]
    PubliclyTradedNffe,
    #[serde(rename = "EXCEPTED_TERRITORY_NFFE")]
    ExceptedTerritoryNffe,
    #[serde(rename = "ACTIVE_NFFE")]
    ActiveNffe,
    #[serde(rename = "PASSIVE_NFFE")]
    PassiveNffe,
    #[serde(rename = "DIRECT_REPORTING_NFFE")]
    DirectReportingNffe,
    #[serde(rename = "SPONSORED_DIRECT_REPORTING_NFFE")]
    SponsoredDirectReportingNffe,
}

impl Default for FatcaStatus {
    fn default() -> FatcaStatus {
        Self::NonparticipatingFfi
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UsTinType {
    #[serde(rename = "QI-EIN")]
    QiEin,
    #[serde(rename = "WP-EIN")]
    WpEin,
    #[serde(rename = "WT-EIN")]
    WtEin,
    #[serde(rename = "EIN")]
    Ein,
    #[serde(rename = "SSN")]
    Ssn,
    #[serde(rename = "ITIN")]
    Itin,
}

impl Default for UsTinType {
    fn default() -> UsTinType {
        Self::QiEin
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Box11Status {
    #[serde(rename = "LIMITED_BRANCH")]
    LimitedBranch,
    #[serde(rename = "US_BRANCH")]
    UsBranch,
    #[serde(rename = "PARTICIPATING_FFI")]
    ParticipatingFfi,
    #[serde(rename = "REPORTING_MODEL_1_FFI")]
    ReportingModel1Ffi,
    #[serde(rename = "REPORTING_MODEL_2_FFI")]
    ReportingModel2Ffi,
}

impl Default for Box11Status {
    fn default() -> Box11Status {
        Self::LimitedBranch
    }
}
