/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RecurringInstructionDetail {
    #[serde(rename = "instructionName")]
    pub instruction_name: String,
    #[serde(rename = "frequency")]
    pub frequency: Frequency,
    #[serde(rename = "startDate")]
    pub start_date: String,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
}

impl RecurringInstructionDetail {
    pub fn new(
        instruction_name: String,
        frequency: Frequency,
        start_date: String,
    ) -> RecurringInstructionDetail {
        RecurringInstructionDetail {
            instruction_name,
            frequency,
            start_date,
            end_date: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Frequency {
    #[serde(rename = "MONTHLY")]
    Monthly,
    #[serde(rename = "QUARTERLY")]
    Quarterly,
    #[serde(rename = "YEARLY")]
    Yearly,
}

impl Default for Frequency {
    fn default() -> Frequency {
        Self::Monthly
    }
}
