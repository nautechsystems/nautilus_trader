/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SummaryMarketValueResponseCurrency : Returns an object containing market value details of the currency and positions held using that currency.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SummaryMarketValueResponseCurrency {
    /// Lists the total cash held for the given currency.
    #[serde(rename = "total_cash", skip_serializing_if = "Option::is_none")]
    pub total_cash: Option<String>,
    /// Cash recognized at the time of settlement minus the purchases at time of trade, commissions, taxes, and fees.
    #[serde(rename = "settled_cash", skip_serializing_if = "Option::is_none")]
    pub settled_cash: Option<String>,
    /// Total Month-to-date interest.
    #[serde(rename = "MTD Interest", skip_serializing_if = "Option::is_none")]
    pub mtd_interest: Option<String>,
    /// Total cash value of stocks held.
    #[serde(rename = "stock", skip_serializing_if = "Option::is_none")]
    pub stock: Option<String>,
    /// Total cash value of options held.
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<String>,
    /// Total cash value of futures held.
    #[serde(rename = "futures", skip_serializing_if = "Option::is_none")]
    pub futures: Option<String>,
    /// Total cash value of future options held.
    #[serde(rename = "future_options", skip_serializing_if = "Option::is_none")]
    pub future_options: Option<String>,
    /// Total cash value of funds held.
    #[serde(rename = "funds", skip_serializing_if = "Option::is_none")]
    pub funds: Option<String>,
    /// Total cash value of receivable dividends.
    #[serde(rename = "dividends_receivable", skip_serializing_if = "Option::is_none")]
    pub dividends_receivable: Option<String>,
    /// Total cash value of mutual funds held.
    #[serde(rename = "mutual_funds", skip_serializing_if = "Option::is_none")]
    pub mutual_funds: Option<String>,
    /// Total cash value of money market securities held.
    #[serde(rename = "money_market", skip_serializing_if = "Option::is_none")]
    pub money_market: Option<String>,
    /// Total cash value of bonds held.
    #[serde(rename = "bonds", skip_serializing_if = "Option::is_none")]
    pub bonds: Option<String>,
    /// Total cash value of goverment bonds held.
    #[serde(rename = "Govt Bonds", skip_serializing_if = "Option::is_none")]
    pub govt_bonds: Option<String>,
    /// Total cash value of t-bill bonds held.
    #[serde(rename = "t_bills", skip_serializing_if = "Option::is_none")]
    pub t_bills: Option<String>,
    /// Total cash value of warrants held.
    #[serde(rename = "warrants", skip_serializing_if = "Option::is_none")]
    pub warrants: Option<String>,
    /// Total cash value of issuer options held.
    #[serde(rename = "issuer_option", skip_serializing_if = "Option::is_none")]
    pub issuer_option: Option<String>,
    /// Total cash value of commodities held.
    #[serde(rename = "commodity", skip_serializing_if = "Option::is_none")]
    pub commodity: Option<String>,
    /// Total cash value of notional CFDs held.
    #[serde(rename = "Notional CFD", skip_serializing_if = "Option::is_none")]
    pub notional_cfd: Option<String>,
    /// Total cash value of CFDs held.
    #[serde(rename = "cfd", skip_serializing_if = "Option::is_none")]
    pub cfd: Option<String>,
    /// Total cash value of your net liquidty.
    #[serde(rename = "net_liquidation", skip_serializing_if = "Option::is_none")]
    pub net_liquidation: Option<String>,
    /// Total daily unrealized profit and loss.
    #[serde(rename = "unrealized_pnl", skip_serializing_if = "Option::is_none")]
    pub unrealized_pnl: Option<String>,
    /// Total daily realized profit and loss.
    #[serde(rename = "realized_pnl", skip_serializing_if = "Option::is_none")]
    pub realized_pnl: Option<String>,
    /// Exchange rate of the labeled currency to the base currency.
    #[serde(rename = "Exchange Rate", skip_serializing_if = "Option::is_none")]
    pub exchange_rate: Option<String>,
}

impl SummaryMarketValueResponseCurrency {
    /// Returns an object containing market value details of the currency and positions held using that currency.
    pub fn new() -> SummaryMarketValueResponseCurrency {
        SummaryMarketValueResponseCurrency {
            total_cash: None,
            settled_cash: None,
            mtd_interest: None,
            stock: None,
            options: None,
            futures: None,
            future_options: None,
            funds: None,
            dividends_receivable: None,
            mutual_funds: None,
            money_market: None,
            bonds: None,
            govt_bonds: None,
            t_bills: None,
            warrants: None,
            issuer_option: None,
            commodity: None,
            notional_cfd: None,
            cfd: None,
            net_liquidation: None,
            unrealized_pnl: None,
            realized_pnl: None,
            exchange_rate: None,
        }
    }
}
