/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExternalPositionTransfer {
    #[serde(rename = "clientInstructionId")]
    pub client_instruction_id: f64,
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "subType")]
    pub sub_type: SubType,
    #[serde(rename = "brokerId")]
    pub broker_id: String,
    #[serde(rename = "brokerName")]
    pub broker_name: String,
    #[serde(rename = "accountAtBroker")]
    pub account_at_broker: String,
    #[serde(rename = "sourceIRAType", skip_serializing_if = "Option::is_none")]
    pub source_ira_type: Option<SourceIraType>,
    #[serde(rename = "accountId")]
    pub account_id: String,
    #[serde(rename = "signature")]
    pub signature: String,
}

impl ExternalPositionTransfer {
    pub fn new(client_instruction_id: f64, r#type: Type, sub_type: SubType, broker_id: String, broker_name: String, account_at_broker: String, account_id: String, signature: String) -> ExternalPositionTransfer {
        ExternalPositionTransfer {
            client_instruction_id,
            r#type,
            sub_type,
            broker_id,
            broker_name,
            account_at_broker,
            source_ira_type: None,
            account_id,
            signature,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "FULL")]
    Full,
}

impl Default for Type {
    fn default() -> Type {
        Self::Full
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubType {
    #[serde(rename = "ACATS")]
    Acats,
    #[serde(rename = "ATON")]
    Aton,
}

impl Default for SubType {
    fn default() -> SubType {
        Self::Acats
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SourceIraType {
    #[serde(rename = "RO")]
    Ro,
    #[serde(rename = "RI")]
    Ri,
    #[serde(rename = "RT")]
    Rt,
    #[serde(rename = "SP")]
    Sp,
    #[serde(rename = "ED")]
    Ed,
    #[serde(rename = "TH")]
    Th,
    #[serde(rename = "RH")]
    Rh,
    #[serde(rename = "SH")]
    Sh,
}

impl Default for SourceIraType {
    fn default() -> SourceIraType {
        Self::Ro
    }
}
