/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FormFileResponse {
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<models::ErrorResponse>>,
    #[serde(rename = "hasError", skip_serializing_if = "Option::is_none")]
    pub has_error: Option<bool>,
    #[serde(rename = "errorDescription", skip_serializing_if = "Option::is_none")]
    pub error_description: Option<String>,
    #[serde(rename = "fileData", skip_serializing_if = "Option::is_none")]
    pub file_data: Option<Box<models::FileData>>,
    #[serde(rename = "formDetails", skip_serializing_if = "Option::is_none")]
    pub form_details: Option<Vec<models::FormDetails>>,
}

impl FormFileResponse {
    pub fn new() -> FormFileResponse {
        FormFileResponse {
            error: None,
            has_error: None,
            error_description: None,
            file_data: None,
            form_details: None,
        }
    }
}
