/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetExperience {
    #[serde(rename = "assetClass", skip_serializing_if = "Option::is_none")]
    pub asset_class: Option<AssetClass>,
    #[serde(rename = "yearsTrading", skip_serializing_if = "Option::is_none")]
    pub years_trading: Option<i32>,
    #[serde(rename = "tradesPerYear", skip_serializing_if = "Option::is_none")]
    pub trades_per_year: Option<i32>,
    #[serde(rename = "knowledgeLevel", skip_serializing_if = "Option::is_none")]
    pub knowledge_level: Option<KnowledgeLevel>,
}

impl AssetExperience {
    pub fn new() -> AssetExperience {
        AssetExperience {
            asset_class: None,
            years_trading: None,
            trades_per_year: None,
            knowledge_level: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AssetClass {
    #[serde(rename = "BILL")]
    Bill,
    #[serde(rename = "BOND")]
    Bond,
    #[serde(rename = "CASH")]
    Cash,
    #[serde(rename = "CFD")]
    Cfd,
    #[serde(rename = "COMB")]
    Comb,
    #[serde(rename = "FOP")]
    Fop,
    #[serde(rename = "FUND")]
    Fund,
    #[serde(rename = "FUT")]
    Fut,
    #[serde(rename = "OPT")]
    Opt,
    #[serde(rename = "SSF")]
    Ssf,
    #[serde(rename = "STK")]
    Stk,
    #[serde(rename = "WAR")]
    War,
    #[serde(rename = "MRGN")]
    Mrgn,
}

impl Default for AssetClass {
    fn default() -> AssetClass {
        Self::Bill
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum KnowledgeLevel {
    #[serde(rename = "Extensive")]
    Extensive,
    #[serde(rename = "Good")]
    Good,
    #[serde(rename = "Limited")]
    Limited,
    #[serde(rename = "None")]
    None,
}

impl Default for KnowledgeLevel {
    fn default() -> KnowledgeLevel {
        Self::Extensive
    }
}
