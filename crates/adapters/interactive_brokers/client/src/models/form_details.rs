/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FormDetails {
    #[serde(rename = "formNumber", skip_serializing_if = "Option::is_none")]
    pub form_number: Option<i32>,
    #[serde(rename = "sha1Checksum", skip_serializing_if = "Option::is_none")]
    pub sha1_checksum: Option<String>,
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    #[serde(rename = "fileName", skip_serializing_if = "Option::is_none")]
    pub file_name: Option<String>,
    #[serde(rename = "language", skip_serializing_if = "Option::is_none")]
    pub language: Option<String>,
    #[serde(rename = "formName", skip_serializing_if = "Option::is_none")]
    pub form_name: Option<String>,
    #[serde(rename = "payload", skip_serializing_if = "Option::is_none")]
    pub payload: Option<Box<models::FormPayload>>,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<models::ErrorResponse>>,
    #[serde(rename = "hasError", skip_serializing_if = "Option::is_none")]
    pub has_error: Option<bool>,
    #[serde(rename = "errorDescription", skip_serializing_if = "Option::is_none")]
    pub error_description: Option<String>,
    #[serde(rename = "fileLength", skip_serializing_if = "Option::is_none")]
    pub file_length: Option<i64>,
}

impl FormDetails {
    pub fn new() -> FormDetails {
        FormDetails {
            form_number: None,
            sha1_checksum: None,
            date_modified: None,
            file_name: None,
            language: None,
            form_name: None,
            payload: None,
            error: None,
            has_error: None,
            error_description: None,
            file_length: None,
        }
    }
}
