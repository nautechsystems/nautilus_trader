/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InternalPositionTransferInstruction {
    #[serde(rename = "clientInstructionId")]
    pub client_instruction_id: f64,
    #[serde(rename = "sourceAccountId")]
    pub source_account_id: String,
    #[serde(rename = "targetAccountId")]
    pub target_account_id: String,
    #[serde(rename = "transferQuantity")]
    pub transfer_quantity: f64,
    #[serde(rename = "tradingInstrument", deserialize_with = "Option::deserialize")]
    pub trading_instrument: Option<Box<serde_json::Value>>,
    /// If transferPrice is provided then tradeDate and settleDate are also required
    #[serde(rename = "transferPrice", skip_serializing_if = "Option::is_none")]
    pub transfer_price: Option<f64>,
    /// If tradeDate is provided then settleDate is also required
    #[serde(rename = "tradeDate", skip_serializing_if = "Option::is_none")]
    pub trade_date: Option<String>,
    /// If settleDate is provided then tradeDate is also required
    #[serde(rename = "settleDate", skip_serializing_if = "Option::is_none")]
    pub settle_date: Option<String>,
}

impl InternalPositionTransferInstruction {
    pub fn new(
        client_instruction_id: f64,
        source_account_id: String,
        target_account_id: String,
        transfer_quantity: f64,
        trading_instrument: Option<serde_json::Value>,
    ) -> InternalPositionTransferInstruction {
        InternalPositionTransferInstruction {
            client_instruction_id,
            source_account_id,
            target_account_id,
            transfer_quantity,
            trading_instrument: trading_instrument.map(Box::new),
            transfer_price: None,
            trade_date: None,
            settle_date: None,
        }
    }
}
