/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PerformanceResponseCpsDataInner {
    /// Returns the key value of the request.
    #[serde(rename = "idType", skip_serializing_if = "Option::is_none")]
    pub id_type: Option<String>,
    /// Returns the starting value of the value range.
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<String>,
    /// Returns the ending value of the value range.
    #[serde(rename = "end", skip_serializing_if = "Option::is_none")]
    pub end: Option<String>,
    /// Returns all cps values in order between the start and end times.
    #[serde(rename = "returns", skip_serializing_if = "Option::is_none")]
    pub returns: Option<Vec<String>>,
    /// Returns the account identifier.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Returns the base curency for the account.
    #[serde(rename = "baseCurrency", skip_serializing_if = "Option::is_none")]
    pub base_currency: Option<String>,
}

impl PerformanceResponseCpsDataInner {
    pub fn new() -> PerformanceResponseCpsDataInner {
        PerformanceResponseCpsDataInner {
            id_type: None,
            start: None,
            end: None,
            returns: None,
            id: None,
            base_currency: None,
        }
    }
}
