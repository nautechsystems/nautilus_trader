/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.15.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountManagementRequests {
    #[serde(rename = "updateExternalId", skip_serializing_if = "Option::is_none")]
    pub update_external_id: Option<Box<models::UpdateExternalId>>,
    #[serde(rename = "updatePropertyProfile", skip_serializing_if = "Option::is_none")]
    pub update_property_profile: Option<Box<models::UpdatePropertyProfile>>,
    #[serde(rename = "updateAccountAlias", skip_serializing_if = "Option::is_none")]
    pub update_account_alias: Option<Box<models::UpdateAccountAlias>>,
    #[serde(rename = "changeBaseCurrency", skip_serializing_if = "Option::is_none")]
    pub change_base_currency: Option<Box<models::ChangeBaseCurrency>>,
    #[serde(rename = "abandonAccount", skip_serializing_if = "Option::is_none")]
    pub abandon_account: Option<Box<models::AbandonAccount>>,
    #[serde(rename = "addNewUser", skip_serializing_if = "Option::is_none")]
    pub add_new_user: Option<Box<models::AddNewUser>>,
    #[serde(rename = "addLevFxCapability", skip_serializing_if = "Option::is_none")]
    pub add_lev_fx_capability: Option<Box<models::AddLevfxCapability>>,
    #[serde(rename = "addMiFirData", skip_serializing_if = "Option::is_none")]
    pub add_mi_fir_data: Option<Box<models::AddMiFirData>>,
    #[serde(rename = "addTradingPermissions", skip_serializing_if = "Option::is_none")]
    pub add_trading_permissions: Option<Box<models::AddTradingPermissions>>,
    #[serde(rename = "removeTradingPermissions", skip_serializing_if = "Option::is_none")]
    pub remove_trading_permissions: Option<Box<models::RemoveTradingPermissions>>,
    #[serde(rename = "changeMarginType", skip_serializing_if = "Option::is_none")]
    pub change_margin_type: Option<Box<models::ChangeMarginType>>,
    #[serde(rename = "addCLPCapability", skip_serializing_if = "Option::is_none")]
    pub add_clp_capability: Option<Box<models::AddClpCapability>>,
    #[serde(rename = "changeFinancialInformation", skip_serializing_if = "Option::is_none")]
    pub change_financial_information: Option<Box<models::ChangeFinancialInformation>>,
    #[serde(rename = "resetAbandonedAccount", skip_serializing_if = "Option::is_none")]
    pub reset_abandoned_account: Option<Box<models::ResetAbandonedAccount>>,
    #[serde(rename = "updateCredentials", skip_serializing_if = "Option::is_none")]
    pub update_credentials: Option<Box<models::UpdateCredentials>>,
    #[serde(rename = "updateAccountRepresentatives", skip_serializing_if = "Option::is_none")]
    pub update_account_representatives: Option<Box<models::UpdateAccountRepresentatives>>,
    #[serde(rename = "completeLoginMessage", skip_serializing_if = "Option::is_none")]
    pub complete_login_message: Option<Box<models::CompleteLoginMessage>>,
    #[serde(rename = "reopenAccount", skip_serializing_if = "Option::is_none")]
    pub reopen_account: Option<Box<models::ReopenAccount>>,
    #[serde(rename = "enrollInSyep", skip_serializing_if = "Option::is_none")]
    pub enroll_in_syep: Option<Box<models::EnrollInSyep>>,
    #[serde(rename = "leaveSyep", skip_serializing_if = "Option::is_none")]
    pub leave_syep: Option<Box<models::LeaveSyep>>,
    #[serde(rename = "enrollInDrip", skip_serializing_if = "Option::is_none")]
    pub enroll_in_drip: Option<Box<models::EnrollInDrip>>,
    #[serde(rename = "leaveDrip", skip_serializing_if = "Option::is_none")]
    pub leave_drip: Option<Box<models::LeaveDrip>>,
    #[serde(rename = "updateW8Ben", skip_serializing_if = "Option::is_none")]
    pub update_w8_ben: Option<Box<models::UpdateW8Ben>>,
    #[serde(rename = "yodleeSession", skip_serializing_if = "Option::is_none")]
    pub yodlee_session: Option<Box<models::YodleeSession>>,
    #[serde(rename = "enableAccountInBrokerage", skip_serializing_if = "Option::is_none")]
    pub enable_account_in_brokerage: Option<Box<models::EnableAccountInBrokerage>>,
    #[serde(rename = "disableAccountInBrokerage", skip_serializing_if = "Option::is_none")]
    pub disable_account_in_brokerage: Option<Box<models::DisableAccountInBrokerage>>,
    #[serde(rename = "linkDuplicateAccount", skip_serializing_if = "Option::is_none")]
    pub link_duplicate_account: Option<Box<models::LinkDuplicateAccount>>,
    #[serde(rename = "duplicateAccount", skip_serializing_if = "Option::is_none")]
    pub duplicate_account: Option<Box<models::DuplicateAccount>>,
    #[serde(rename = "achInstruction", skip_serializing_if = "Option::is_none")]
    pub ach_instruction: Option<Box<models::AchInstruction>>,
    #[serde(rename = "recurringTransaction", skip_serializing_if = "Option::is_none")]
    pub recurring_transaction: Option<Box<models::RecurringTransaction>>,
    #[serde(rename = "depositNotification", skip_serializing_if = "Option::is_none")]
    pub deposit_notification: Option<Box<models::DepositNotification>>,
    #[serde(rename = "documentSubmission", skip_serializing_if = "Option::is_none")]
    pub document_submission: Option<Box<models::DocumentSubmission>>,
    #[serde(rename = "processDocuments", skip_serializing_if = "Option::is_none")]
    pub process_documents: Option<Box<models::ProcessDocuments>>,
    #[serde(rename = "updateBcan", skip_serializing_if = "Option::is_none")]
    pub update_bcan: Option<Box<models::UpdateBcan>>,
    #[serde(rename = "prohibitedCountryQuestionnaire", skip_serializing_if = "Option::is_none")]
    pub prohibited_country_questionnaire: Option<Box<models::ProhibitedCountryQuestionnaire>>,
    #[serde(rename = "updateWithholdingStatement", skip_serializing_if = "Option::is_none")]
    pub update_withholding_statement: Option<Box<models::UpdateWithholdingStatement>>,
    #[serde(rename = "accreditedInvestor", skip_serializing_if = "Option::is_none")]
    pub accredited_investor: Option<Box<models::AccreditedInvestor>>,
    #[serde(rename = "changeAccountHolderDetail", skip_serializing_if = "Option::is_none")]
    pub change_account_holder_detail: Option<Box<models::ChangeAccountHolderDetail>>,
    #[serde(rename = "getJavaScript", skip_serializing_if = "Option::is_none")]
    pub get_java_script: Option<Box<models::GetJavaScript>>,
    #[serde(rename = "updateUserAccessRights", skip_serializing_if = "Option::is_none")]
    pub update_user_access_rights: Option<Box<models::UpdateUserAccessRights>>,
    #[serde(rename = "informationChange", skip_serializing_if = "Option::is_none")]
    pub information_change: Option<Box<models::InformationChange>>,
    #[serde(rename = "addAdditionalAccount", skip_serializing_if = "Option::is_none")]
    pub add_additional_account: Option<Box<models::AddAdditionalAccount>>,
    #[serde(rename = "accountConfiguration", skip_serializing_if = "Option::is_none")]
    pub account_configuration: Option<Box<models::AccountConfiguration>>,
    #[serde(rename = "allocateVan", skip_serializing_if = "Option::is_none")]
    pub allocate_van: Option<Box<models::AllocateVan>>,
    #[serde(rename = "createUserForSecondHolder", skip_serializing_if = "Option::is_none")]
    pub create_user_for_second_holder: Option<Box<models::CreateUserForSecondHolder>>,
    #[serde(rename = "createUser", skip_serializing_if = "Option::is_none")]
    pub create_user: Option<Box<models::CreateUser>>,
    #[serde(rename = "updateTaxForm", skip_serializing_if = "Option::is_none")]
    pub update_tax_form: Option<Box<models::UpdateTaxForm>>,
    #[serde(rename = "questionnaires", skip_serializing_if = "Option::is_none")]
    pub questionnaires: Option<Box<models::Questionnaires>>,
    #[serde(rename = "securityQuestions", skip_serializing_if = "Option::is_none")]
    pub security_questions: Option<Box<models::SecurityQuestions>>,
    #[serde(rename = "applyFeeTemplate", skip_serializing_if = "Option::is_none")]
    pub apply_fee_template: Option<Box<models::ApplyFeeTemplate>>,
    #[serde(rename = "accountClose", skip_serializing_if = "Option::is_none")]
    pub account_close: Option<Box<models::AccountClose>>,
    #[serde(rename = "manageMarketDataSubscriptions", skip_serializing_if = "Option::is_none")]
    pub manage_market_data_subscriptions: Option<Box<models::ManageMarketDataSubscriptions>>,
    #[serde(rename = "quizQuestionnaires", skip_serializing_if = "Option::is_none")]
    pub quiz_questionnaires: Option<Box<models::QuizQuestionnaires>>,
}

impl AccountManagementRequests {
    pub fn new() -> AccountManagementRequests {
        AccountManagementRequests {
            update_external_id: None,
            update_property_profile: None,
            update_account_alias: None,
            change_base_currency: None,
            abandon_account: None,
            add_new_user: None,
            add_lev_fx_capability: None,
            add_mi_fir_data: None,
            add_trading_permissions: None,
            remove_trading_permissions: None,
            change_margin_type: None,
            add_clp_capability: None,
            change_financial_information: None,
            reset_abandoned_account: None,
            update_credentials: None,
            update_account_representatives: None,
            complete_login_message: None,
            reopen_account: None,
            enroll_in_syep: None,
            leave_syep: None,
            enroll_in_drip: None,
            leave_drip: None,
            update_w8_ben: None,
            yodlee_session: None,
            enable_account_in_brokerage: None,
            disable_account_in_brokerage: None,
            link_duplicate_account: None,
            duplicate_account: None,
            ach_instruction: None,
            recurring_transaction: None,
            deposit_notification: None,
            document_submission: None,
            process_documents: None,
            update_bcan: None,
            prohibited_country_questionnaire: None,
            update_withholding_statement: None,
            accredited_investor: None,
            change_account_holder_detail: None,
            get_java_script: None,
            update_user_access_rights: None,
            information_change: None,
            add_additional_account: None,
            account_configuration: None,
            allocate_van: None,
            create_user_for_second_holder: None,
            create_user: None,
            update_tax_form: None,
            questionnaires: None,
            security_questions: None,
            apply_fee_template: None,
            account_close: None,
            manage_market_data_subscriptions: None,
            quiz_questionnaires: None,
        }
    }
}
