# Dockerfile to reproduce locally an environment similar to what is run on the github runner
#
# From nautilus' MAIN directory:
#
# Build the image:
# docker build -f .docker/DockerfileUbuntu -t nautilus-dev .
#
# Run interactively with local directory mounted:
# docker run -it --rm -v "$(pwd)":/workspace nautilus-dev bash
#
# Or run the default entrypoint:
# docker run --rm -v "$(pwd)":/workspace nautilus-dev
#
# Remove the image
# docker image rm nautilus-dev

FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV BUILD_MODE=release
ENV RUST_BACKTRACE=1
ENV CARGO_INCREMENTAL=1
ENV CC="clang"
ENV CXX="clang++"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    clang \
    git \
    pkg-config \
    make \
    capnproto \
    libcapnp-dev \
    gcc-aarch64-linux-gnu \
    && rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
ENV PATH="/root/.cargo/bin:${PATH}"

# Install mold linker
RUN curl -L https://github.com/rui314/mold/releases/download/v2.35.1/mold-2.35.1-x86_64-linux.tar.gz | tar -xz -C /usr/local --strip-components=1

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.cargo/bin:/root/.local/bin:${PATH}"

# Install Python 3.13
RUN uv python install

# Set working directory
WORKDIR /workspace

# Copy only necessary files for dependency setup
# The actual source code will be mounted as a volume
COPY ../scripts/rust-toolchain.sh scripts/
COPY ../Cargo.toml Cargo.lock pyproject.toml rust-toolchain.toml ./

# Set up Rust toolchain based on project requirements
RUN bash scripts/rust-toolchain.sh > /tmp/toolchain.txt && \
    TOOLCHAIN=$(cat /tmp/toolchain.txt) && \
    rustup toolchain install $TOOLCHAIN && \
    rustup default $TOOLCHAIN && \
    rustup component add clippy rustfmt

# Create entrypoint script for interactive development
RUN echo '#!/bin/bash\n\
set -e\n\
echo "=== Nautilus Trader Development Environment ==="\n\
echo "Python version: $(python --version)"\n\
echo "Rust version: $(rustc --version)"\n\
echo "UV version: $(uv --version)"\n\
echo "Working directory: $(pwd)"\n\
echo\n\
echo "=== Setting PyO3 environment ==="\n\
export PYO3_PYTHON=/workspace/.venv/bin/python3\n\
echo "PYO3_PYTHON: $PYO3_PYTHON"\n\
echo\n\
echo "=== Development environment ready! ==="\n\
echo "You can now run for example:"\n\
echo "  make install-debug                                            # Install nautilus in debug mode"\n\
echo "  make cargo-test                                               # Test Rust code"\n\
echo "  make pytest                                                   # Run Python tests"\n\
echo "  uv run python -c \"import nautilus_trader.backtest.engine;\"    # Run a Python instruction"\n\
echo\n\
# If no command is provided, start an interactive bash shell\n\
if [ $# -eq 0 ]; then\n\
    exec bash -i\n\
else\n\
    exec "$@"\n\
fi\n\
' > /entrypoint.sh && chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]